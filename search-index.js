var searchIndex = JSON.parse('{\
"trillium":{"doc":"Welcome to the <code>trillium</code> crate!","tn":["Accept","AcceptCh","AcceptChLifetime","AcceptCharset","AcceptEncoding","AcceptLanguage","AcceptPushPolicy","AcceptRanges","AcceptSignature","Accepted","AccessControlAllowCredentials","AccessControlAllowHeaders","AccessControlAllowMethods","AccessControlAllowOrigin","AccessControlExposeHeaders","AccessControlMaxAge","AccessControlRequestHeaders","AccessControlRequestMethod","Acl","Age","Allow","AltSvc","Authorization","BadGateway","BadRequest","BaselineControl","Bind","Body","CacheControl","Checkin","Checkout","ClearSiteData","Conflict","Conn","Connect","Connection","ContentDisposition","ContentDpr","ContentEncoding","ContentLanguage","ContentLength","ContentLocation","ContentRange","ContentSecurityPolicy","ContentSecurityPolicyReportOnly","ContentType","Continue","Cookie","Cookie2","Copy","Created","CrossOriginEmbedderPolicy","CrossOriginOpenerPolicy","CrossOriginResourcePolicy","Date","Delete","DeviceMemory","Dnt","Downlink","Dpr","EarlyData","EarlyHints","Ect","Etag","Expect","ExpectCt","ExpectationFailed","Expires","FailedDependency","FeaturePolicy","Forbidden","Forwarded","Found","From","GatewayTimeout","Get","Gone","Handler","Head","HeaderName","HeaderValue","HeaderValues","Headers","Host","Http0_9","Http1_0","Http1_1","Http2_0","Http3_0","HttpVersionNotSupported","IfMatch","IfModifiedSince","IfNoneMatch","IfRange","IfUnmodifiedSince","ImATeapot","ImUsed","Info","Init","InsufficientStorage","InternalServerError","KeepAlive","KnownHeaderName","Label","LargeAllocation","LastEventId","LastModified","LengthRequired","Link","Link","Location","Lock","Locked","LoopDetected","MaxForwards","Merge","Method","MethodNotAllowed","MisdirectedRequest","MkActivity","MkCalendar","MkCol","MkRedirectRef","MkWorkspace","Move","MovedPermanently","MultiStatus","MultipleChoice","Nel","NetworkAuthenticationRequired","NoContent","NonAuthoritativeInformation","NotAcceptable","NotExtended","NotFound","NotImplemented","NotModified","Ok","Options","OrderPatch","Origin","OriginIsolation","PartialContent","Patch","PayloadTooLarge","PaymentRequired","PermanentRedirect","PingFrom","PingTo","Post","Pragma","PreconditionFailed","PreconditionRequired","Pri","PropFind","PropPatch","ProxyAuthenticate","ProxyAuthenticationRequired","ProxyAuthorization","ProxyConnection","PublicKeyPins","PublicKeyPinsReportOnly","PushPolicy","Put","Range","Rebind","Referer","ReferrerPolicy","RefreshCache","Report","ReportTo","RequestHeaderFieldsTooLarge","RequestTimeout","RequestedRangeNotSatisfiable","ResetContent","RetryAfter","Rtt","SaveData","Search","SecChUAMobile","SecChUa","SecFetchDest","SecFetchMode","SecFetchSite","SecFetchUser","SecGpc","SecWebsocketAccept","SecWebsocketExtensions","SecWebsocketKey","SecWebsocketProtocol","SecWebsocketVersion","SeeOther","Server","ServerTiming","ServiceUnavailable","ServiceWorkerAllowed","SetCookie","SetCookie2","Signature","SignedHeaders","Sourcemap","State","StateSet","Status","StrictTransportSecurity","SwitchingProtocols","Te","TemporaryRedirect","TimingAllowOrigin","TooEarly","TooManyRequests","Trace","Trailer","TransferEncoding","Unauthorized","UnavailableForLegalReasons","Unbind","Uncheckout","Unlink","Unlock","UnprocessableEntity","UnsupportedMediaType","Update","UpdateRedirectRef","Upgrade","Upgrade","UpgradeInsecureRequests","UpgradeRequired","UriTooLong","UserAgent","VariantAlsoNegotiates","Vary","Version","VersionControl","Via","ViewportWidth","Warning","Width","WwwAuthenticate","XcontentTypeOptions","XdnsPrefetchControl","XdownloadOptions","XfirefoxSpdy","XforwardedBy","XforwardedFor","XforwardedHost","XforwardedProto","XforwardedSsl","XframeOptions","XpermittedCrossDomainPolicies","Xpingback","XpoweredBy","XrequestId","XrequestedWith","XrobotsTag","XuaCompatible","XxssProtection","append","append","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","async_trait","before_send","before_send","before_send","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_read","canonical_reason","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","conn_try","conn_unwrap","contains","contains_ignore_ascii_case","default","default","default","default","default","default","delegate_handler","deref","deref_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_ignore_ascii_case","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","from_str","get","get","get_hash","get_hash","get_hash","get_hash","get_mut","get_or_insert","get_or_insert_with","get_str","get_values","halt","has_header","has_upgrade","has_upgrade","has_upgrade","hash","hash","hash","hash","headers","headers_mut","init","init","init","init","inner","inner_mut","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_inner","into_iter","into_iter","into_owned","into_reader","is_client_error","is_empty","is_halted","is_informational","is_redirection","is_safe","is_secure","is_server_error","is_static","is_streaming","is_success","iter","len","listener_description","listener_description_mut","log","log_error","method","mut_state_or_insert_with","name","name","name","ne","ne","new","new","new","new","new","new_static","new_streaming","ok","one","partial_cmp","partial_cmp","path","poll_read","pop_path","push_path","querystring","remove","request_body","request_body_string","reserve","response_len","run","run","run","run","server_description","server_description_mut","set_body","set_halted","set_state","set_status","state","state","state_mut","static_bytes","status","take","take_response_body","take_state","tcp_socket_addr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","upgrade","upgrade","with_body","with_capacity","with_header","with_state","with_status"],"q":["trilliumd":["The Accept header.","The Accept-CH header.","The Accept-CH-Lifetime header.","The Accept-Charset header.","The Accept-Encoding header.","The Accept-Language header.","The Accept-Push-Policy header.","The Accept-Ranges header.","The Accept-Signature header.","202 Accepted","The Access-Control-Allow-Credentials header.","The Access-Control-Allow-Headers header.","The Access-Control-Allow-Methods header.","The Access-Control-Allow-Origin header.","The Access-Control-Expose-Headers header.","The Access-Control-Max-Age header.","The Access-Control-Request-Headers header.","The Access-Control-Request-Method header.","The ACL method modifies the access control list (which can …","The Age header.","The Allow header.","The Alt-Svc header.","The Authorization header.","502 Bad Gateway","400 Bad Request","A collection can be placed under baseline control with a …","The BIND method modifies the collection identified by the …","The trillium representation of a http body. This can …","The Cache-Control header.","A CHECKIN request can be applied to a checked-out …","A CHECKOUT request can be applied to a checked-in …","The Clear-Site-Data header.","409 Conflict","A Trillium HTTP connection.","The CONNECT method requests that the recipient establish a …","The Connection header.","The Content-Disposition header.","The Content-DPR header.","The Content-Encoding header.","The Content-Language header.","The Content-Length header.","The Content-Location header.","The Content-Range header.","The Content-Security-Policy header.","The Content-Security-Policy-Report-Only header.","The Content-Type header.","100 Continue","The Cookie header.","The Cookie2 header.","The COPY method creates a duplicate of the source resource …","201 Created","The Cross-Origin-Embedder-Policy header.","The Cross-Origin-Opener-Policy header.","The Cross-Origin-Resource-Policy header.","The Date header.","The DELETE method requests that the origin server remove …","The Device-Memory header.","The DNT header.","The Downlink header.","The DPR header.","The Early-Data header.","103 Early Hints","The ECT header.","The ETag header.","The Expect header.","The Expect-CT header.","417 Expectation Failed","The Expires header.","424 Failed Dependency","The Feature-Policy header.","403 Forbidden","The Forwarded header.","302 Found","The From header.","504 Gateway Timeout","The GET method requests transfer of a current selected …","410 Gone","The building block for Trillium applications.","The HEAD method is identical to GET except that the server …","The name of a http header. This can be either a …","A <code>HeaderValue</code> represents the right hand side of a single …","A header value is a collection of one or more <code>HeaderValue</code>. …","Trillium’s header map type","The Host header.","HTTP/0.9","HTTP/1.0","HTTP/1.1","HTTP/2.0","HTTP/3.0","505 HTTP Version Not Supported","The If-Match header.","The If-Modified-Since header.","The If-None-Match header.","The If-Range header.","The If-Unmodified-Since header.","418 I’m a teapot","226 Im Used","This struct represents information about the currently …","Provides support for asynchronous initialization of a …","507 Insufficient Storage","500 Internal Server Error","The Keep-Alive header.","A short nonehaustive enum of headers that trillium can …","A LABEL request can be applied to a version to modify the …","The Large-Allocation header.","The Last-Event-ID header.","The Last-Modified header.","411 Length Required","The Link header.","The LINK method establishes one or more Link relationships …","The Location header.","The LOCK method is used to take out a lock of any access …","423 Locked","508 Loop Detected","The Max-Forwards header.","The MERGE method performs the logical merge of a specified …","HTTP request methods.","405 Method Not Allowed","421 Misdirected Request","A MKACTIVITY request creates a new activity resource.","An HTTP request using the MKCALENDAR method creates a new …","MKCOL creates a new collection resource at the location …","The MKREDIRECTREF method requests the creation of a …","A MKWORKSPACE request creates a new workspace resource.","The MOVE operation on a non-collection resource is the …","301 Moved Permanently","207 Multi-Status","300 Multiple Choice","The NEL header.","511 Network Authentication Required","204 No Content","203 Non Authoritative Information","406 Not Acceptable","510 Not Extended","404 Not Found","501 Not Implemented","304 Not Modified","200 Ok","The OPTIONS method requests information about the …","The ORDERPATCH method is used to change the ordering …","The Origin header.","The Origin-Isolation header.","206 Partial Content","The PATCH method requests that a set of changes described …","413 Payload Too Large","402 Payment Required","308 Permanent Redirect","The Ping-From header.","The Ping-To header.","The POST method requests that the target resource process …","The Pragma header.","412 Precondition Failed","428 Precondition Required","This method is never used by an actual client. This method …","The PROPFIND method retrieves properties defined on the …","The PROPPATCH method processes instructions specified in …","The Proxy-Authenticate header.","407 Proxy Authentication Required","The Proxy-Authorization header.","The Proxy-Connection header.","The Public-Key-Pins header.","The Public-Key-Pins-Report-Only header.","The Push-Policy header.","The PUT method requests that the state of the target …","The Range header.","The REBIND method removes a binding to a resource from a …","The Referer header.","The Referrer-Policy header.","The Refresh-Cache header.","A REPORT request is an extensible mechanism for obtaining …","The Report-To header.","431 Request Header Fields Too Large","408 Request Timeout","416 Requested Range Not Satisfiable","205 Reset Content","The Retry-After header.","The RTT header.","The Save-Data header.","The client invokes the SEARCH method to initiate a …","The Sec-CH-UA-Mobile header.","The Sec-CH-UA header.","The Sec-Fetch-Dest header.","The Sec-Fetch-Mode header.","The Sec-Fetch-Site header.","The Sec-Fetch-User header.","The Sec-GPC header.","The Sec-WebSocket-Accept header.","The Sec-WebSocket-Extensions header.","The Sec-WebSocket-Key header.","The Sec-WebSocket-Protocol header.","The Sec-WebSocket-Version header.","303 See Other","The Server header.","The Server-Timing header.","503 Service Unavailable","The Service-Worker-Allowed header.","The Set-Cookie header.","The Set-Cookie2 header.","The Signature header.","The Signed-Headers header.","The SourceMap header.","A handler for sharing state across an application.","Store and retrieve values by <code>TypeId</code>. This allows storing …","HTTP response status codes.","The Strict-Transport-Security header.","101 Switching Protocols","The TE header.","307 Temporary Redirect","The Timing-Allow-Origin header.","425 Too Early","429 Too Many Requests","The TRACE method requests a remote, application-level …","The Trailer header.","The Transfer-Encoding header.","401 Unauthorized","451 Unavailable For Legal Reasons","The UNBIND method modifies the collection identified by …","An UNCHECKOUT request can be applied to a checked-out …","The UNLINK method removes one or more Link relationships …","The UNLOCK method removes the lock identified by the lock …","422 Unprocessable Entity","415 Unsupported Media Type","The UPDATE method modifies the content and dead properties …","The UPDATEREDIRECTREF method requests the update of a …","A HTTP protocol upgrade","The Upgrade header.","The Upgrade-Insecure-Requests header.","426 Upgrade Required","414 URI Too Long","The User-Agent header.","506 Variant Also Negotiates","The Vary header.","The version of the HTTP protocol in use.","A VERSION-CONTROL request can be used to create a …","The Via header.","The Viewport-Width header.","The Warning header.","The Width header.","The WWW-Authenticate header.","The X-Content-Type-Options header.","The X-DNS-Prefetch-Control header.","The X-Download-Options header.","The X-Firefox-Spdy header.","The X-Forwarded-By header.","The X-Forwarded-For header.","The X-Forwarded-Host header.","The X-Forwarded-Proto header.","The X-Forwarded-SSL header.","The X-Frame-Options header.","The X-Permitted-Cross-Domain-Policies header.","The X-Pingback header.","The X-Powered-By header.","The X-Request-Id header.","The X-Requested-With header.","The X-Robots-Tag header.","The X-UA-Compatible header.","The X-XSS-Protection header.","add the header value or header values into this header …","Add another header value to this <code>HeaderValues</code>.","","","","","","","If there is only a single value, returns that header as a …","Returns this header value as a &amp;str if it is utf8, None …","","","Performs any final modifications to this conn after all …","Performs any final modifications to this conn after all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the number of bytes that have been read from this …","The canonical reason for a given status code","","","","","","","","","","","","","","","","","","","","","Unwraps an <code>Result::Ok</code> or returns the <code>Conn</code> with a 500 …","Unwraps an <code>Option::Some</code> or returns the <code>Conn</code>.","Check if container contains value for type","Convenience function to check whether the value contained …","","","","","","","Macro for implementing Handler for simple newtypes that …","","","","","","","","","","","","","","","","","","","","","","","Convenience function to check whether the value contained …","","Adds any number of other header values to this <code>HeaderValues</code>…","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get a reference to a value previously inserted on this …","Retrieves a singular header value from this header map. If …","","","","","Get a mutable reference to a value previously inserted on …","Gets a value from this <code>StateSet</code> or populates it with the …","Gets a value from this <code>StateSet</code> or populates it with the …","Retrieves a &amp;str header value if there is at least one …","Retrieves a reference to all header values with the …","sets the <code>halted</code> attribute of this conn, preventing later …","Predicate function to check whether this header map …","","predicate function answering the question of whether this …","predicate function answering the question of whether this …","","","","","returns the request headers","returns the mutable response headers","alias for <code>Init::new</code>","","Performs one-time async set up on a mutable borrow of the …","Performs one-time async set up on a mutable borrow of the …","returns an immutable reference to the inner …","returns a mutable reference to the inner …","Insert a value into this <code>StateSet</code>.","Add a header value or header values into this header map. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume this body and return the full content. If the body …","transforms this <code>trillium::Conn</code> into a <code>trillium_http::Conn</code> …","","","Convert a potentially-borrowed headername to a static …","Transform this Body into a dyn <code>AsyncRead</code>. This will wrap …","Returns <code>true</code> if the status code is the <code>4xx</code> range.","determine if the this body represents no data","retrieves the halted state of this conn.  see <code>Conn::halt</code>.","Returns <code>true</code> if the status code is <code>1xx</code> range.","Returns <code>true</code> if the status code is the <code>3xx</code> range.","Whether a method is considered “safe”, meaning the …","predicate function to indicate whether the connection is …","Returns <code>true</code> if the status code is the <code>5xx</code> range.","determine if the this body represents static content","determine if the this body represents streaming content","Returns <code>true</code> if the status code is the <code>2xx</code> range.","Return an iterator over borrowed header names and header …","returns the content length of this body, if known and …","Returns a user-displayable string description of the …","obtain a mutable borrow of the listener description, …","","A convenience macro for logging the contents of error …","returns the request method for this conn.","Either returns the current &amp;mut T from the state set, or …","","Customize the name of your handler. This is used in Debug …","Customize the name of your handler. This is used in Debug …","","","Constructs a new State handler from any <code>Clone</code> + <code>Send</code> + <code>Sync</code>…","Constructs a new Init handler with an async function that …","Create an empty <code>StateSet</code>.","Construct a new headers with a default capacity of 15 …","Builds an empty <code>HeaderValues</code>. This is not generally …","Construct a fixed-length Body from a <code>Vec&lt;u8&gt;</code> or …","Construct a new body from a streaming <code>AsyncRead</code> source. If …","<code>Conn::ok</code> is a convenience function for the common pattern …","If there is only a single <code>HeaderValue</code> inside this …","","","returns the path for this request. note that this may not …","","for router implementations. removes a route segment onto …","for router implementations. pushes a route segment onto …","returns query part of the request path","Takes all headers with the provided header name out of this","Returns a ReceivedBody that references this <code>Conn</code>. The <code>Conn</code> …","Convenience function to read the content of a request body …","Extend the capacity of the known headers map by this many","if there is a response body for this conn and it has a …","Executes this handler, performing any modifications to the …","","","","Returns a user-displayable description of the server. This …","obtain a mutable borrow of the server description, suitable","Sets the response body from any <code>impl Into&lt;Body&gt;</code>. Note that …","sets the <code>halted</code> attribute of this conn. see <code>Conn::halt</code>.","Puts a new type into the state set. see <code>Conn::state</code> for an …","assigns a status to this response. see <code>Conn::status</code> for …","Constructs a new <code>State</code> handler from any Clone + Send + …","Attempts to retrieve a &amp;T from the state set","Attempts to retrieve a &amp;mut T from the state set","Retrieve a borrow of the static content in this body. If …","returns the response status for this <code>Conn</code>, if it has been …","Remove a value from this <code>StateSet</code>.","Removes the response body from the <code>Conn</code>","Removes a type from the state set and returns it, if …","Returns the <code>local_addr</code> of a bound tcp listener, if such a …","","","","Convert a potentially-borrowed headername to a static …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a header value or header values into this header map if","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This will only be called if the handler reponds true to …","This will only be called if the handler reponds true to …","Sets the response body from any <code>impl Into&lt;Body&gt;</code> and …","Construct a new Headers, expecting to see at least this …","insert a header name and value/values into the response …","Puts a new type into the state set and returns the <code>Conn</code>. …","sets the response status for this <code>Conn</code> and returns it. …"],"i":[1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,3,1,1,1,1,2,2,3,3,0,1,3,3,1,2,0,3,1,1,1,1,1,1,1,1,1,1,1,2,1,1,3,2,1,1,1,1,3,1,1,1,1,1,2,1,1,1,1,2,1,2,1,2,1,2,1,2,3,2,0,3,0,0,0,0,1,4,4,4,4,4,2,1,1,1,1,1,2,2,0,0,2,2,1,0,3,1,1,1,2,1,3,1,3,2,2,1,3,0,2,2,3,3,3,3,3,3,2,2,2,1,2,2,2,2,2,2,2,2,2,3,3,1,1,2,3,2,2,2,1,1,3,1,2,2,3,3,3,1,2,1,1,1,1,1,3,1,3,1,1,1,3,1,2,2,2,2,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,0,0,0,1,2,1,2,1,2,2,3,1,1,2,2,3,3,3,3,2,2,3,3,0,1,1,2,2,1,2,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,6,7,7,8,1,9,3,6,9,0,10,11,11,7,12,10,13,14,15,5,8,1,6,9,2,3,4,7,12,10,13,14,15,5,8,1,6,9,2,3,4,14,2,13,5,8,1,6,9,2,3,4,13,5,8,1,6,9,2,3,4,3,4,0,0,15,5,12,13,14,15,5,6,0,6,6,8,8,8,1,1,6,9,9,9,9,9,9,9,9,9,9,2,2,3,4,5,5,6,7,12,10,13,13,14,15,5,8,8,1,1,6,9,9,2,2,3,3,4,4,7,7,12,10,13,13,13,13,14,14,14,14,14,14,15,5,8,8,8,8,1,6,6,6,6,6,6,9,9,9,9,9,2,3,4,5,6,8,1,3,15,5,8,1,2,3,15,15,15,5,5,7,5,10,11,11,8,1,2,3,7,7,0,10,11,11,7,7,15,5,7,12,10,13,14,15,5,8,1,6,9,2,3,4,14,7,5,6,8,14,2,14,7,2,2,3,7,2,14,14,2,5,14,13,13,0,0,7,7,10,11,11,6,9,12,10,15,5,6,14,14,7,6,3,4,7,14,7,7,7,5,7,7,5,7,11,12,10,2,13,13,7,7,7,7,0,7,7,14,7,15,7,7,13,13,5,8,8,1,6,9,2,3,4,13,8,1,9,2,3,4,7,12,10,13,14,15,5,8,1,6,9,2,2,3,3,4,5,7,12,10,13,14,15,5,8,1,6,9,2,3,4,7,12,10,13,14,15,5,8,1,6,9,2,3,4,10,11,11,7,5,7,7,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["headers",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]]],[[["headervalues",3],["into",8,[["headervalue",3]]]]],[[["conn",3]],["stateset",3]],[[["conn",3]],["stateset",3]],[[["headername",3]],["str",0]],[[["knownheadername",4]],["str",0]],[[["headervalue",3]]],[[["method",4]],["str",0]],[[["headervalues",3]],["option",4,[["str",0]]]],[[["headervalue",3]],["option",4,[["str",0]]]],null,[[["init",3,[["handler",8]]],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["body",3]],["u64",0]],[[["status",4]],["str",0]],[[["info",3]],["info",3]],[[["headers",3]],["headers",3]],[[["headername",3]],["headername",3]],[[["knownheadername",4]],["knownheadername",4]],[[["headervalues",3]],["headervalues",3]],[[["headervalue",3]],["headervalue",3]],[[["status",4]],["status",4]],[[["method",4]],["method",4]],[[["version",4]],["version",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["method",4],["method",4]],["ordering",4]],[[["version",4],["version",4]],["ordering",4]],null,null,[[["stateset",3]],["bool",0]],[[["headers",3],["into",8,[["headername",3]]],["str",0]],["bool",0]],[[],["state",3]],[[],["info",3]],[[],["body",3]],[[],["stateset",3]],[[],["headers",3]],[[],["headervalues",3]],null,[[["headervalues",3]]],[[["headervalues",3]]],[[["headername",3],["knownheadername",4]],["bool",0]],[[["headername",3],["headername",3]],["bool",0]],[[["headername",3],["knownheadername",4]],["bool",0]],[[["knownheadername",4],["headername",3]],["bool",0]],[[["knownheadername",4],["knownheadername",4]],["bool",0]],[[["headervalues",3],["headervalues",3]],["bool",0]],[[["headervalue",3],["string",3]],["bool",0]],[[["headervalue",3]],["bool",0]],[[["headervalue",3],["string",3]],["bool",0]],[[["headervalue",3]],["bool",0]],[[["headervalue",3]],["bool",0]],[[["headervalue",3],["headervalue",3]],["bool",0]],[[["headervalue",3],["str",0]],["bool",0]],[[["headervalue",3],["str",0]],["bool",0]],[[["headervalue",3],["str",0]],["bool",0]],[[["headervalue",3],["string",3]],["bool",0]],[[["status",4],["status",4]],["bool",0]],[[["status",4],["u16",0]],["bool",0]],[[["method",4],["method",4]],["bool",0]],[[["version",4],["version",4]],["bool",0]],[[["headers",3],["into",8,[["headername",3]]],["str",0]],["bool",0]],[[["headers",3]]],[[["headervalues",3],["into",8,[["headervalues",3]]]]],[[["conn",3],["formatter",3]],["result",6]],[[["state",3,[["debug",8]]],["formatter",3]],["result",6]],[[["init",3,[["handler",8]]],["formatter",3]],["result",6]],[[["info",3],["formatter",3]],["result",6]],[[["info",3],["formatter",3]],["result",6]],[[["body",3],["formatter",3]],["result",4,[["error",3]]]],[[["stateset",3],["formatter",3]],["result",4,[["error",3]]]],[[["headers",3],["formatter",3]],["result",4,[["error",3]]]],[[["headername",3],["formatter",3]],["result",4,[["error",3]]]],[[["headername",3],["formatter",3]],["result",4,[["error",3]]]],[[["knownheadername",4],["formatter",3]],["result",4,[["error",3]]]],[[["knownheadername",4],["formatter",3]],["result",4,[["error",3]]]],[[["headervalues",3],["formatter",3]],["result",4,[["error",3]]]],[[["headervalue",3],["formatter",3]],["result",4,[["error",3]]]],[[["headervalue",3],["formatter",3]],["result",4,[["error",3]]]],[[["status",4],["formatter",3]],["result",4,[["error",3]]]],[[["status",4],["formatter",3]],["result",4,[["error",3]]]],[[["method",4],["formatter",3]],["result",4,[["error",3]]]],[[["method",4],["formatter",3]],["result",4,[["error",3]]]],[[["version",4],["formatter",3]],["result",4,[["error",3]]]],[[["version",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["conn",3,[["transport",8]]]],["conn",3]],[[]],[[]],[[["str",0]],["info",3]],[[]],[[["socketaddr",4]],["info",3]],[[["socketaddr",3]],["info",3]],[[["str",0]],["body",3]],[[]],[[["vec",3,[["u8",0],["global",3]]]],["body",3]],[[["receivedbody",3]],["body",3]],[[["string",3]],["body",3]],[[],["body",3]],[[]],[[]],[[["knownheadername",4]],["headername",3]],[[]],[[["string",3]],["headername",3]],[[["str",0]],["headername",3]],[[]],[[["headervalue",3]],["headervalues",3]],[[["vec",3,[["global",3]]]],["headervalues",3]],[[["vec",3,[["u8",0],["global",3]]]],["headervalues",3]],[[["str",0]],["headervalues",3]],[[]],[[["string",3]],["headervalues",3]],[[["str",0]],["headervalue",3]],[[["string",3]],["headervalue",3]],[[]],[[["vec",3,[["u8",0],["global",3]]]],["headervalue",3]],[[],["headervalue",3]],[[]],[[]],[[]],[[],["headers",3]],[[],["headervalues",3]],[[["str",0]],["result",4,[["headername",3]]]],[[["str",0]],["result",4,[["knownheadername",4]]]],[[["str",0]],["result",4,[["method",4]]]],[[["stateset",3]],["option",4]],[[["headers",3],["into",8,[["headername",3]]]],["option",4,[["headervalue",3]]]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["stateset",3]],["option",4]],[[["stateset",3]],["",0]],[[["stateset",3]],["",0]],[[["headers",3],["into",8,[["headername",3]]]],["option",4,[["str",0]]]],[[["headers",3],["into",8,[["headername",3]]]],["option",4,[["headervalues",3]]]],[[["conn",3]],["conn",3]],[[["headers",3],["into",8,[["headername",3]]]],["bool",0]],[[["init",3,[["handler",8]]],["upgrade",6]],["bool",0]],[[["",0],["upgrade",6]],["bool",0]],[[["",0],["upgrade",6]],["bool",0]],[[["headername",3],["",0]]],[[["knownheadername",4],["",0]]],[[["status",4],["",0]]],[[["method",4],["",0]]],[[["conn",3]],["headers",3]],[[["conn",3]],["headers",3]],[[],["init",3]],[[["init",3,[["handler",8]]],["info",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["info",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["info",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["conn",3]],["conn",3]],[[["conn",3]],["conn",3]],[[["stateset",3]],["option",4]],[[["headers",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["body",3]],["future",8]],[[["conn",3]],["conn",3,[["transport",8]]]],[[["headers",3]]],[[["headervalues",3]]],[[["headername",3]],["headername",3]],[[["body",3]],["pin",3,[["box",3,[["asyncread",8],["global",3]]]]]],[[["status",4]],["bool",0]],[[["body",3]],["bool",0]],[[["conn",3]],["bool",0]],[[["status",4]],["bool",0]],[[["status",4]],["bool",0]],[[["method",4]],["bool",0]],[[["conn",3]],["bool",0]],[[["status",4]],["bool",0]],[[["body",3]],["bool",0]],[[["body",3]],["bool",0]],[[["status",4]],["bool",0]],[[["headers",3]],["iterator",8]],[[["body",3]],["option",4,[["u64",0]]]],[[["info",3]],["str",0]],[[["info",3]],["string",3]],null,null,[[["conn",3]],["method",4]],[[["conn",3]],["",0]],[[["init",3,[["handler",8]]]],["cow",4,[["str",0]]]],[[["",0]],["cow",4,[["str",0]]]],[[["",0]],["cow",4,[["str",0]]]],[[["headervalues",3],["headervalues",3]],["bool",0]],[[["headervalue",3],["headervalue",3]],["bool",0]],[[],["state",3]],[[],["init",3,[["handler",8]]]],[[],["stateset",3]],[[],["headers",3]],[[],["headervalues",3]],[[["into",8,[["cow",4]]]],["body",3]],[[["",26,[["asyncread",8],["send",8],["sync",8]]],["option",4,[["u64",0]]]],["body",3]],[[["conn",3],["into",8,[["body",3]]]],["conn",3]],[[["headervalues",3]],["option",4,[["headervalue",3]]]],[[["method",4],["method",4]],["option",4,[["ordering",4]]]],[[["version",4],["version",4]],["option",4,[["ordering",4]]]],[[["conn",3]],["str",0]],[[["pin",3,[["body",3]]],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["conn",3]]],[[["conn",3],["string",3]]],[[["conn",3]],["str",0]],[[["headers",3],["into",8,[["headername",3]]]],["option",4,[["headervalues",3]]]],[[["conn",3]],["future",8]],[[["conn",3]],["future",8]],[[["headers",3],["usize",0]]],[[["conn",3]],["option",4,[["u64",0]]]],[[["",0],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["state",3,[["",26,[["clone",8],["send",8],["sync",8]]]]],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["init",3,[["handler",8]]],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["status",4],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["info",3]],["str",0]],[[["info",3]],["string",3]],[[["conn",3],["into",8,[["body",3]]]]],[[["conn",3],["bool",0]]],[[["conn",3],["",26,[["send",8],["sync",8]]]],["option",4,[["",26,[["send",8],["sync",8]]]]]],[[["conn",3],["tryinto",8,[["status",4]]]]],[[["",26,[["clone",8],["send",8],["sync",8]]]],["state",3,[["",26,[["clone",8],["send",8],["sync",8]]]]]],[[["conn",3]],["option",4]],[[["conn",3]],["option",4]],[[["body",3]],["option",4]],[[["conn",3]],["option",4,[["status",4]]]],[[["stateset",3]],["option",4]],[[["conn",3]],["option",4,[["body",3]]]],[[["conn",3]],["option",4,[["",26,[["send",8],["sync",8]]]]]],[[["info",3]],["option",4,[["socketaddr",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["headername",3]],["headername",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u16",0]],["result",4,[["status",4]]]],[[["str",0]],["result",4,[["method",4]]]],[[],["result",4]],[[],["result",4]],[[["headers",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["init",3,[["handler",8]]],["upgrade",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["upgrade",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["upgrade",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["conn",3],["into",8,[["body",3]]]],["conn",3]],[[["usize",0]],["headers",3]],[[["conn",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]],["conn",3]],[[["conn",3],["",26,[["send",8],["sync",8]]]],["conn",3]],[[["conn",3],["tryinto",8,[["status",4]]]],["conn",3]]],"p":[[4,"KnownHeaderName"],[4,"Status"],[4,"Method"],[4,"Version"],[3,"Headers"],[3,"HeaderValues"],[3,"Conn"],[3,"HeaderName"],[3,"HeaderValue"],[3,"Init"],[8,"Handler"],[3,"State"],[3,"Info"],[3,"Body"],[3,"StateSet"]]},\
"trillium_api":{"doc":"This crate represents a first pass at a utility crate for …","t":[8,3,13,13,13,13,13,13,4,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,12,12],"n":["ApiConnExt","ApiHandler","Array","Bool","Null","Number","Object","String","Value","api","as_array","as_array_mut","as_bool","as_f64","as_i64","as_null","as_object","as_object_mut","as_str","as_u64","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deserialize","deserialize","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","get","get_mut","index","index_mut","into","into","into_deserializer","is_array","is_boolean","is_f64","is_i64","is_null","is_number","is_object","is_string","is_u64","json","ne","new","pointer","pointer_mut","run","serialize","take","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_json","0","0","0","0","0"],"q":["trillium_apitrillium_api::Value","","","",""],"d":["Extension trait that adds api methods to <code>trillium::Conn</code>","Trillium API handler","Represents a JSON array.","Represents a JSON boolean.","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON object.","Represents a JSON string.","Represents any valid JSON value.","Convenience function to build a trillium api handler. This …","If the <code>Value</code> is an Array, returns the associated vector. …","If the <code>Value</code> is an Array, returns the associated mutable …","If the <code>Value</code> is a Boolean, returns the associated bool. …","If the <code>Value</code> is a number, represent it as f64 if possible. …","If the <code>Value</code> is an integer, represent it as i64 if …","If the <code>Value</code> is a Null, returns (). Returns None otherwise.","If the <code>Value</code> is an Object, returns the associated Map. …","If the <code>Value</code> is an Object, returns the associated mutable …","If the <code>Value</code> is a String, returns the associated str. …","If the <code>Value</code> is an integer, represent it as u64 if …","","","","","","","","","Attempts to deserialize a type from the request body, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Display a JSON value as a string.","Returns the argument unchanged.","","Convert a slice to <code>Value</code>","","Convert string slice to <code>Value</code>","Convert <code>Number</code> to <code>Value</code>","Convert copy-on-write string to <code>Value</code>","","","","Convert <code>String</code> to <code>Value</code>","","","","","Returns the argument unchanged.","Convert a <code>Vec</code> to <code>Value</code>","","Convert <code>()</code> to <code>Value</code>","Convert 64-bit floating point number to <code>Value</code>","Convert boolean to <code>Value</code>","Convert 32-bit floating point number to <code>Value</code>","Convert map (with string keys) to <code>Value</code>","Convert an iteratable type to a <code>Value</code>","Convert an iteratable type to a <code>Value</code>","","Index into a JSON array or map. A string index can be used …","Mutably index into a JSON array or map. A string index can …","Index into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> or","Write into a <code>serde_json::Value</code> using the syntax …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the <code>Value</code> is an Array. Returns false …","Returns true if the <code>Value</code> is a Boolean. Returns false …","Returns true if the <code>Value</code> is a number that can be …","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …","Returns true if the <code>Value</code> is a Null. Returns false …","Returns true if the <code>Value</code> is a Number. Returns false …","Returns true if the <code>Value</code> is an Object. Returns false …","Returns true if the <code>Value</code> is a String. Returns false …","Returns true if the <code>Value</code> is an integer between zero and …","Construct a <code>serde_json::Value</code> from a JSON literal.","","Build a new API handler for the given async function. This …","Looks up a value by a JSON Pointer.","Looks up a value by a JSON Pointer and returns a mutable …","","","Takes the value out of the <code>Value</code>, leaving a <code>Null</code> in its …","","","","","","","","","Sends a json response body. This sets a status code of 200,","","","","",""],"i":[0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,2,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,0,1,2,1,1,2,1,1,1,1,2,1,2,1,2,1,3,4,5,6,7,8],"f":[null,null,null,null,null,null,null,null,null,[[],["apihandler",3]],[[["value",4]],["option",4,[["vec",3]]]],[[["value",4]],["option",4,[["vec",3]]]],[[["value",4]],["option",4,[["bool",0]]]],[[["value",4]],["option",4,[["f64",0]]]],[[["value",4]],["option",4,[["i64",0]]]],[[["value",4]],["option",4]],[[["value",4]],["option",4,[["map",3]]]],[[["value",4]],["option",4,[["map",3]]]],[[["value",4]],["option",4,[["str",0]]]],[[["value",4]],["option",4,[["u64",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["value",4]],["value",4]],[[["",0],["",0]]],[[],["apihandler",3,[["default",8],["default",8]]]],[[],["value",4]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4,[["value",4]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4],["str",0]],["result",4,[["error",3]]]],[[["value",4],["str",0]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4],["str",0]],["result",4,[["error",3]]]],[[["value",4],["str",0]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4],["str",0]],["result",4,[["error",3]]]],[[["value",4],["str",0]],["result",4,[["error",3]]]],[[["value",4],["usize",0]],["result",4,[["error",3]]]],[[["value",4],["usize",0]],["result",4,[["error",3]]]],[[["value",4],["str",0],["usize",0]],["result",4,[["error",3]]]],[[["value",4],["str",0],["usize",0]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4]],["result",4,[["error",3]]]],[[["value",4],["str",0]],["result",4,[["error",3]]]],[[["value",4],["str",0]],["result",4,[["error",3]]]],[[["value",4],["usize",0]],["bool",0]],[[["value",4],["f64",0]],["bool",0]],[[["value",4],["u32",0]],["bool",0]],[[["value",4],["u32",0]],["bool",0]],[[["value",4],["i16",0]],["bool",0]],[[["value",4],["i8",0]],["bool",0]],[[["value",4],["i16",0]],["bool",0]],[[["value",4],["f64",0]],["bool",0]],[[["value",4],["i16",0]],["bool",0]],[[["value",4],["bool",0]],["bool",0]],[[["value",4],["f32",0]],["bool",0]],[[["value",4],["usize",0]],["bool",0]],[[["value",4],["u64",0]],["bool",0]],[[["value",4],["i32",0]],["bool",0]],[[["value",4],["u64",0]],["bool",0]],[[["value",4],["u32",0]],["bool",0]],[[["value",4],["i8",0]],["bool",0]],[[["value",4],["u64",0]],["bool",0]],[[["value",4],["bool",0]],["bool",0]],[[["value",4],["str",0]],["bool",0]],[[["value",4],["i32",0]],["bool",0]],[[["value",4],["i32",0]],["bool",0]],[[["value",4],["u8",0]],["bool",0]],[[["value",4],["u8",0]],["bool",0]],[[["value",4],["i64",0]],["bool",0]],[[["value",4],["isize",0]],["bool",0]],[[["value",4],["value",4]],["bool",0]],[[["value",4],["string",3]],["bool",0]],[[["value",4],["f64",0]],["bool",0]],[[["value",4],["i64",0]],["bool",0]],[[["value",4],["u16",0]],["bool",0]],[[["value",4],["u16",0]],["bool",0]],[[["value",4],["i64",0]],["bool",0]],[[["value",4],["u16",0]],["bool",0]],[[["value",4],["isize",0]],["bool",0]],[[["value",4],["isize",0]],["bool",0]],[[["value",4],["i8",0]],["bool",0]],[[["value",4],["str",0]],["bool",0]],[[["value",4],["usize",0]],["bool",0]],[[["value",4],["f32",0]],["bool",0]],[[["value",4],["f32",0]],["bool",0]],[[["value",4],["u8",0]],["bool",0]],[[["value",4],["bool",0]],["bool",0]],[[["apihandler",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["value",4],["formatter",3]],["result",4,[["error",3]]]],[[["value",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["u16",0]],["value",4]],[[],["value",4]],[[["i32",0]],["value",4]],[[["str",0]],["value",4]],[[["number",3]],["value",4]],[[["cow",4,[["str",0]]]],["value",4]],[[["i8",0]],["value",4]],[[["u64",0]],["value",4]],[[["i16",0]],["value",4]],[[["string",3]],["value",4]],[[["isize",0]],["value",4]],[[["u8",0]],["value",4]],[[["i64",0]],["value",4]],[[["usize",0]],["value",4]],[[]],[[["vec",3,[["global",3]]]],["value",4]],[[["u32",0]],["value",4]],[[],["value",4]],[[["f64",0]],["value",4]],[[["bool",0]],["value",4]],[[["f32",0]],["value",4]],[[["map",3,[["string",3],["value",4]]]],["value",4]],[[],["value",4]],[[],["value",4]],[[["str",0]],["result",4,[["value",4],["error",3]]]],[[["value",4]],["option",4,[["value",4]]]],[[["value",4]],["option",4,[["value",4]]]],[[["value",4]],["value",4]],[[["value",4]],["value",4]],[[]],[[]],[[["value",4]]],[[["value",4]],["bool",0]],[[["value",4]],["bool",0]],[[["value",4]],["bool",0]],[[["value",4]],["bool",0]],[[["value",4]],["bool",0]],[[["value",4]],["bool",0]],[[["value",4]],["bool",0]],[[["value",4]],["bool",0]],[[["value",4]],["bool",0]],null,[[["value",4],["value",4]],["bool",0]],[[],["apihandler",3]],[[["value",4],["str",0]],["option",4,[["value",4]]]],[[["value",4],["str",0]],["option",4,[["value",4]]]],[[["apihandler",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["value",4]],["result",4]],[[["value",4]],["value",4]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null],"p":[[4,"Value"],[3,"ApiHandler"],[8,"ApiConnExt"],[13,"Bool"],[13,"Number"],[13,"String"],[13,"Array"],[13,"Object"]]},\
"trillium_askama":{"doc":"provides support for using the askama compile-time …","t":[8,18,18,18,8,24,2,10,11,10],"n":["AskamaConnExt","EXTENSION","MIME_TYPE","SIZE_HINT","Template","Template","askama","render","render","render_into"],"q":["trillium_askama","","","","","","","","",""],"d":["extends trillium conns with the ability to render askama …","The template’s extension, if provided","The MIME type (Content-Type) of the data that gets …","Provides a conservative estimate of the expanded length of …","Main <code>Template</code> trait; implementations are generally derived","","","renders an askama template, halting the conn and setting a …","Helper method which allocates a new <code>String</code> and renders …","Renders the template to the given <code>writer</code> buffer"],"i":[0,1,1,1,0,0,0,2,1,1],"f":[null,null,null,null,null,null,null,[[["template",8]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0]],["result",4,[["error",4]]]]],"p":[[8,"Template"],[8,"AskamaConnExt"]]},\
"trillium_async_std":{"doc":"Trillium server adapter for async-std","t":[3,3,3,2,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11],"n":["ClientConfig","Stopper","TcpConnector","async_std","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","config","connect","default","default","fmt","fmt","fmt","from","from","from","into","into","into","is_stopped","new","nodelay","peer_addr","run","run_async","spawn","stop","stop_future","stop_stream","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id"],"q":["trillium_async_std","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["configuration for the tcp Connector","This struct provides a synchronized mechanism for canceling","trillium client tcp connector for async-std","","","","","","","","","","","","","","Configures a server before running it","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this stopper (or any clone of it) has been …","Initialize a stopper that is not yet stopped and that has …","disable nagle’s algorithm","","Runs a trillium handler in a sync context with default …","Runs a trillium handler in an async context with default …","","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","","","","","","","","","","set a time to live for the tcp protocol","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,0,2,1,3,1,2,3,1,2,3,1,2,3,3,3,1,2,0,0,2,3,3,3,1,2,3,1,2,3,1,2,3,1,1,2,3],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["clientconfig",3]],["clientconfig",3]],[[["tcpconnector",3]],["tcpconnector",3]],[[["stopper",3]],["stopper",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["config",3,[["asyncstdserver",3]]]],[[["url",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["clientconfig",3]],[[],["stopper",3]],[[["clientconfig",3],["formatter",3]],["result",6]],[[["tcpconnector",3],["formatter",3]],["result",6]],[[["stopper",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["stopper",3]],["bool",0]],[[],["stopper",3]],null,[[],["result",6,[["socketaddr",4]]]],[[["handler",8]]],[[["handler",8]],["future",8]],[[]],[[["stopper",3]]],[[["stopper",3]],["futurestopper",3]],[[["stopper",3]],["streamstopper",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"ClientConfig"],[3,"TcpConnector"],[3,"Stopper"]]},\
"trillium_aws_lambda":{"doc":"Trillium server adapter for aws lambda","t":[8,10,5,5],"n":["LambdaConnExt","lambda_context","run","run_async"],"q":["trillium_aws_lambda","","",""],"d":["Provides access to the aws lambda context for …","returns the <code>lamedh_runtime::Context</code> for this conn","Runs a trillium handler in a sync context","Runs a trillium handler on an already-running tokio runtime"],"i":[0,1,0,0],"f":[null,[[["",0]],["context",3]],[[["handler",8]]],[[["handler",8]],["future",8]]],"p":[[8,"LambdaConnExt"]]},\
"trillium_aws_lambda_example":{"doc":"","t":[3,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11],"n":["HelloTemplate","borrow","borrow_mut","dyn_render","dyn_render_into","extension","fmt","from","into","main","mime_type","name","render_into","size_hint","to_string","try_from","try_into","type_id","vzip"],"q":["trillium_aws_lambda_example","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0]],["option",4,[["str",0]]]],[[["hellotemplate",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]],["str",0]],null,[[["hellotemplate",3]],["result",6]],[[["",0]],["usize",0]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]]],"p":[[3,"HelloTemplate"]]},\
"trillium_basic_auth":{"doc":"Basic authentication for trillium.rs","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BasicAuth","Credentials","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","into","into","ne","new","run","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_realm"],"q":["trillium_basic_auth","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["basic auth handler","basic auth username-password credentials","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","build a new basic auth handler with the provided username …","","","","","","","","","","provide a realm for the www-authenticate response sent by …"],"i":[0,0,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,2,1,1,1,2,1,2,1,2,1,2,1],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["basicauth",3]],["basicauth",3]],[[["credentials",3]],["credentials",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["credentials",3],["credentials",3]],["bool",0]],[[["basicauth",3],["formatter",3]],["result",6]],[[["credentials",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["credentials",3],["credentials",3]],["bool",0]],[[["str",0],["str",0]],["basicauth",3]],[[["basicauth",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["basicauth",3],["str",0]],["basicauth",3]]],"p":[[3,"BasicAuth"],[3,"Credentials"]]},\
"trillium_caching_headers":{"doc":"Trillium handlers for etag and last-modified-since headers.","t":[4,3,3,8,3,3,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["CacheControlDirective","CacheControlHeader","CachingHeaders","CachingHeadersExt","EntityTag","Etag","Immutable","MaxAge","MaxFresh","MaxStale","Modified","MustRevalidate","NoCache","NoStore","NoTransform","OnlyIfCached","Private","ProxyRevalidate","Public","SMaxage","StaleIfError","StaleWhileRevalidate","UnknownDirective","before_send","before_send","before_send","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_control","caching_headers","checked_new","checked_strong","checked_weak","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","const_from_data","default","default","default","deref","deref_mut","eq","eq","eq","etag","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_data","from_file_meta","from_iter","from_str","from_str","has_upgrade","if_modified_since","if_none_match","init","into","into","into","into","into","into","is_immutable","is_no_cache","is_no_store","is_no_transform","is_only_if_cached","is_private","is_proxy_revalidate","is_public","last_modified","max_age","max_fresh","max_stale","must_revalidate","name","ne","ne","ne","new","new","new","new","run","run","run","s_maxage","set_cache_control","set_etag","set_last_modified","set_vary","stale_if_error","stale_while_revalidate","strong","strong","strong_eq","strong_ne","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","weak","weak","weak_eq","weak_ne","with_cache_control","with_cache_control","with_etag","with_etag","with_last_modified","with_last_modified","with_vary","with_vary","0","0","0","0","0","0","0"],"q":["trillium_caching_headerstrillium_caching_headers::CacheControlDirective","","","","","",""],"d":["An enum representation of the <code>Cache-Control</code> directives.","A representation of the <code>Cache-Control</code> header.","A combined handler that provides both <code>Etag</code> and <code>Modified</code> …","Provides an extension trait for both <code>trillium::Headers</code> and …","An entity tag, defined in RFC7232","Etag and If-None-Match header handler","<code>immutable</code>","<code>max-age</code>","<code>max-fresh</code>","<code>max-stale</code>","A handler for the <code>Last-Modified</code> and <code>If-Modified-Since</code> …","<code>must-revalidate</code>","<code>no-cache</code>","<code>no-store</code>","<code>no-transform</code>","<code>only-if-cached</code>","<code>private</code>","<code>proxy-revalidate</code>","<code>public</code>","<code>s-maxage</code>","<code>stale-if-error</code>","<code>stale-while-revalidate</code>","an enum variant that will contain any unrecognized …","","","","","","","","","","","","","","","","returns a parsed <code>CacheControlHeader</code> if these headers …","alias for <code>CachingHeaders::new</code>","Constructs a new EntityTag, verifying it’s size and …","Constructs a new strong EntityTag, using the same checks …","Constructs a new weak EntityTag, using the same checks as …","","","","","","","","","","","","","Creates strong EntityTag by hashing provided bytes.","","","","","","","","","returns an <code>EntityTag</code> if these headers contain an <code>Etag</code> …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Creates strong EntityTag by hashing provided bytes.","Creates weak EntityTag from file metadata using modified …","","","","","returns a parsed <code>If-Modified-Since</code> header if one exists","returns a parsed <code>EntityTag</code> header if there is an …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","returns true if one of the directives is <code>immutable</code>","returns true if this header contains a <code>no-cache</code> directive","returns true if this header contains a <code>no-store</code> directive","returns true if this header contains a <code>no-transform</code> …","returns true if this header contains an <code>only-if-cached</code> …","returns true if this header contains a <code>private</code> directive","returns true if this header contains a <code>proxy-revalidate</code> …","returns true if this header contains a <code>proxy</code> directive","returns a parsed timestamp if these headers contain a …","returns a duration if one of the directives is <code>max-age</code>","returns a duration if one of the directives is <code>max-fresh</code>","returns Some(None) if one of the directives is <code>max-stale</code> …","returns true if this header contains a <code>must-revalidate</code> …","","","","","Constructs a new EntityTag, asserting that it doesn’t …","constructs a new Etag handler","constructs a new Modified handler","Constructs a new combination modified and etag handler","","","","returns a duration if this header contains an <code>s-maxage</code> …","sets a <code>Cache-Control</code> header on these headers. Note that …","sets an etag header from an EntityTag.","sets a formatted <code>Last-Modified</code> header from a timestamp.","sets the Vary header to a collection of Into","returns a duration if this header contains a stale-if-error","returns a duration if this header contains a …","Constructs a new strong EntityTag, using the same checks …","Configures this handler to use strong content-based etag …","For strong comparison two entity-tags are equivalent if …","The inverse of <code>EntityTag.strong_eq()</code>.","Get the tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new weak EntityTag, using the same checks as …","Weakness indicator for the tag","For weak comparison two entity-tags are equivalent if their","The inverse of <code>EntityTag.weak_eq()</code>.","chainable method to set cache control and return self. …","chainable method to set cache control and return self. …","chainable method to set etag and return self. primarily …","chainable method to set etag and return self. primarily …","chainable method to set last modified and return self. …","chainable method to set last modified and return self. …","chainable method to set vary and return self. primarily …","chainable method to set vary and return self. primarily …","","","","","","",""],"i":[0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,5,2,3,1,6,4,5,2,3,1,6,4,7,0,5,5,5,5,2,3,1,6,4,5,2,3,1,6,4,5,2,3,4,6,6,5,1,6,7,5,5,2,3,1,6,6,4,5,2,3,1,6,6,6,4,5,5,6,5,6,4,7,7,4,5,2,3,1,6,4,6,6,6,6,6,6,6,6,7,6,6,6,6,4,5,1,6,5,2,3,4,2,3,4,6,7,7,7,7,6,6,5,2,5,5,5,5,2,3,1,6,4,5,6,5,2,3,1,6,4,5,2,3,1,6,4,5,2,3,1,6,4,4,5,5,5,5,7,7,7,7,7,7,7,7,8,9,10,11,12,13,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["etag",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["modified",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["cachingheaders",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["option",4,[["cachecontrolheader",3]]]],[[],["cachingheaders",3]],[[["bool",0],["str",0]],["result",4,[["entitytag",3],["parseerror",4]]]],[[["str",0]],["result",4,[["entitytag",3],["parseerror",4]]]],[[["str",0]],["result",4,[["entitytag",3],["parseerror",4]]]],[[["entitytag",3]],["entitytag",3]],[[["etag",3]],["etag",3]],[[["modified",3]],["modified",3]],[[["cachecontroldirective",4]],["cachecontroldirective",4]],[[["cachecontrolheader",3]],["cachecontrolheader",3]],[[["cachingheaders",3]],["cachingheaders",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["entitytag",3]],[[],["etag",3]],[[],["modified",3]],[[],["cachingheaders",3]],[[["cachecontrolheader",3]]],[[["cachecontrolheader",3]]],[[["entitytag",3],["entitytag",3]],["bool",0]],[[["cachecontroldirective",4],["cachecontroldirective",4]],["bool",0]],[[["cachecontrolheader",3],["cachecontrolheader",3]],["bool",0]],[[["",0]],["option",4,[["entitytag",3]]]],[[["entitytag",3],["formatter",3]],["result",4,[["error",3]]]],[[["entitytag",3],["formatter",3]],["result",4,[["error",3]]]],[[["etag",3],["formatter",3]],["result",6]],[[["modified",3],["formatter",3]],["result",6]],[[["cachecontroldirective",4],["formatter",3]],["result",6]],[[["cachecontrolheader",3],["formatter",3]],["result",6]],[[["cachecontrolheader",3],["formatter",3]],["result",6]],[[["cachingheaders",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["cachecontroldirective",4]],["cachecontrolheader",3]],[[]],[[],["cachecontrolheader",3]],[[]],[[],["entitytag",3]],[[["metadata",3]],["entitytag",3]],[[["intoiterator",8]],["cachecontrolheader",3]],[[["str",0]],["result",4,[["entitytag",3],["parseerror",4]]]],[[["str",0]],["result",4,[["cachecontrolheader",3]]]],[[["cachingheaders",3],["upgrade",6]],["bool",0]],[[["",0]],["option",4,[["systemtime",3]]]],[[["",0]],["option",4,[["entitytag",3]]]],[[["cachingheaders",3],["info",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cachecontrolheader",3]],["bool",0]],[[["cachecontrolheader",3]],["bool",0]],[[["cachecontrolheader",3]],["bool",0]],[[["cachecontrolheader",3]],["bool",0]],[[["cachecontrolheader",3]],["bool",0]],[[["cachecontrolheader",3]],["bool",0]],[[["cachecontrolheader",3]],["bool",0]],[[["cachecontrolheader",3]],["bool",0]],[[["",0]],["option",4,[["systemtime",3]]]],[[["cachecontrolheader",3]],["option",4,[["duration",3]]]],[[["cachecontrolheader",3]],["option",4,[["duration",3]]]],[[["cachecontrolheader",3]],["option",4,[["option",4,[["duration",3]]]]]],[[["cachecontrolheader",3]],["bool",0]],[[["cachingheaders",3]],["cow",4,[["str",0]]]],[[["entitytag",3],["entitytag",3]],["bool",0]],[[["cachecontroldirective",4],["cachecontroldirective",4]],["bool",0]],[[["cachecontrolheader",3],["cachecontrolheader",3]],["bool",0]],[[["bool",0],["str",0]],["entitytag",3]],[[],["etag",3]],[[],["modified",3]],[[],["cachingheaders",3]],[[["etag",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["modified",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["cachingheaders",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["cachecontrolheader",3]],["option",4,[["duration",3]]]],[[["",0],["into",8,[["cachecontrolheader",3]]]]],[[["",0],["entitytag",3]]],[[["",0],["systemtime",3]]],[[["",0]]],[[["cachecontrolheader",3]],["option",4,[["duration",3]]]],[[["cachecontrolheader",3]],["option",4,[["duration",3]]]],[[["str",0]],["entitytag",3]],[[["etag",3]],["etag",3]],[[["entitytag",3],["entitytag",3]],["bool",0]],[[["entitytag",3],["entitytag",3]],["bool",0]],[[["entitytag",3]],["str",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["cachingheaders",3],["upgrade",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["str",0]],["entitytag",3]],null,[[["entitytag",3],["entitytag",3]],["bool",0]],[[["entitytag",3],["entitytag",3]],["bool",0]],[[["into",8,[["cachecontrolheader",3]]]]],[[["into",8,[["cachecontrolheader",3]]]]],[[["entitytag",3]]],[[["entitytag",3]]],[[["systemtime",3]]],[[["systemtime",3]]],[[]],[[]],null,null,null,null,null,null,null],"p":[[4,"CacheControlDirective"],[3,"Etag"],[3,"Modified"],[3,"CachingHeaders"],[3,"EntityTag"],[3,"CacheControlHeader"],[8,"CachingHeadersExt"],[13,"MaxAge"],[13,"MaxFresh"],[13,"MaxStale"],[13,"SMaxage"],[13,"StaleIfError"],[13,"StaleWhileRevalidate"],[13,"UnknownDirective"]]},\
"trillium_channels":{"doc":"An implementation of phoenix channels for trillium.rs","t":[3,3,3,3,3,8,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Channel","ChannelBroadcaster","ChannelClient","ChannelConn","ChannelEvent","ChannelHandler","V1","V2","Version","allow_join","allow_join","allow_leave","allow_leave","before_send","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","broadcast","broadcast","broadcaster","build_reply","channel","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","conn","connect","connect","connected_clients","default","deref","deref","deref_mut","deref_mut","deserialize","disconnect","disconnect","eq","event","event","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_str","has_upgrade","incoming_message","incoming_message","init","into","into","into","into","into","into","join_channel","json","leave_channel","leave_channel","ne","new","new","payload","poll_next","reference","reply_error","reply_error","reply_ok","reply_ok","run","send_event","send_event","serialize","subscriptions","to_owned","to_owned","to_owned","to_owned","topic","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["trillium_channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Trillium handler containing a <code>ChannelHandler</code>","Channel-wide event broadcaster and subscriber","Communicate with the connected client.","A ChannelConn is a wrapper around a <code>WebSocketConn</code> that also","The messages passed between server and connected clients.","Trait for you to implement in order to define a <code>Channel</code>.","the implicit first version of the protocol","version 2.x of the protocol","The phoenix channel “protocol” version","Join a topic, sending an ok reply with the provided …","Join a topic, sending an ok reply with the provided …","Leave a topic as requested by the provided channel event, …","Leave a topic as requested by the provided channel event, …","","","","","","","","","","","","","","Send this ChannelEvent to all subscribed channel clients","Send a <code>ChannelEvent</code> to all connected clients. Note that …","Send a ChannelEvent to all connected clients that …","Send a <code>ChannelEvent</code> to all connected clients. Note that …","Retrieve a ChannelBroadcaster that can be moved elsewhere …","Construct a new ChannelEvent with the same reference as …","Constructs a new <code>Channel</code> trillium handler from the provided","Borrow the channel client","","","","","","","","","Borrow the websocket conn","<code>connect</code> is called once when each websocket client is …","<code>connect</code> is called once when each websocket client is …","Returns the number of connected clients. Note that the …","","","","","","","<code>disconnect</code> is called when the websocket client ceases to be","<code>disconnect</code> is called when the websocket client ceases to be","","Returns this ChannelEvent’s event","This macro provides a convenient constructor for a …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","<code>incoming_message</code> is called once for each <code>ChannelEvent</code> sent …","<code>incoming_message</code> is called once for each <code>ChannelEvent</code> sent …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>join_channel</code> is called when a websocket client sends a …","Construct a <code>serde_json::Value</code> from a JSON literal.","<code>leave_channel</code> is called when a websocket client sends a …","<code>leave_channel</code> is called when a websocket client sends a …","","Constructs a new ChannelEvent from topic, event, and a …","Constructs a new trillium Channel handler from the provided","Returns this ChannelEvent’s payload as a Value","","Returns the reference field (“ref” in json) for this …","Send an error reply in reference to the provided …","Send an error reply in reference to the provided …","Send an ok reply in reference to the provided ChannelEvent …","Send an ok reply in reference to the provided ChannelEvent …","","Send a <code>ChannelEvent</code> to this specific client. Note that …","Send a <code>ChannelEvent</code> to this specific client. Note that …","","Borrow this client’s subscriptions","","","","","Returns this ChannelEvent’s topic","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,0,2,3,2,3,4,5,6,2,4,3,1,5,6,2,4,3,1,5,2,4,3,4,6,0,3,5,6,2,1,5,6,2,1,3,7,7,5,1,4,3,4,3,6,7,7,6,6,0,5,6,2,4,3,1,5,6,6,6,2,4,3,1,1,1,4,7,7,4,5,6,2,4,3,1,7,0,7,7,6,6,4,6,5,6,2,3,2,3,4,2,3,6,2,5,6,2,1,6,5,6,2,4,3,1,5,6,2,4,3,1,5,6,2,4,3,1,4,5,6,2,4,3,1],"f":[null,null,null,null,null,null,null,null,null,[[["channelclient",3],["channelevent",3]],["future",8]],[[["channelconn",3],["channelevent",3]],["future",8]],[[["channelclient",3],["channelevent",3]],["future",8]],[[["channelconn",3],["channelevent",3]],["future",8]],[[["channel",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["channelbroadcaster",3],["into",8,[["channelevent",3]]]]],[[["channelclient",3],["into",8,[["channelevent",3]]]]],[[["channel",3,[["channelhandler",8]]],["into",8,[["channelevent",3]]]]],[[["channelconn",3],["into",8,[["channelevent",3]]]]],[[["channel",3,[["channelhandler",8]]]],["channelbroadcaster",3]],[[["channelevent",3],["into",8,[["cow",4,[["str",0]]]]]],["channelevent",3]],[[["channelhandler",8]],["channel",3,[["channelhandler",8]]]],[[["channelconn",3]],["option",4,[["channelclient",3]]]],[[["channelbroadcaster",3]],["channelbroadcaster",3]],[[["channelevent",3]],["channelevent",3]],[[["channelclient",3]],["channelclient",3]],[[["version",4]],["version",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["channelconn",3]],["websocketconn",3]],[[["",0],["channelconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["channelconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["channelbroadcaster",3]],["usize",0]],[[],["version",4]],[[["channel",3]]],[[["channelconn",3]]],[[["channel",3]]],[[["channelconn",3]]],[[],["result",4,[["channelevent",3]]]],[[["",0],["channelconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["channelconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["channelevent",3],["channelevent",3]],["bool",0]],[[["channelevent",3]],["str",0]],null,[[["channelbroadcaster",3],["formatter",3]],["result",6]],[[["channelevent",3],["formatter",3]],["result",6]],[[["channelclient",3],["formatter",3]],["result",6]],[[["channel",3,[["debug",8]]],["formatter",3]],["result",6]],[[["channelconn",3],["formatter",3]],["result",6]],[[["version",4],["formatter",3]],["result",6]],[[]],[[]],[[],["channelevent",3]],[[],["channelevent",3]],[[]],[[]],[[]],[[["str",0]],["version",4]],[[]],[[["str",0]],["result",4,[["version",4]]]],[[["channel",3],["upgrade",6]],["bool",0]],[[["",0],["channelconn",3],["channelevent",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["channelconn",3],["channelevent",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["channel",3],["info",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["channelconn",3],["channelevent",3]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0],["channelconn",3],["channelevent",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["channelconn",3],["channelevent",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["channelevent",3],["channelevent",3]],["bool",0]],[[["into",8,[["cow",4,[["str",0]]]]],["into",8,[["cow",4,[["str",0]]]]]],["channelevent",3]],[[["channelhandler",8]],["channel",3,[["channelhandler",8]]]],[[["channelevent",3]],["value",4]],[[["pin",3,[["channelbroadcaster",3]]],["context",3]],["poll",4,[["option",4]]]],[[["channelevent",3]],["option",4,[["str",0]]]],[[["channelclient",3],["channelevent",3]],["future",8]],[[["channelconn",3],["channelevent",3]],["future",8]],[[["channelclient",3],["channelevent",3]],["future",8]],[[["channelconn",3],["channelevent",3]],["future",8]],[[["channel",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["channelclient",3],["into",8,[["channelevent",3]]]],["future",8]],[[["channelconn",3],["into",8,[["channelevent",3]]]],["future",8]],[[["channelevent",3]],["result",4]],[[["channelclient",3]],["subscriptions",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["channelevent",3]],["str",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["channel",3],["upgrade",6]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"Version"],[3,"ChannelClient"],[3,"ChannelConn"],[3,"Channel"],[3,"ChannelBroadcaster"],[3,"ChannelEvent"],[8,"ChannelHandler"]]},\
"trillium_client":{"doc":"trillium client is a http client that uses the same <code>conn</code> …","t":[3,13,16,3,8,13,4,13,13,13,13,13,13,13,13,13,13,6,16,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12],"n":["Client","Closed","Config","Conn","Connector","EncodingError","Error","HeaderMissing","HeadersTooLong","Httparse","Io","MalformedHeader","MissingMethod","MissingStatusCode","MissingVersion","PartialHead","RequestPathMissing","Result","Transport","TryFromIntError","UnexpectedHeader","UnexpectedUriFormat","UnrecognizedMethod","UnrecognizedStatusCode","UnsupportedVersion","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_conn","clone","clone_into","connect","default","delete","delete","drop","execute","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","into","into","into","method","new","new","patch","patch","peer_addr","post","post","put","put","recycle","request_headers","response_body","response_headers","response_headers_mut","send","set_config","set_request_body","source","spawn","status","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","with_body","with_config","with_config","with_default_pool","with_header","with_request_body","0","0","0","0","0","0","0","0","0","0"],"q":["trillium_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trillium_client::Error","","","","","","","","",""],"d":["A client contains a Config and an optional connection pool …","connection was closed","A type that can be used to configure this Connector. It …","a client connection, representing both an outbound http …","Interface for runtime and tls adapters for the trillium …","we expected utf8, but there was an encoding error","Concrete errors that occur within trillium’s http …","the relevant http protocol expected this header, but it was","for security reasons, we do not allow request headers …","<code>httparse::Error</code>","<code>std::io::Error</code>","we were unable to parse a header","this request did not have a method","this request did not have a status code","this request did not have a version, but we expect one …","an incomplete http head","this error describes a request that does not specify a path","this crate’s result type","The async read + write type for this connector, often a …","<code>TryFromIntError</code>","we received a header that does not make sense in context","this error describes a malformed request with a path that …","we were unable to parse this http method","we were unable to parse this http method","async-h1 doesn’t speak this http version this error is …","","","","","","","","builds a new conn borrowing the config on this client. if …","","","Initiate a connection to the provided url, using the …","","Builds a new client conn with the delete http method and …","Builds a new client conn with the delete http method and …","","Performs the http request, consuming and returning the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Builds a new client conn with the get http method and the …","Builds a new client conn with the get http method and the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","retrieves the url for this conn.","builds a new client Conn with the provided method and url","Constructs a new Client without a connection pool and with …","Builds a new client conn with the patch http method and …","Builds a new client conn with the patch http method and …","A SocketAddr representation of the other side of this …","Builds a new client conn with the post http method and the …","Builds a new client conn with the post http method and the …","Builds a new client conn with the put http method and the …","Builds a new client conn with the put http method and the …","Returns this conn to the connection pool if it is …","retrieves a mutable borrow of the request headers, …","returns a <code>ReceivedBody</code> that borrows the connection inside …","","get a mutable borrow of the response headers","Performs the http request on a mutable borrow of the conn. …","imperatively assign a given config reference to this Conn.","","","Spawn and detach a task on the runtime. Although this may …","returns the status code for this conn. if the conn has not …","","","","","","","","","","","","retrieves the url for this conn.","chainable setter for the request body","set a config reference on this conn and return the conn, …","chainable constructor to specify Connector configuration.  …","chainable constructor to enable connection pooling. this …","chainable setter for <code>inserting</code> a request header","chainable setter to assign the request body. deprecated in …","","","","","","","","","",""],"i":[0,1,2,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,1,1,1,3,3,4,1,3,4,1,4,4,4,2,4,3,4,3,3,3,4,1,1,3,4,1,1,1,1,1,3,4,3,4,1,3,3,4,3,4,2,3,4,3,4,3,3,3,3,3,3,3,3,1,2,3,4,1,3,4,1,3,4,1,3,4,1,3,3,3,4,4,3,3,5,6,7,8,9,10,11,12,13,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["conn",3,[["connector",8]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["client",3,[["connector",8]]]],["conn",3,[["connector",8]]]],[[["client",3,[["connector",8]]]],["client",3,[["connector",8]]]],[[["",0],["",0]]],[[["url",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["client",3,[["connector",8]]]],[[],["conn",3,[["connector",8]]]],[[["client",3,[["connector",8]]]],["conn",3,[["connector",8]]]],[[["conn",3,[["connector",8]]]]],[[["conn",3,[["connector",8]]]],["future",8]],[[["conn",3,[["connector",8]]],["formatter",3]],["result",6]],[[["client",3,[["connector",8]]],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["utf8error",3]],["error",4]],[[["error",3]],["error",4]],[[]],[[["error",4]],["error",4]],[[["tryfrominterror",3]],["error",4]],[[],["conn",3,[["connector",8]]]],[[["client",3,[["connector",8]]]],["conn",3,[["connector",8]]]],[[]],[[]],[[]],[[["conn",3,[["connector",8]]]],["method",4]],[[],["conn",3,[["connector",8]]]],[[],["client",3,[["connector",8]]]],[[],["conn",3,[["connector",8]]]],[[["client",3,[["connector",8]]]],["conn",3,[["connector",8]]]],[[],["result",4,[["socketaddr",4],["error",3]]]],[[],["conn",3,[["connector",8]]]],[[["client",3,[["connector",8]]]],["conn",3,[["connector",8]]]],[[],["conn",3,[["connector",8]]]],[[["client",3,[["connector",8]]]],["conn",3,[["connector",8]]]],[[["conn",3,[["connector",8]]]],["future",8]],[[["conn",3,[["connector",8]]]],["headers",3]],[[["conn",3,[["connector",8]]]],["receivedbody",3]],[[["conn",3,[["connector",8]]]],["headers",3]],[[["conn",3,[["connector",8]]]],["headers",3]],[[["conn",3,[["connector",8]]]],["future",8]],[[["conn",3,[["connector",8]]]]],[[["conn",3,[["connector",8]]],["into",8,[["body",3]]]]],[[["error",4]],["option",4,[["error",8]]]],[[]],[[["conn",3,[["connector",8]]]],["option",4,[["status",4]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["conn",3,[["connector",8]]]],["url",3]],[[["conn",3,[["connector",8]]],["into",8,[["body",3]]]],["conn",3,[["connector",8]]]],[[["conn",3,[["connector",8]]]],["conn",3,[["connector",8]]]],[[["client",3,[["connector",8]]]],["client",3,[["connector",8]]]],[[["client",3,[["connector",8]]]],["client",3,[["connector",8]]]],[[["conn",3,[["connector",8]]],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]],["conn",3,[["connector",8]]]],[[["conn",3,[["connector",8]]],["into",8,[["body",3]]]],["conn",3,[["connector",8]]]],null,null,null,null,null,null,null,null,null,null],"p":[[4,"Error"],[8,"Connector"],[3,"Conn"],[3,"Client"],[13,"Io"],[13,"HeaderMissing"],[13,"Httparse"],[13,"TryFromIntError"],[13,"MalformedHeader"],[13,"UnsupportedVersion"],[13,"UnrecognizedMethod"],[13,"UnrecognizedStatusCode"],[13,"EncodingError"],[13,"UnexpectedHeader"]]},\
"trillium_compression":{"doc":"Body compression for trillium.rs","t":[13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Brotli","Compression","CompressionAlgorithm","Gzip","as_ref","before_send","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compression","default","eq","fmt","fmt","fmt","from","from","from_str","into","into","new","partial_cmp","run","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_algorithms"],"q":["trillium_compression","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Brotli algorithm","Trillium handler for compression","Algorithms supported by this crate","Gzip algorithm","","","","","","","","","","","","Alias for <code>Compression::new</code>","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","constructs a new compression handler","","","","","","","","","","","","sets the compression algorithms that this handler will …"],"i":[1,0,0,1,1,2,1,2,1,2,1,2,1,2,1,0,2,1,1,1,2,1,2,1,1,2,2,1,2,1,2,1,1,2,1,2,1,2,2],"f":[null,null,null,null,[[["compressionalgorithm",4]],["str",0]],[[["compression",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["compressionalgorithm",4]],["compressionalgorithm",4]],[[["compression",3]],["compression",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["compressionalgorithm",4],["compressionalgorithm",4]],["ordering",4]],[[],["compression",3]],[[],["compression",3]],[[["compressionalgorithm",4],["compressionalgorithm",4]],["bool",0]],[[["compressionalgorithm",4],["formatter",3]],["result",6]],[[["compressionalgorithm",4],["formatter",3]],["result",6]],[[["compression",3],["formatter",3]],["result",6]],[[]],[[]],[[["str",0]],["result",4,[["compressionalgorithm",4]]]],[[]],[[]],[[],["compression",3]],[[["compressionalgorithm",4],["compressionalgorithm",4]],["option",4,[["ordering",4]]]],[[["compression",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["compression",3]],["compression",3]]],"p":[[4,"CompressionAlgorithm"],[3,"Compression"]]},\
"trillium_conn_id":{"doc":"Trillium crate to add identifiers to conns.","t":[3,8,11,11,5,11,11,11,10,11,0,11,11,11,11,11,11,11,11,11,11,5],"n":["ConnId","ConnIdExt","borrow","borrow_mut","conn_id","default","fmt","from","id","into","log_formatter","new","run","try_from","try_into","type_id","with_id_generator","with_request_header","with_response_header","without_request_header","without_response_header","conn_id"],"q":["trillium_conn_id","","","","","","","","","","","","","","","","","","","","","trillium_conn_id::log_formatter"],"d":["Trillium handler to set a identifier for every Conn.","Extension trait to retrieve an id generated by the <code>ConnId</code> …","","","Alias for ConnId::new()","","","Returns the argument unchanged.","Retrieves the id for this conn. This method will panic if …","Calls <code>U::from(self)</code>.","Formatter for the trillium_log crate","Constructs a new ConnId handler","","","","","Provide an alternative generator function for ids. The …","Specifies a request header to use. If this header is …","Specifies a response header to set. To disable this …","disables the default behavior of reusing an inbound header …","Disables the default behavior of sending the conn id as a …","Formatter for the trillium_log crate. This will be <code>-</code> if …"],"i":[0,0,1,1,0,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,0],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["connid",3]],[[],["connid",3]],[[["connid",3],["formatter",3]],["result",6]],[[]],[[["",0]],["str",0]],[[]],null,[[],["connid",3]],[[["connid",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["connid",3]],["connid",3]],[[["connid",3],["into",8,[["headername",3]]]],["connid",3]],[[["connid",3],["into",8,[["headername",3]]]],["connid",3]],[[["connid",3]],["connid",3]],[[["connid",3]],["connid",3]],[[["conn",3],["bool",0]],["cow",4,[["str",0]]]]],"p":[[3,"ConnId"],[8,"ConnIdExt"]]},\
"trillium_cookies":{"doc":"the trillium cookie handler","t":[8,3,11,11,11,11,11,2,5,10,10,11,11,11,11,11,11,11,11,11,11,11,10],"n":["CookiesConnExt","CookiesHandler","before_send","borrow","borrow_mut","clone","clone_into","cookie","cookies","cookies","cookies_mut","default","fmt","from","into","new","run","to_owned","try_from","try_into","type_id","vzip","with_cookie"],"q":["trillium_cookies","","","","","","","","","","","","","","","","","","","","","",""],"d":["Extension trait adding cookie capacities to <code>Conn</code>.","The trillium cookie handler. See crate level docs for an …","","","","","","","Alias for CookiesHandler::new()","gets a reference to the cookie jar","gets a mutable reference to the cookie jar","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","constructs a new cookies handler","","","","","","","adds a cookie to the cookie jar and returns the conn"],"i":[0,0,1,1,1,1,1,0,0,2,2,1,1,1,1,1,1,1,1,1,1,1,2],"f":[null,null,[[["cookieshandler",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cookieshandler",3]],["cookieshandler",3]],[[["",0],["",0]]],null,[[],["cookieshandler",3]],[[["",0]],["cookiejar",3]],[[["",0]],["cookiejar",3]],[[],["cookieshandler",3]],[[["cookieshandler",3],["formatter",3]],["result",6]],[[]],[[]],[[],["cookieshandler",3]],[[["cookieshandler",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["cookie",3]]]],"p":[[3,"CookiesHandler"],[8,"CookiesConnExt"]]},\
"trillium_example":{"doc":"","t":[3,6,5,11,11,11,11,11,11,11,11,5,11,12,11,5,5,11,11,11,11,11,11,5],"n":["HelloTemplate","Proxy","app","borrow","borrow_mut","dyn_render","dyn_render_into","extension","fmt","from","into","main","mime_type","name","render_into","request_count","router","size_hint","to_string","try_from","try_into","type_id","vzip","with_cache_control"],"q":["trillium_example","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,0],"f":[null,null,[[],["handler",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0]],["option",4,[["str",0]]]],[[["hellotemplate",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]],["str",0]],null,[[["hellotemplate",3]],["result",6]],[[["conn",3]],["future",8]],[[],["handler",8]],[[["",0]],["usize",0]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["conn",3]],["future",8]]],"p":[[3,"HelloTemplate"]]},\
"trillium_forwarding":{"doc":"Trillium handler for <code>x-forwarded-*</code> / <code>forwarded</code>","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Forwarded","Forwarding","add_for","borrow","borrow","borrow_mut","borrow_mut","by","clone","clone_into","default","default","eq","fmt","fmt","fmt","forwarded_for","from","from","from_forwarded_header","from_headers","from_x_headers","host","into","into","into_owned","ne","new","parse","proto","run","set_by","set_host","set_proto","to_owned","to_string","trust_always","trust_fn","trust_ips","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["trillium_forwarding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A rust representation of the forwarded header.","Trillium handler for <code>forwarded</code>/<code>x-forwarded-*</code> headers","Adds a <code>for</code> section to this header","","","","","Returns the <code>by</code> field of this header","","","","","","","","","Returns the <code>for</code> field of this header","Returns the argument unchanged.","Returns the argument unchanged.","Parse a borrowed Forwarded from the Forwarded header, …","Attempts to parse a Forwarded from headers (or a request or","Parse a borrowed Forwarded from the historical …","Returns the <code>host</code> field of this header","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform a borrowed Forwarded into an owned Forwarded. …","","Builds a new empty Forwarded","parse a &amp;str into a borrowed Forwarded","Returns the <code>proto</code> field of this header","","Sets the <code>by</code> field of this header","Sets the <code>host</code> field of this header","Sets the <code>proto</code> field of this header","","","builds a Forwarding handler that expects that all http …","builds a Forwarding handler that trusts a peer ip based on …","builds a Forwarding handler that trusts a list of strings …","","","","","","",""],"i":[0,0,1,1,2,1,2,1,1,1,1,2,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,2,2,2,1,1,2,1,2,1,2],"f":[null,null,[[["forwarded",3],["into",8,[["cow",4,[["str",0]]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["forwarded",3]],["option",4,[["str",0]]]],[[["forwarded",3]],["forwarded",3]],[[["",0],["",0]]],[[],["forwarded",3]],[[],["forwarding",3]],[[["forwarded",3],["forwarded",3]],["bool",0]],[[["forwarded",3],["formatter",3]],["result",6]],[[["forwarded",3],["formatter",3]],["result",6]],[[["forwarding",3],["formatter",3]],["result",6]],[[["forwarded",3]],["vec",3,[["str",0]]]],[[]],[[]],[[["headers",3]],["result",4,[["option",4,[["forwarded",3]]],["parseerror",3]]]],[[["headers",3]],["result",4,[["option",4,[["forwarded",3]]],["parseerror",3]]]],[[["headers",3]],["result",4,[["option",4,[["forwarded",3]]],["parseerror",3]]]],[[["forwarded",3]],["option",4,[["str",0]]]],[[]],[[]],[[["forwarded",3]],["forwarded",3]],[[["forwarded",3],["forwarded",3]],["bool",0]],[[],["forwarded",3]],[[["str",0]],["result",4,[["forwarded",3],["parseerror",3]]]],[[["forwarded",3]],["option",4,[["str",0]]]],[[["forwarding",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["forwarded",3],["into",8,[["cow",4,[["str",0]]]]]]],[[["forwarded",3],["into",8,[["cow",4,[["str",0]]]]]]],[[["forwarded",3],["into",8,[["cow",4,[["str",0]]]]]]],[[["",0]]],[[["",0]],["string",3]],[[],["forwarding",3]],[[],["forwarding",3]],[[["intoiterator",8]],["forwarding",3]],[[],["result",4]],[[["str",0]],["result",4,[["forwarded",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Forwarded"],[3,"Forwarding"]]},\
"trillium_handlebars":{"doc":"Handlebars templating handler for trillium based on the …","t":[3,3,8,3,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Assigns","Handlebars","HandlebarsConnExt","HandlebarsHandler","assign","assigns","assigns_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_templates","clone","clone","clone_into","clone_into","default","default","default","deref","deref_mut","dev_mode","fmt","fmt","fmt","from","from","from","from","from","from","get_escape_fn","get_template","get_templates","handlebars","has_template","into","into","into","new","new","prevent_indent","register_decorator","register_escape_fn","register_helper","register_partial","register_template","register_template_file","register_template_string","register_templates_directory","render","render","render_template","render_template_to_write","render_template_with_context","render_to_write","render_with","render_with_context","run","serialize","set_dev_mode","set_prevent_indent","set_strict_mode","strict_mode","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unregister_escape_fn","unregister_template"],"q":["trillium_handlebars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A struct for accumulating key-value data for use in …","The single entry point of your Handlebars templates","Extension trait that provides handlebar rendering …","A trillium handler that provides registered templates to …","Registers an “assigns” value on this Conn for use in a …","retrieves a reference to any accumulated assigns on this …","retrieves a mutable reference to any accumulated assigns …","","","","","","","Unregister all templates","","","","","","","","","","Return dev mode state, default is false","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Get a reference to the current <em>escape fn</em>.","Return a registered template,","Return all templates registered","","Return <code>true</code> if a template is registered for the given name","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Builds a new trillium Handlebars handler from either a …","","Return state for <code>prevent_indent</code> option, default to <code>false</code>.","Register a decorator","Register a new <em>escape fn</em> to be used from now on by this …","Register a helper","Register a partial string","Register a <code>Template</code>","Register a template from a path on file system","Register a template string","Register templates from a directory","renders a registered template, passing any accumulated …","Render a registered template with some data into a string","Render a template string using current registry without …","Render a template string using current registry without …","Render a template string using reused context data","Render a registered template and write some data to the …","renders a registered template by name with the provided …","Render a registered template with reused context","","","Enable or disable dev mode","Enable or disable indent for partial include tag <code>{{&gt;}}</code>","Enable or disable handlebars strict mode","Return strict mode state, default is false.","","","","","","","","","","","","Restore the default <em>escape fn</em>.","Remove a template from the registry"],"i":[0,0,0,0,1,1,1,2,3,4,2,3,4,4,3,4,3,4,2,3,4,2,2,4,2,3,4,2,3,3,3,3,4,4,4,4,0,4,2,3,4,3,4,4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,1,4,3,2,4,4,4,4,3,4,2,3,4,2,3,4,2,3,4,4,4],"f":[null,null,null,null,[[["",26,[["into",8,[["cow",4,[["str",0]]]]],["sized",8]]],["serialize",8]]],[[["",0]],["option",4,[["assigns",3]]]],[[["",0]],["assigns",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["registry",3]]],[[["handlebarshandler",3]],["handlebarshandler",3]],[[["registry",3]],["registry",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["assigns",3]],[[],["handlebarshandler",3]],[[],["registry",3]],[[["assigns",3]]],[[["assigns",3]]],[[["registry",3]],["bool",0]],[[["assigns",3],["formatter",3]],["result",6]],[[["handlebarshandler",3],["formatter",3]],["result",6]],[[["registry",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["pathbuf",3]],["handlebarshandler",3]],[[["str",0]],["handlebarshandler",3]],[[["handlebars",3]],["handlebarshandler",3]],[[]],[[["registry",3]],["fn",8]],[[["registry",3],["str",0]],["option",4,[["template",3]]]],[[["registry",3]],["hashmap",3]],null,[[["registry",3],["str",0]],["bool",0]],[[]],[[]],[[]],[[["into",8,[["handlebarshandler",3]]]],["handlebarshandler",3]],[[],["registry",3]],[[["registry",3]],["bool",0]],[[["registry",3],["str",0],["box",3,[["decoratordef",8],["global",3]]]]],[[["registry",3]]],[[["registry",3],["str",0],["box",3,[["helperdef",8],["global",3]]]]],[[["registry",3],["str",0]],["result",4,[["templateerror",3]]]],[[["registry",3],["str",0],["template",3]]],[[["registry",3],["str",0]],["result",4,[["templateerror",3]]]],[[["registry",3],["str",0]],["result",4,[["templateerror",3]]]],[[["registry",3],["str",0]],["result",4,[["templateerror",3]]]],[[["str",0]]],[[["registry",3],["str",0],["",0]],["result",4,[["string",3],["rendererror",3]]]],[[["registry",3],["str",0],["",0]],["result",4,[["string",3],["rendererror",3]]]],[[["registry",3],["str",0],["",0]],["result",4,[["rendererror",3]]]],[[["registry",3],["str",0],["context",3]],["result",4,[["string",3],["rendererror",3]]]],[[["registry",3],["str",0],["",0]],["result",4,[["rendererror",3]]]],[[["str",0]]],[[["registry",3],["str",0],["context",3]],["result",4,[["string",3],["rendererror",3]]]],[[["handlebarshandler",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["assigns",3]],["result",4]],[[["registry",3],["bool",0]]],[[["registry",3],["bool",0]]],[[["registry",3],["bool",0]]],[[["registry",3]],["bool",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["registry",3]]],[[["registry",3],["str",0]]]],"p":[[8,"HandlebarsConnExt"],[3,"Assigns"],[3,"HandlebarsHandler"],[3,"Handlebars"]]},\
"trillium_head":{"doc":"Trillium handler for HEAD requests","t":[3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11],"n":["Head","before_send","borrow","borrow_mut","clone","clone_into","default","fmt","from","head","into","new","run","to_owned","try_from","try_into","type_id"],"q":["trillium_head","","","","","","","","","","","","","","","",""],"d":["Trillium handler for HEAD requests","","","","","","","","Returns the argument unchanged.","Alias for <code>Head::new</code>","Calls <code>U::from(self)</code>.","constructs a new Head handler","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1],"f":[null,[[["head",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["head",3]],["head",3]],[[["",0],["",0]]],[[],["head",3]],[[["head",3],["formatter",3]],["result",6]],[[]],[[],["head",3]],[[]],[[],["head",3]],[[["head",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"Head"]]},\
"trillium_http":{"doc":"This crate provides the http 1.x implementation for …","tn":["Accept","AcceptCh","AcceptChLifetime","AcceptCharset","AcceptEncoding","AcceptLanguage","AcceptPushPolicy","AcceptRanges","AcceptSignature","Accepted","AccessControlAllowCredentials","AccessControlAllowHeaders","AccessControlAllowMethods","AccessControlAllowOrigin","AccessControlExposeHeaders","AccessControlMaxAge","AccessControlRequestHeaders","AccessControlRequestMethod","Acl","Age","Allow","AltSvc","Authorization","BadGateway","BadRequest","BaselineControl","Bind","Body","CacheControl","Checkin","Checkout","Chunked","ClearSiteData","Close","Closed","Conflict","Conn","Conn","Connect","Connection","ConnectionStatus","ContentDisposition","ContentDpr","ContentEncoding","ContentLanguage","ContentLength","ContentLocation","ContentRange","ContentSecurityPolicy","ContentSecurityPolicyReportOnly","ContentType","Continue","Cookie","Cookie2","Copy","Created","CrossOriginEmbedderPolicy","CrossOriginOpenerPolicy","CrossOriginResourcePolicy","Date","Delete","DeviceMemory","Dnt","Downlink","Dpr","EarlyData","EarlyHints","Ect","EncodingError","End","Error","Etag","Expect","ExpectCt","ExpectationFailed","Expires","FailedDependency","FeaturePolicy","FixedLength","Forbidden","Forwarded","Found","From","GatewayTimeout","Get","Gone","Head","HeaderMissing","HeaderName","HeaderValue","HeaderValues","Headers","HeadersTooLong","Host","Http0_9","Http1_0","Http1_1","Http2_0","Http3_0","HttpVersionNotSupported","Httparse","IfMatch","IfModifiedSince","IfNoneMatch","IfRange","IfUnmodifiedSince","ImATeapot","ImUsed","InsufficientStorage","InternalServerError","Io","KeepAlive","KnownHeaderName","Label","LargeAllocation","LastEventId","LastModified","LengthRequired","Link","Link","Location","Lock","Locked","LoopDetected","MalformedHeader","MaxForwards","Merge","Method","MethodNotAllowed","MisdirectedRequest","MissingMethod","MissingStatusCode","MissingVersion","MkActivity","MkCalendar","MkCol","MkRedirectRef","MkWorkspace","Move","MovedPermanently","MultiStatus","MultipleChoice","Nel","NetworkAuthenticationRequired","NoContent","NonAuthoritativeInformation","NotAcceptable","NotExtended","NotFound","NotImplemented","NotModified","Ok","Options","OrderPatch","Origin","OriginIsolation","PartialContent","PartialHead","Patch","PayloadTooLarge","PaymentRequired","PermanentRedirect","PingFrom","PingTo","Post","Pragma","PreconditionFailed","PreconditionRequired","Pri","PropFind","PropPatch","ProxyAuthenticate","ProxyAuthenticationRequired","ProxyAuthorization","ProxyConnection","PublicKeyPins","PublicKeyPinsReportOnly","PushPolicy","Put","Range","Rebind","ReceivedBody","ReceivedBodyState","Referer","ReferrerPolicy","RefreshCache","Report","ReportTo","RequestHeaderFieldsTooLarge","RequestPathMissing","RequestTimeout","RequestedRangeNotSatisfiable","ResetContent","Result","RetryAfter","Rtt","SERVICE_UNAVAILABLE","SaveData","Search","SecChUAMobile","SecChUa","SecFetchDest","SecFetchMode","SecFetchSite","SecFetchUser","SecGpc","SecWebsocketAccept","SecWebsocketExtensions","SecWebsocketKey","SecWebsocketProtocol","SecWebsocketVersion","SeeOther","Server","ServerTiming","ServiceUnavailable","ServiceWorkerAllowed","SetCookie","SetCookie2","Signature","SignedHeaders","Sourcemap","Start","StateSet","Status","Stopper","StrictTransportSecurity","SwitchingProtocols","Synthetic","Te","TemporaryRedirect","TimingAllowOrigin","TooEarly","TooManyRequests","Trace","Trailer","TransferEncoding","TryFromIntError","Unauthorized","UnavailableForLegalReasons","Unbind","Uncheckout","UnexpectedHeader","UnexpectedUriFormat","Unlink","Unlock","UnprocessableEntity","UnrecognizedMethod","UnrecognizedStatusCode","UnsupportedMediaType","UnsupportedVersion","Update","UpdateRedirectRef","Upgrade","Upgrade","Upgrade","UpgradeInsecureRequests","UpgradeRequired","UriTooLong","UserAgent","VariantAlsoNegotiates","Vary","Version","VersionControl","Via","ViewportWidth","Warning","Width","WwwAuthenticate","XcontentTypeOptions","XdnsPrefetchControl","XdownloadOptions","XfirefoxSpdy","XforwardedBy","XforwardedFor","XforwardedHost","XforwardedProto","XforwardedSsl","XframeOptions","XpermittedCrossDomainPolicies","Xpingback","XpoweredBy","XrequestId","XrequestedWith","XrobotsTag","XuaCompatible","XxssProtection","after_send","append","append","as_box_any","as_box_any","as_ref","as_ref","as_ref","as_ref","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bytes_read","canonical_reason","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains","contains_ignore_ascii_case","content_length","default","default","default","default","default","default","deref","deref_mut","drain","encoding","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_ignore_ascii_case","extend","extend","finalize_headers","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","from_str","get","get","get_hash","get_hash","get_hash","get_hash","get_mut","get_or_insert","get_or_insert_with","get_str","get_values","has_header","hash","hash","hash","hash","headers","host","http_version","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_iter","into_iter","into_owned","into_reader","is_client_error","is_empty","is_empty","is_informational","is_redirection","is_safe","is_secure","is_server_error","is_static","is_stopped","is_streaming","is_success","iter","len","len","map","map_transport","map_transport","method","method","method","ne","ne","ne","new","new","new","new","new","new_static","new_streaming","new_synthetic","one","partial_cmp","partial_cmp","path","path","path","peer_ip","poll_close","poll_close","poll_flush","poll_flush","poll_next","poll_read","poll_read","poll_read","poll_read","poll_write","poll_write","querystring","querystring","read_bytes","read_string","remove","replace_body","request_body","request_encoding","request_headers","request_headers","request_headers_mut","reserve","response_body","response_encoding","response_headers","response_headers_mut","set_host","set_method","set_peer_ip","set_response_body","set_secure","set_status","source","start_time","state","state","state","state_mut","static_bytes","status","stop","stop_future","stop_stream","stopper","stopper","take","take_response_body","take_transport","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transport","transport","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","0","0","0","0","0","0","0","0","0","0","0","0","current_index","remaining","total","total_length","BoxedTransport","Transport","as_box_any","as_box_any","borrow","borrow_mut","deref","downcast","fmt","from","into","new","poll_close","poll_flush","poll_read","poll_write","try_from","try_into","type_id"],"q":["trillium_httptrillium_http::ConnectionStatus","","trillium_http::Error","","","","","","","","","","trillium_http::ReceivedBodyState","","","","trillium_http::transport","","","","","","","","","","","","","","","","","",""],"d":["The Accept header.","The Accept-CH header.","The Accept-CH-Lifetime header.","The Accept-Charset header.","The Accept-Encoding header.","The Accept-Language header.","The Accept-Push-Policy header.","The Accept-Ranges header.","The Accept-Signature header.","202 Accepted","The Access-Control-Allow-Credentials header.","The Access-Control-Allow-Headers header.","The Access-Control-Allow-Methods header.","The Access-Control-Allow-Origin header.","The Access-Control-Expose-Headers header.","The Access-Control-Max-Age header.","The Access-Control-Request-Headers header.","The Access-Control-Request-Method header.","The ACL method modifies the access control list (which can …","The Age header.","The Allow header.","The Alt-Svc header.","The Authorization header.","502 Bad Gateway","400 Bad Request","A collection can be placed under baseline control with a …","The BIND method modifies the collection identified by the …","The trillium representation of a http body. This can …","The Cache-Control header.","A CHECKIN request can be applied to a checked-out …","A CHECKOUT request can be applied to a checked-in …","read state for a chunked-encoded body. the number of bytes …","The Clear-Site-Data header.","The transport has been closed, either by the client or by …","connection was closed","409 Conflict","A http connection","Another <code>Conn</code> request has been sent on the same transport …","The CONNECT method requests that the recipient establish a …","The Connection header.","This represents the next state after a response on a conn …","The Content-Disposition header.","The Content-DPR header.","The Content-Encoding header.","The Content-Language header.","The Content-Length header.","The Content-Location header.","The Content-Range header.","The Content-Security-Policy header.","The Content-Security-Policy-Report-Only header.","The Content-Type header.","100 Continue","The Cookie header.","The Cookie2 header.","The COPY method creates a duplicate of the source resource …","201 Created","The Cross-Origin-Embedder-Policy header.","The Cross-Origin-Opener-Policy header.","The Cross-Origin-Resource-Policy header.","The Date header.","The DELETE method requests that the origin server remove …","The Device-Memory header.","The DNT header.","The Downlink header.","The DPR header.","The Early-Data header.","103 Early Hints","The ECT header.","we expected utf8, but there was an encoding error","the terminal read state","Concrete errors that occur within trillium’s http …","The ETag header.","The Expect header.","The Expect-CT header.","417 Expectation Failed","The Expires header.","424 Failed Dependency","The Feature-Policy header.","read state for a fixed-length body.","403 Forbidden","The Forwarded header.","302 Found","The From header.","504 Gateway Timeout","The GET method requests transfer of a current selected …","410 Gone","The HEAD method is identical to GET except that the server …","the relevant http protocol expected this header, but it was","The name of a http header. This can be either a …","A <code>HeaderValue</code> represents the right hand side of a single …","A header value is a collection of one or more <code>HeaderValue</code>. …","Trillium’s header map type","for security reasons, we do not allow request headers …","The Host header.","HTTP/0.9","HTTP/1.0","HTTP/1.1","HTTP/2.0","HTTP/3.0","505 HTTP Version Not Supported","<code>httparse::Error</code>","The If-Match header.","The If-Modified-Since header.","The If-None-Match header.","The If-Range header.","The If-Unmodified-Since header.","418 I’m a teapot","226 Im Used","507 Insufficient Storage","500 Internal Server Error","<code>std::io::Error</code>","The Keep-Alive header.","A short nonehaustive enum of headers that trillium can …","A LABEL request can be applied to a version to modify the …","The Large-Allocation header.","The Last-Event-ID header.","The Last-Modified header.","411 Length Required","The Link header.","The LINK method establishes one or more Link relationships …","The Location header.","The LOCK method is used to take out a lock of any access …","423 Locked","508 Loop Detected","we were unable to parse a header","The Max-Forwards header.","The MERGE method performs the logical merge of a specified …","HTTP request methods.","405 Method Not Allowed","421 Misdirected Request","this request did not have a method","this request did not have a status code","this request did not have a version, but we expect one …","A MKACTIVITY request creates a new activity resource.","An HTTP request using the MKCALENDAR method creates a new …","MKCOL creates a new collection resource at the location …","The MKREDIRECTREF method requests the creation of a …","A MKWORKSPACE request creates a new workspace resource.","The MOVE operation on a non-collection resource is the …","301 Moved Permanently","207 Multi-Status","300 Multiple Choice","The NEL header.","511 Network Authentication Required","204 No Content","203 Non Authoritative Information","406 Not Acceptable","510 Not Extended","404 Not Found","501 Not Implemented","304 Not Modified","200 Ok","The OPTIONS method requests information about the …","The ORDERPATCH method is used to change the ordering …","The Origin header.","The Origin-Isolation header.","206 Partial Content","an incomplete http head","The PATCH method requests that a set of changes described …","413 Payload Too Large","402 Payment Required","308 Permanent Redirect","The Ping-From header.","The Ping-To header.","The POST method requests that the target resource process …","The Pragma header.","412 Precondition Failed","428 Precondition Required","This method is never used by an actual client. This method …","The PROPFIND method retrieves properties defined on the …","The PROPPATCH method processes instructions specified in …","The Proxy-Authenticate header.","407 Proxy Authentication Required","The Proxy-Authorization header.","The Proxy-Connection header.","The Public-Key-Pins header.","The Public-Key-Pins-Report-Only header.","The Push-Policy header.","The PUT method requests that the state of the target …","The Range header.","The REBIND method removes a binding to a resource from a …","A received http body","the current read state of this body","The Referer header.","The Referrer-Policy header.","The Refresh-Cache header.","A REPORT request is an extensible mechanism for obtaining …","The Report-To header.","431 Request Header Fields Too Large","this error describes a request that does not specify a path","408 Request Timeout","416 Requested Range Not Satisfiable","205 Reset Content","this crate’s result type","The Retry-After header.","The RTT header.","A pre-rendered http response to send when the server is at …","The Save-Data header.","The client invokes the SEARCH method to initiate a …","The Sec-CH-UA-Mobile header.","The Sec-CH-UA header.","The Sec-Fetch-Dest header.","The Sec-Fetch-Mode header.","The Sec-Fetch-Site header.","The Sec-Fetch-User header.","The Sec-GPC header.","The Sec-WebSocket-Accept header.","The Sec-WebSocket-Extensions header.","The Sec-WebSocket-Key header.","The Sec-WebSocket-Protocol header.","The Sec-WebSocket-Version header.","303 See Other","The Server header.","The Server-Timing header.","503 Service Unavailable","The Service-Worker-Allowed header.","The Set-Cookie header.","The Set-Cookie2 header.","The Signature header.","The Signed-Headers header.","The SourceMap header.","initial state","Store and retrieve values by <code>TypeId</code>. This allows storing …","HTTP response status codes.","This struct provides a synchronized mechanism for canceling","The Strict-Transport-Security header.","101 Switching Protocols","Synthetic represents a simple transport that contains fixed","The TE header.","307 Temporary Redirect","The Timing-Allow-Origin header.","425 Too Early","429 Too Many Requests","The TRACE method requests a remote, application-level …","The Trailer header.","The Transfer-Encoding header.","<code>TryFromIntError</code>","401 Unauthorized","451 Unavailable For Legal Reasons","The UNBIND method modifies the collection identified by …","An UNCHECKOUT request can be applied to a checked-out …","we received a header that does not make sense in context","this error describes a malformed request with a path that …","The UNLINK method removes one or more Link relationships …","The UNLOCK method removes the lock identified by the lock …","422 Unprocessable Entity","we were unable to parse this http method","we were unable to parse this http method","415 Unsupported Media Type","async-h1 doesn’t speak this http version this error is …","The UPDATE method modifies the content and dead properties …","The UPDATEREDIRECTREF method requests the update of a …","This open (pub fields) struct represents a http upgrade. …","An http upgrade has been negotiated. This is always a …","The Upgrade header.","The Upgrade-Insecure-Requests header.","426 Upgrade Required","414 URI Too Long","The User-Agent header.","506 Variant Also Negotiates","The Vary header.","The version of the HTTP protocol in use.","A VERSION-CONTROL request can be used to create a …","The Via header.","The Viewport-Width header.","The Warning header.","The Width header.","The WWW-Authenticate header.","The X-Content-Type-Options header.","The X-DNS-Prefetch-Control header.","The X-Download-Options header.","The X-Firefox-Spdy header.","The X-Forwarded-By header.","The X-Forwarded-For header.","The X-Forwarded-Host header.","The X-Forwarded-Proto header.","The X-Forwarded-SSL header.","The X-Frame-Options header.","The X-Permitted-Cross-Domain-Policies header.","The X-Pingback header.","The X-Powered-By header.","The X-Request-Id header.","The X-Requested-With header.","The X-Robots-Tag header.","The X-UA-Compatible header.","The X-XSS-Protection header.","Registers a function to call after the http response has …","add the header value or header values into this header …","Add another header value to this <code>HeaderValues</code>.","","","","","","","If there is only a single value, returns that header as a …","Returns this header value as a &amp;str if it is utf8, None …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Any bytes that have been read from the underlying tcpstream","Retrieve the number of bytes that have been read from this …","The canonical reason for a given status code","","","","","","","","","","","","","","","","","","","","","","","Check if container contains value for type","Convenience function to check whether the value contained …","Returns the content-length of this body, if available. This","","","","","","","","","Consumes the remainder of this body from the underlying …","returns the character encoding of this body, usually …","","","","","","","","","","","","","","","","","","","","","","Convenience function to check whether the value contained …","","Adds any number of other header values to this <code>HeaderValues</code>…","calculates any auto-generated headers for this conn prior …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get a reference to a value previously inserted on this …","Retrieves a singular header value from this header map. If …","","","","","Get a mutable reference to a value previously inserted on …","Gets a value from this <code>StateSet</code> or populates it with the …","Gets a value from this <code>StateSet</code> or populates it with the …","Retrieves a &amp;str header value if there is at least one …","Retrieves a reference to all header values with the …","Predicate function to check whether this header map …","","","","","read-only access to the request headers","get the host for this conn, if it exists","returns the http version for this conn.","Insert a value into this <code>StateSet</code>.","Add a header value or header values into this header map. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume this body and return the full content. If the body …","","","Convert a potentially-borrowed headername to a static …","Transform this Body into a dyn <code>AsyncRead</code>. This will wrap …","Returns <code>true</code> if the status code is the <code>4xx</code> range.","predicate to determine if this synthetic contains no …","determine if the this body represents no data","Returns <code>true</code> if the status code is <code>1xx</code> range.","Returns <code>true</code> if the status code is the <code>3xx</code> range.","Whether a method is considered “safe”, meaning the …","predicate function to indicate whether the connection is …","Returns <code>true</code> if the status code is the <code>5xx</code> range.","determine if the this body represents static content","Returns whether this stopper (or any clone of it) has been …","determine if the this body represents streaming content","Returns <code>true</code> if the status code is the <code>2xx</code> range.","Return an iterator over borrowed header names and header …","the length of this synthetic transport’s body","returns the content length of this body, if known and …","read any number of new <code>Conn</code>s from the transport and call …","applies a mapping function from one transport to another. …","Modify the transport type of this upgrade. This is useful …","returns the http method for this conn’s request.","the http method","The http request method","","","","Initialize a stopper that is not yet stopped and that has …","Create a new <code>Conn</code> from the provided <code>Transport</code>, as well as …","Create an empty <code>StateSet</code>.","Construct a new headers with a default capacity of 15 …","Builds an empty <code>HeaderValues</code>. This is not generally …","Construct a fixed-length Body from a <code>Vec&lt;u8&gt;</code> or …","Construct a new body from a streaming <code>AsyncRead</code> source. If …","Construct a new synthetic conn with provided method, path, …","If there is only a single <code>HeaderValue</code> inside this …","","","retrieves the path part of the request url, up to and …","the http request path up to but excluding any query …","The request path","retrieves the remote ip address for this conn, if …","","","","","","","","","","","","retrieves the query component of the path","retrieves the query component of the path","Similar to <code>ReceivedBody::read_string</code>, but returns the raw …","Reads the entire body to string, using the encoding …","Takes all headers with the provided header name out of this","Replaces the synthetic body. This is intended for testing …","returns a ReceivedBody that references this conn. the conn …","returns the encoding_rs::Encoding for this request, as …","returns a reference to the request headers","The http request headers","returns a mutable reference to the response headers","Extend the capacity of the known headers map by this many","returns a reference to the current response body, if it …","returns the encoding_rs::Encoding for this response, as …","returns a reference to the response headers","returns a mutable reference to the response headers","set the host for this conn","overrides the http method for this conn","sets the remote ip address for this conn, if available.","Sets the response body to anything that is <code>impl Into&lt;Body&gt;</code>.","set whether the connection should be considered secure. …","sets the http status code from any <code>TryInto&lt;Status&gt;</code>.","","The <code>Instant</code> that the first header bytes for this conn were …","returns a read-only reference to the state typemap for …","any state that has been accumulated on the Conn before …","Any state that has been accumulated on the Conn before …","returns a mutable reference to the state typemap for this …","Retrieve a borrow of the static content in this body. If …","retrieves the current response status code for this conn, …","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","returns a clone of the <code>stopper::Stopper</code> for this Conn. use …","A <code>Stopper</code> which can and should be used to gracefully shut …","Remove a value from this <code>StateSet</code>.","remove the response body from this conn and return it","takes the static transport from this received body","","","","Convert a potentially-borrowed headername to a static …","","","","","","","","","","","","","","","Types to represent the bidirectional data stream over …","The underlying io (often a TcpStream or similar)","","","","","","","","","","","","","","","","","","","","","Add a header value or header values into this header map if","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new Headers, expecting to see at least this …","","","","","","","","","","","","","current index represents the bytes that have already been …","remaining indicates the bytes left <em>in the current chunk</em>. …","total indicates the size of the current chunk or zero to …","total length indicates the claimed length, usually …","A type for dyn <code>Transport</code> trait objects","The interface that the http protocol is communicated over.","in order to support downcasting from a <code>Box&lt;dyn Transport&gt;</code>, …","","","","","Attempt to convert the trait object into a specific …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new BoxedTransport from some Transport.","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,3,1,1,1,1,2,2,3,3,0,1,3,3,4,1,5,6,2,0,5,3,1,0,1,1,1,1,1,1,1,1,1,1,2,1,1,3,2,1,1,1,1,3,1,1,1,1,1,2,1,6,4,0,1,1,1,2,1,2,1,4,2,1,2,1,2,3,2,3,6,0,0,0,0,6,1,7,7,7,7,7,2,6,1,1,1,1,1,2,2,2,2,6,1,0,3,1,1,1,2,1,3,1,3,2,2,6,1,3,0,2,2,6,6,6,3,3,3,3,3,3,2,2,2,1,2,2,2,2,2,2,2,2,2,3,3,1,1,2,6,3,2,2,2,1,1,3,1,2,2,3,3,3,1,2,1,1,1,1,1,3,1,3,0,0,1,1,1,3,1,2,6,2,2,2,0,1,1,0,1,3,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,4,0,0,0,1,2,0,1,2,1,2,2,3,1,1,6,2,2,3,3,6,6,3,3,2,6,6,2,6,3,3,0,5,1,1,2,2,1,2,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,9,10,11,12,13,1,14,3,10,14,15,16,8,11,4,6,5,12,17,18,9,13,1,10,14,2,3,7,15,16,8,11,4,6,5,12,17,18,9,13,1,10,14,2,3,7,11,17,2,16,4,9,13,1,10,14,2,3,7,16,4,9,13,1,10,14,2,3,7,3,7,18,9,15,16,4,17,18,9,10,10,10,15,15,4,13,13,13,1,1,10,14,14,14,14,14,14,14,14,14,14,2,2,3,7,9,9,10,8,15,16,8,11,4,6,6,5,12,17,18,9,13,13,1,1,10,14,14,2,2,3,3,7,7,15,16,8,11,11,4,6,6,6,6,6,5,12,12,12,12,12,12,12,17,17,17,17,17,17,18,9,13,13,13,13,1,10,10,10,10,10,10,14,14,14,14,14,2,3,7,9,10,13,1,3,18,9,13,1,2,3,18,18,18,9,9,9,13,1,2,3,11,8,8,18,9,15,16,8,11,4,6,5,12,17,18,9,13,1,10,14,2,3,7,17,9,10,13,17,2,12,17,2,2,3,8,2,17,16,17,2,9,12,17,8,8,11,8,11,11,4,10,14,16,8,18,9,10,17,17,8,10,3,7,8,11,11,8,11,12,11,12,15,15,11,12,17,11,12,8,11,15,15,9,8,8,8,8,11,8,9,8,8,8,8,8,8,8,8,8,8,6,8,8,11,11,8,17,8,16,16,16,8,11,18,8,15,16,4,9,13,13,1,10,14,2,3,7,6,13,1,14,2,3,7,0,11,15,16,8,11,4,6,5,12,17,18,9,13,1,10,14,2,2,3,3,7,9,15,16,8,11,4,6,5,12,17,18,9,13,1,10,14,2,3,7,15,16,8,11,4,6,5,12,17,18,9,13,1,10,14,2,3,7,9,19,20,21,22,23,24,25,26,27,28,29,30,31,32,32,31,0,0,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["conn",3]]],[[["headers",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]]],[[["headervalues",3],["into",8,[["headervalue",3]]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["headername",3]],["str",0]],[[["knownheadername",4]],["str",0]],[[["headervalue",3]]],[[["method",4]],["str",0]],[[["headervalues",3]],["option",4,[["str",0]]]],[[["headervalue",3]],["option",4,[["str",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["body",3]],["u64",0]],[[["status",4]],["str",0]],[[["stopper",3]],["stopper",3]],[[["receivedbodystate",4]],["receivedbodystate",4]],[[["headers",3]],["headers",3]],[[["headername",3]],["headername",3]],[[["knownheadername",4]],["knownheadername",4]],[[["headervalues",3]],["headervalues",3]],[[["headervalue",3]],["headervalue",3]],[[["status",4]],["status",4]],[[["method",4]],["method",4]],[[["version",4]],["version",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["method",4],["method",4]],["ordering",4]],[[["version",4],["version",4]],["ordering",4]],[[["stateset",3]],["bool",0]],[[["headers",3],["into",8,[["headername",3]]],["str",0]],["bool",0]],[[["receivedbody",3]],["option",4,[["u64",0]]]],[[],["stopper",3]],[[],["receivedbodystate",4]],[[],["body",3]],[[],["stateset",3]],[[],["headers",3]],[[],["headervalues",3]],[[["headervalues",3]]],[[["headervalues",3]]],[[["receivedbody",3]],["future",8]],[[["receivedbody",3]],["encoding",3]],[[["receivedbodystate",4],["receivedbodystate",4]],["bool",0]],[[["headername",3],["knownheadername",4]],["bool",0]],[[["headername",3],["headername",3]],["bool",0]],[[["headername",3],["knownheadername",4]],["bool",0]],[[["knownheadername",4],["headername",3]],["bool",0]],[[["knownheadername",4],["knownheadername",4]],["bool",0]],[[["headervalues",3],["headervalues",3]],["bool",0]],[[["headervalue",3],["string",3]],["bool",0]],[[["headervalue",3],["headervalue",3]],["bool",0]],[[["headervalue",3],["str",0]],["bool",0]],[[["headervalue",3]],["bool",0]],[[["headervalue",3],["string",3]],["bool",0]],[[["headervalue",3]],["bool",0]],[[["headervalue",3],["str",0]],["bool",0]],[[["headervalue",3]],["bool",0]],[[["headervalue",3],["str",0]],["bool",0]],[[["headervalue",3],["string",3]],["bool",0]],[[["status",4],["u16",0]],["bool",0]],[[["status",4],["status",4]],["bool",0]],[[["method",4],["method",4]],["bool",0]],[[["version",4],["version",4]],["bool",0]],[[["headers",3],["into",8,[["headername",3]]],["str",0]],["bool",0]],[[["headers",3],["intoiterator",8]]],[[["headervalues",3],["into",8,[["headervalues",3]]]]],[[["conn",3]]],[[["receivedbody",3],["formatter",3]],["result",6]],[[["stopper",3],["formatter",3]],["result",4,[["error",3]]]],[[["conn",3],["formatter",3]],["result",6]],[[["upgrade",3],["formatter",3]],["result",6]],[[["receivedbodystate",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["connectionstatus",4,[["debug",8]]],["formatter",3]],["result",6]],[[["synthetic",3],["formatter",3]],["result",6]],[[["body",3],["formatter",3]],["result",6]],[[["stateset",3],["formatter",3]],["result",6]],[[["headers",3],["formatter",3]],["result",6]],[[["headername",3],["formatter",3]],["result",6]],[[["headername",3],["formatter",3]],["result",6]],[[["knownheadername",4],["formatter",3]],["result",6]],[[["knownheadername",4],["formatter",3]],["result",6]],[[["headervalues",3],["formatter",3]],["result",6]],[[["headervalue",3],["formatter",3]],["result",6]],[[["headervalue",3],["formatter",3]],["result",6]],[[["status",4],["formatter",3]],["result",6]],[[["status",4],["formatter",3]],["result",6]],[[["method",4],["formatter",3]],["result",6]],[[["method",4],["formatter",3]],["result",6]],[[["version",4],["formatter",3]],["result",6]],[[["version",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["conn",3]],["upgrade",3]],[[]],[[["tryfrominterror",3]],["error",4]],[[["utf8error",3]],["error",4]],[[["error",3]],["error",4]],[[["error",4]],["error",4]],[[]],[[]],[[],["synthetic",3]],[[["str",0]],["synthetic",3]],[[["option",4,[["vec",3,[["u8",0]]]]]],["synthetic",3]],[[["string",3]],["synthetic",3]],[[],["synthetic",3]],[[["vec",3,[["u8",0]]]],["synthetic",3]],[[]],[[["str",0]],["body",3]],[[]],[[["receivedbody",3]],["body",3]],[[["vec",3,[["u8",0]]]],["body",3]],[[],["body",3]],[[["string",3]],["body",3]],[[]],[[]],[[["str",0]],["headername",3]],[[]],[[["string",3]],["headername",3]],[[["knownheadername",4]],["headername",3]],[[]],[[["string",3]],["headervalues",3]],[[["str",0]],["headervalues",3]],[[]],[[["vec",3,[["u8",0]]]],["headervalues",3]],[[["headervalue",3]],["headervalues",3]],[[["vec",3]],["headervalues",3]],[[["vec",3,[["u8",0]]]],["headervalue",3]],[[],["headervalue",3]],[[["string",3]],["headervalue",3]],[[["str",0]],["headervalue",3]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["headers",3]],[[["intoiterator",8]],["headervalues",3]],[[["str",0]],["result",4,[["headername",3]]]],[[["str",0]],["result",4,[["knownheadername",4]]]],[[["str",0]],["result",4,[["method",4]]]],[[["stateset",3]],["option",4]],[[["headers",3],["into",8,[["headername",3]]]],["option",4,[["headervalue",3]]]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["stateset",3]],["option",4]],[[["stateset",3],["",26,[["send",8],["sync",8]]]],["",0]],[[["stateset",3]],["",0]],[[["headers",3],["into",8,[["headername",3]]]],["option",4,[["str",0]]]],[[["headers",3],["into",8,[["headername",3]]]],["option",4,[["headervalues",3]]]],[[["headers",3],["into",8,[["headername",3]]]],["bool",0]],[[["headername",3],["",0]]],[[["knownheadername",4],["",0]]],[[["status",4],["",0]]],[[["method",4],["",0]]],[[["upgrade",3]],["headers",3]],[[["conn",3]],["option",4,[["str",0]]]],[[["conn",3]],["version",4]],[[["stateset",3],["",26,[["send",8],["sync",8]]]],["option",4,[["",26,[["send",8],["sync",8]]]]]],[[["headers",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["body",3]],["future",8]],[[["headers",3]]],[[["headervalues",3]]],[[["headername",3]],["headername",3]],[[["body",3]],["pin",3,[["box",3,[["asyncread",8]]]]]],[[["status",4]],["bool",0]],[[["synthetic",3]],["bool",0]],[[["body",3]],["bool",0]],[[["status",4]],["bool",0]],[[["status",4]],["bool",0]],[[["method",4]],["bool",0]],[[["conn",3]],["bool",0]],[[["status",4]],["bool",0]],[[["body",3]],["bool",0]],[[["stopper",3]],["bool",0]],[[["body",3]],["bool",0]],[[["status",4]],["bool",0]],[[["headers",3]],["iterator",8]],[[["synthetic",3]],["option",4,[["usize",0]]]],[[["body",3]],["option",4,[["u64",0]]]],[[["stopper",3]],["future",8]],[[["conn",3],["fn",8]],["conn",3,[["",26,[["asyncread",8],["asyncwrite",8],["send",8],["sync",8],["unpin",8]]]]]],[[["upgrade",3],["fn",8]],["upgrade",3,[["",26,[["asyncread",8],["asyncwrite",8],["send",8],["sync",8],["unpin",8]]]]]],[[["conn",3]],["method",4]],[[["upgrade",3]],["method",4]],null,[[["receivedbodystate",4],["receivedbodystate",4]],["bool",0]],[[["headervalues",3],["headervalues",3]],["bool",0]],[[["headervalue",3],["headervalue",3]],["bool",0]],[[],["stopper",3]],[[["option",4,[["vec",3,[["u8",0]]]]],["stopper",3]],["future",8]],[[],["stateset",3]],[[],["headers",3]],[[],["headervalues",3]],[[["into",8,[["cow",4]]]],["body",3]],[[["",26,[["asyncread",8],["send",8],["sync",8]]],["option",4,[["u64",0]]]],["body",3]],[[["method",4],["into",8,[["string",3]]],["into",8,[["synthetic",3]]]],["conn",3,[["synthetic",3]]]],[[["headervalues",3]],["option",4,[["headervalue",3]]]],[[["method",4],["method",4]],["option",4,[["ordering",4]]]],[[["version",4],["version",4]],["option",4,[["ordering",4]]]],[[["conn",3]],["str",0]],[[["upgrade",3]],["str",0]],null,[[["conn",3]],["option",4,[["ipaddr",4]]]],[[["pin",3,[["upgrade",3,[["",26,[["asyncwrite",8],["unpin",8]]]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["synthetic",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["upgrade",3,[["",26,[["asyncwrite",8],["unpin",8]]]]]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["synthetic",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["receivedbody",3]]],["context",3]],["poll",4,[["option",4]]]],[[["pin",3,[["receivedbody",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["upgrade",3,[["",26,[["asyncread",8],["unpin",8]]]]]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["synthetic",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["body",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["upgrade",3,[["",26,[["asyncwrite",8],["unpin",8]]]]]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["synthetic",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["conn",3]],["str",0]],[[["upgrade",3]],["str",0]],[[["receivedbody",3]],["future",8]],[[["receivedbody",3]],["future",8]],[[["headers",3],["into",8,[["headername",3]]]],["option",4,[["headervalues",3]]]],[[["conn",3,[["synthetic",3]]],["into",8,[["synthetic",3]]]]],[[["conn",3]],["future",8]],[[["conn",3]],["encoding",3]],[[["conn",3]],["headers",3]],null,[[["conn",3]],["headers",3]],[[["headers",3],["usize",0]]],[[["conn",3]],["option",4,[["body",3]]]],[[["conn",3]],["encoding",3]],[[["conn",3]],["headers",3]],[[["conn",3]],["headers",3]],[[["conn",3],["string",3]]],[[["conn",3],["method",4]]],[[["conn",3],["option",4,[["ipaddr",4]]]]],[[["conn",3],["into",8,[["body",3]]]]],[[["conn",3],["bool",0]]],[[["conn",3],["tryinto",8,[["status",4]]]]],[[["error",4]],["option",4,[["error",8]]]],[[["conn",3]],["instant",3]],[[["conn",3]],["stateset",3]],[[["upgrade",3]],["stateset",3]],null,[[["conn",3]],["stateset",3]],[[["body",3]],["option",4]],[[["conn",3]],["option",4,[["status",4]]]],[[["stopper",3]]],[[["stopper",3]],["futurestopper",3]],[[["stopper",3]],["streamstopper",3]],[[["conn",3]],["stopper",3]],null,[[["stateset",3]],["option",4]],[[["conn",3]],["option",4,[["body",3]]]],[[["receivedbody",3]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["headername",3]],["headername",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u16",0]],["result",4,[["status",4]]]],[[["str",0]],["result",4,[["method",4]]]],[[],["result",4]],[[],["result",4]],[[["headers",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usize",0]],["headers",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["box",3]],["box",3,[["any",8]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["boxedtransport",3]]],[[["boxedtransport",3]],["option",4,[["box",3]]]],[[["boxedtransport",3],["formatter",3]],["result",6]],[[]],[[]],[[["transport",8]],["boxedtransport",3]],[[["pin",3,[["boxedtransport",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["boxedtransport",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["boxedtransport",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3,[["boxedtransport",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"KnownHeaderName"],[4,"Status"],[4,"Method"],[4,"ReceivedBodyState"],[4,"ConnectionStatus"],[4,"Error"],[4,"Version"],[3,"Conn"],[3,"Headers"],[3,"HeaderValues"],[3,"Upgrade"],[3,"Synthetic"],[3,"HeaderName"],[3,"HeaderValue"],[3,"ReceivedBody"],[3,"Stopper"],[3,"Body"],[3,"StateSet"],[13,"Conn"],[13,"Upgrade"],[13,"Io"],[13,"HeaderMissing"],[13,"Httparse"],[13,"TryFromIntError"],[13,"MalformedHeader"],[13,"UnsupportedVersion"],[13,"UnrecognizedMethod"],[13,"UnrecognizedStatusCode"],[13,"EncodingError"],[13,"UnexpectedHeader"],[13,"FixedLength"],[13,"Chunked"],[8,"Transport"],[3,"BoxedTransport"]]},\
"trillium_logger":{"doc":"Welcome to the trillium logger!","t":[13,4,8,3,13,13,13,16,13,4,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,10,0,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["Auto","ColorMode","LogFormatter","Logger","Logger","Off","On","Output","Stdout","Target","apache_combined","apache_common","before_send","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","dev_formatter","fmt","fmt","format","formatters","from","from","from","init","into","into","into","logger","new","run","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_color_mode","with_formatter","with_target","0","apache_combined","apache_common","body_len_human","bytes","dev_formatter","header","ip","method","response_time","secure","status","timestamp","url","version"],"q":["trillium_logger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trillium_logger::Target","trillium_logger::formatters","","","","","","","","","","","","",""],"d":["detect if stdout is a tty","A configuration option that determines if format will be …","The interface to format a &amp;<code>Conn</code> as a <code>Display</code>-able output","The trillium handler for this crate, and the core type","Send trillium logger output to a log crate backend. See <code>log</code>…","alwasy disable colorful output","always enable colorful output","The display type for this formatter","Send trillium logger output to stdout","Specifies where the logger output should be sent","","","","","","","","","","","","","","","","","","","Extract Output from this Conn","Components with which common log formats can be constructed","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convenience alias for <code>Logger::new</code>","Builds a new logger","","","","","","","","","","","","","specify the color mode for this logger.","replace the formatter with any type that implements …","specify the logger target","","apache combined log format","apache common log format","formatter for the response body length, represented as a …","formatter that prints the number of response body bytes as …","simple development-mode formatter","formatter-builder for a particular header, formatted …","formatter for the peer ip address of the connection","formatter for the conn’s http method that delegates to …","formatter for the wall-time duration with units that this …","formatter that prints an emoji if the request is secure as …","formatter for the http status","formatter for the current timestamp. this represents the …","formatter for the current url or path of the request, …","formatter for the http version, as delegated to the display"],"i":[1,0,0,0,2,1,1,3,2,0,0,0,4,4,1,2,4,1,2,1,2,1,2,1,2,0,1,2,3,0,4,1,2,4,4,1,2,0,4,4,1,2,4,1,2,4,1,2,4,1,2,4,4,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["logger",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["colormode",4]],["colormode",4]],[[["target",4]],["target",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["colormode",4]],[[],["target",4]],null,[[["colormode",4],["formatter",3]],["result",6]],[[["target",4],["formatter",3]],["result",6]],[[["",0],["conn",3],["bool",0]]],null,[[]],[[]],[[]],[[["logger",3],["info",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[],["logger",3,[["logformatter",8]]]],[[],["logger",3,[["logformatter",8]]]],[[["logger",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["logger",3,[["logformatter",8]]],["colormode",4]],["logger",3,[["logformatter",8]]]],[[["logger",3],["logformatter",8]],["logger",3,[["logformatter",8]]]],[[["logger",3,[["logformatter",8]]],["target",4]],["logger",3,[["logformatter",8]]]],null,[[["logformatter",8],["logformatter",8]],["logformatter",8]],[[["logformatter",8],["logformatter",8]],["logformatter",8]],[[["conn",3],["bool",0]],["cow",4,[["str",0]]]],[[["conn",3],["bool",0]],["u64",0]],[[["conn",3],["bool",0]],["",26,[["display",8],["send",8]]]],[[["str",0]],["logformatter",8]],[[["conn",3],["bool",0]],["cow",4,[["str",0]]]],[[["conn",3],["bool",0]],["method",4]],[[["conn",3],["bool",0]],["responsetimeoutput",3]],[[["conn",3],["bool",0]],["str",0]],[[["conn",3],["bool",0]],["statusoutput",3]],[[["conn",3],["bool",0]],["now",3]],[[["conn",3],["bool",0]],["string",3]],[[["conn",3],["bool",0]],["version",4]]],"p":[[4,"ColorMode"],[4,"Target"],[8,"LogFormatter"],[3,"Logger"],[13,"Logger"]]},\
"trillium_method_override":{"doc":"Trillium method override handler","t":[3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["MethodOverride","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","method_override","new","run","to_owned","try_from","try_into","type_id","with_allowed_methods","with_param_name"],"q":["trillium_method_override","","","","","","","","","","","","","","","","",""],"d":["Trillium method override handler","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Alias for MethodOverride::new()","constructs a new MethodOverride handler with default …","","","","","","replace the default allowed methods with the provided list …","replace the default param name with the provided param name"],"i":[0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["methodoverride",3]],["methodoverride",3]],[[["",0],["",0]]],[[],["methodoverride",3]],[[["methodoverride",3],["formatter",3]],["result",6]],[[]],[[]],[[],["methodoverride",3]],[[],["methodoverride",3]],[[["methodoverride",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["methodoverride",3],["intoiterator",8]],["methodoverride",3]],[[["methodoverride",3],["str",0]],["methodoverride",3]]],"p":[[3,"MethodOverride"]]},\
"trillium_native_tls":{"doc":"This crate provides native tls trait implementations for …","t":[3,3,3,3,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Identity","NativeTlsAcceptor","NativeTlsConfig","NativeTlsConnector","accept","as_ref","async_native_tls","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect","default","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_pkcs12","from_pkcs12","from_pkcs8","into","into","into","into","native_tls","new","peer_addr","spawn","tcp_config","tls_connector","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["trillium_native_tls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A cryptographic identity.","trillium <code>Acceptor</code> for native-tls","Configuration for the native tls client connector","trillium client connector for native tls","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","constructs a NativeTlsAcceptor from a pkcs12 key and …","Parses a DER-formatted PKCS #12 archive, using the …","Parses a chain of PEM encoded X509 certificates, with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","constructs a NativeTlsAcceptor from a …","","","configuration for the inner Connector (usually tcp)","native tls configuration","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,0,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,3,2,1,2,3,1,1,1,1,1,2,3,4,1,4,4,1,2,3,4,0,1,3,3,2,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4],"f":[null,null,null,null,[[["nativetlsacceptor",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["nativetlsconfig",3]],["",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["nativetlsacceptor",3]],["nativetlsacceptor",3]],[[["nativetlsconfig",3,[["clone",8]]]],["nativetlsconfig",3,[["clone",8]]]],[[["nativetlsconnector",3,[["clone",8]]]],["nativetlsconnector",3,[["clone",8]]]],[[["identity",3]],["identity",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["url",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["nativetlsconfig",3,[["default",8]]]],[[["nativetlsacceptor",3],["formatter",3]],["result",6]],[[["nativetlsconfig",3,[["debug",8]]],["formatter",3]],["result",6]],[[["nativetlsconnector",3,[["debug",8]]],["formatter",3]],["result",6]],[[["tlsacceptor",3]],["nativetlsacceptor",3]],[[]],[[],["nativetlsacceptor",3]],[[["tlsacceptor",3]],["nativetlsacceptor",3]],[[["identity",3]],["nativetlsacceptor",3]],[[]],[[]],[[]],[[["str",0]],["nativetlsacceptor",3]],[[["str",0]],["result",4,[["identity",3],["error",3]]]],[[],["result",4,[["identity",3],["error",3]]]],[[]],[[]],[[]],[[]],null,[[["into",8,[["nativetlsacceptor",3]]]],["nativetlsacceptor",3]],[[],["result",6,[["socketaddr",4]]]],[[]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"NativeTlsAcceptor"],[3,"NativeTlsConfig"],[3,"NativeTlsConnector"],[3,"Identity"]]},\
"trillium_proxy":{"doc":"http reverse proxy trillium handler","t":[3,16,8,3,16,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Client","Config","Connector","Proxy","Transport","borrow","borrow","borrow_mut","borrow_mut","build_conn","clone","clone_into","connect","default","delete","fmt","fmt","from","from","get","has_upgrade","into","into","new","new","patch","peer_addr","post","proxy_not_found","put","run","spawn","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upgrade","with_client","with_config","with_config","with_default_pool","without_halting"],"q":["trillium_proxy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A client contains a Config and an optional connection pool …","A type that can be used to configure this Connector. It …","Interface for runtime and tls adapters for the trillium …","the proxy handler","The async read + write type for this connector, often a …","","","","","builds a new conn borrowing the config on this client. if …","","","Initiate a connection to the provided url, using the …","","Builds a new client conn with the delete http method and …","","","Returns the argument unchanged.","Returns the argument unchanged.","Builds a new client conn with the get http method and the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","construct a new proxy handler that sends all requests to …","Constructs a new Client without a connection pool and with …","Builds a new client conn with the patch http method and …","A SocketAddr representation of the other side of this …","Builds a new client conn with the post http method and the …","chainable constructor to set the 404 Not Found handling …","Builds a new client conn with the put http method and the …","","Spawn and detach a task on the runtime. Although this may …","","","","","","","","","chainable constructor to specfiy a <code>Client</code> to use. This is …","chainable constructor to specify the client Connector …","chainable constructor to specify Connector configuration.  …","chainable constructor to enable connection pooling. this …","The default behavior for this handler is to halt the conn …"],"i":[0,1,0,0,1,2,3,2,3,3,3,3,1,3,3,2,3,2,3,3,2,2,3,2,3,3,1,3,2,3,2,1,3,2,3,2,3,2,3,2,2,2,3,3,2],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["client",3]],["conn",3]],[[["client",3]],["client",3]],[[["",0],["",0]]],[[["url",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["client",3]],[[["client",3]],["conn",3]],[[["proxy",3,[["",26,[["debug",8],["connector",8]]]]],["formatter",3]],["result",6]],[[["client",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["client",3]],["conn",3]],[[["proxy",3,[["connector",8]]],["upgrade",3]],["bool",0]],[[]],[[]],[[["tryinto",8,[["url",3]]]],["proxy",3,[["connector",8]]]],[[],["client",3]],[[["client",3]],["conn",3]],[[],["result",4,[["socketaddr",4],["error",3]]]],[[["client",3]],["conn",3]],[[["proxy",3,[["connector",8]]]],["proxy",3,[["connector",8]]]],[[["client",3]],["conn",3]],[[["proxy",3,[["connector",8]]],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["proxy",3,[["connector",8]]],["upgrade",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["proxy",3,[["connector",8]]],["client",3,[["connector",8]]]],["proxy",3,[["connector",8]]]],[[["proxy",3,[["connector",8]]]],["proxy",3,[["connector",8]]]],[[["client",3]],["client",3]],[[["client",3]],["client",3]],[[["proxy",3,[["connector",8]]]],["proxy",3,[["connector",8]]]]],"p":[[8,"Connector"],[3,"Proxy"],[3,"Client"]]},\
"trillium_router":{"doc":"Welcome to the trillium router crate!","t":[3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,14,11,11,11,11,11,11,11,11,11,10,11,11],"n":["Router","RouterConnExt","RouterRef","add_route","all","all","any","any","before_send","borrow","borrow","borrow_mut","borrow_mut","build","default","delete","delete","fmt","fmt","from","from","get","get","has_upgrade","init","into","into","name","new","param","patch","patch","post","post","put","put","router","routes","run","set_options_handling","try_from","try_from","try_into","try_into","type_id","type_id","upgrade","wildcard","with_route","without_options_handling"],"q":["trillium_router","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The Router handler","Extends trillium::Conn with accessors for router params.","A <code>&amp;mut Router</code> for use with <code>Router::build</code>","Registers a handler for a method other than get, put, …","Appends the handler to all (get, post, put, delete, and …","Appends the handler to all (get, post, put, delete, and …","Appends the handler to each of the provided http methods.","Appends the handler to each of the provided http methods.","","","","","","Another way to build a router, if you don’t like the …","","Registers a handler for the delete http method.","Registers a handler for the delete http method.","","","Returns the argument unchanged.","Returns the argument unchanged.","Registers a handler for the get http method.","Registers a handler for the get http method.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Constructs a new Router. This is often used with …","Retrieves a captured param from the conn. Note that this …","Registers a handler for the patch http method.","Registers a handler for the patch http method.","Registers a handler for the post http method.","Registers a handler for the post http method.","Registers a handler for the put http method.","Registers a handler for the put http method.","Builds a new <code>Router</code>. Alias for <code>Router::new</code>.","The routes macro represents an experimental macro for …","","enable or disable the router’s behavior of responding to …","","","","","","","","Retrieves the wildcard match from the conn. Note that this …","Registers a handler for a method other than get, put, …","Disable the default behavior of responding to OPTIONS …"],"i":[0,0,0,1,2,1,2,1,2,2,1,2,1,2,2,2,1,2,1,2,1,2,1,2,2,2,1,2,2,3,2,1,2,1,2,1,0,0,2,1,2,1,2,1,2,1,2,3,2,2],"f":[null,null,null,[[["routerref",3],["handler",8]]],[[["router",3],["handler",8]],["router",3]],[[["routerref",3],["handler",8]]],[[["router",3],["handler",8]],["router",3]],[[["routerref",3],["handler",8]]],[[["router",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["fn",8]],["router",3]],[[],["router",3]],[[["router",3],["handler",8]],["router",3]],[[["routerref",3],["handler",8]]],[[["router",3],["formatter",3]],["result",6]],[[["routerref",3],["formatter",3]],["result",6]],[[]],[[]],[[["router",3],["handler",8]],["router",3]],[[["routerref",3],["handler",8]]],[[["router",3],["upgrade",6]],["bool",0]],[[["router",3],["info",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[["router",3]],["cow",4,[["str",0]]]],[[],["router",3]],[[["",0],["str",0]],["option",4,[["str",0]]]],[[["router",3],["handler",8]],["router",3]],[[["routerref",3],["handler",8]]],[[["router",3],["handler",8]],["router",3]],[[["routerref",3],["handler",8]]],[[["router",3],["handler",8]],["router",3]],[[["routerref",3],["handler",8]]],[[],["router",3]],null,[[["router",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["routerref",3],["bool",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["router",3],["upgrade",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["option",4,[["str",0]]]],[[["router",3],["handler",8]],["router",3]],[[["router",3]],["router",3]]],"p":[[3,"RouterRef"],[3,"Router"],[8,"RouterConnExt"]]},\
"trillium_rustls":{"doc":"This crate provides rustls trait implementations for …","t":[3,3,3,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RustlsAcceptor","RustlsConfig","RustlsConnector","accept","async_rustls","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","connect","default","fmt","fmt","fmt","from","from","from","from","from","from","from_pkcs8","into","into","into","new","peer_addr","rustls","rustls_config","spawn","tcp_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["trillium_rustls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["trillium <code>Acceptor</code> for Rustls","Client configuration for RustlsConnector","this struct provides rustls a trillium client connector …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","build a new RustlsAcceptor from a pkcs8 cert and key","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","build a new RustlsAcceptor from a <code>ServerConfig</code> or a …","","","configuration for rustls itself","","configuration for the inner transport","","","","","","","","","","","",""],"i":[0,0,0,1,0,2,3,1,2,3,1,2,3,1,2,3,1,2,3,2,3,1,2,3,3,1,1,1,1,2,3,1,1,2,0,3,2,3,2,3,1,2,3,1,2,3,1,2,3,1],"f":[null,null,null,[[["rustlsacceptor",3]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rustlsconnector",3,[["clone",8]]]],["rustlsconnector",3,[["clone",8]]]],[[["rustlsconfig",3,[["clone",8]]]],["rustlsconfig",3,[["clone",8]]]],[[["rustlsacceptor",3]],["rustlsacceptor",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["url",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["rustlsconfig",3,[["default",8]]]],[[["rustlsconnector",3,[["debug",8]]],["formatter",3]],["result",6]],[[["rustlsconfig",3,[["debug",8]]],["formatter",3]],["result",6]],[[["rustlsacceptor",3],["formatter",3]],["result",6]],[[]],[[]],[[["clientconfig",3]],["rustlsconfig",3,[["default",8]]]],[[["tlsacceptor",3]],["rustlsacceptor",3]],[[["serverconfig",3]],["rustlsacceptor",3]],[[]],[[],["rustlsacceptor",3]],[[]],[[]],[[]],[[["into",8,[["rustlsacceptor",3]]]],["rustlsacceptor",3]],[[],["result",6,[["socketaddr",4]]]],null,null,[[]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"RustlsAcceptor"],[3,"RustlsConnector"],[3,"RustlsConfig"]]},\
"trillium_server_common":{"doc":"Utilities for building trillium server adapters","t":[8,8,8,4,3,3,16,8,8,18,16,16,16,8,3,13,16,16,13,3,10,10,10,11,11,11,11,23,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,10,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Acceptor","AsyncRead","AsyncWrite","Binding","CloneCounter","Config","Config","ConfigExt","Connector","DESCRIPTION","Error","Listener","Output","Server","Stopper","Tcp","Transport","Transport","Unix","Url","accept","accept","acceptor","acceptor","as_box_any","as_ref","as_str","async_trait","block_on","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_listener","build_listener","build_listener","build_listener","cannot_be_a_base","clean_up","clean_up","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","connect","counter","counter","current","decrement","default","default","default","domain","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from_directory_path","from_file_path","from_str","get_hash","graceful_shutdown","graceful_shutdown","handle_signals","handle_signals","handle_stream","handle_stream","has_authority","has_host","hash","host","host","host","host_str","increment","index","index","index","index","info","into","into","into","into","into","into_future","into_string","is_stopped","join","listener_from_tcp","listener_from_tcp","listener_from_unix","listener_from_unix","make_relative","new","new","new","nodelay","nodelay","options","origin","over_capacity","over_capacity","parse","parse_with_params","partial_cmp","password","path","path_segments","path_segments_mut","peer_addr","peer_ip","peer_ip","poll","poll_close","poll_close","poll_flush","poll_flush","poll_next","poll_read","poll_read","poll_read_vectored","poll_write","poll_write","poll_write_vectored","port","port","port","port_or_known_default","query","query_pairs","query_pairs_mut","run","run","run","run_async","run_async","run_async","scheme","set_fragment","set_host","set_ip_host","set_ip_ttl","set_ip_ttl","set_nodelay","set_nodelay","set_password","set_path","set_port","set_query","set_scheme","set_username","should_register_signals","should_register_signals","socket_addrs","socket_addrs","socket_addrs","spawn","spawn","stop","stop_future","stop_stream","stopper","stopper","to_file_path","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","type_id","username","with_acceptor","with_host","with_max_connections","with_nodelay","with_port","with_stopper","without_signals","0","0"],"q":["trillium_server_commontrillium_server_common::Binding",""],"d":["This trait provides the common interface for server-side …","Read bytes asynchronously.","Write bytes asynchronously.","A wrapper enum that has blanket implementations for common …","an atomic counter that increments on clone &amp; decrements on …","Primary entrypoint for configuring and running a trillium …","A type that can be used to configure this Connector. It …","Server-implementer interfaces to Config","Interface for runtime and tls adapters for the trillium …","The description of this server, to be appended to the Info …","An error type that <code>Acceptor::accept</code> may return","an async type like TcpListener or UnixListener. This trait …","The stream type. For example, TlsStream","The server trait, for standard network-based server …","This struct provides a synchronized mechanism for canceling","a tcp type (listener or incoming or stream)","The async read + write type for this connector, often a …","the individual byte stream (AsyncRead+AsyncWrite) that http","a unix type (listener or incoming or stream)","A parsed URL record.","Transform an Input (…","Asynchronously return a single <code>Self::Transport</code> from a …","returns the tls acceptor for this server","","","","Return the serialization of this URL.","","Runtime implementation hook for blocking on a top level …","","","","","","","","","","","builds any type that is TryFromstd::net::TcpListener and …","Build a listener from the config. The default logic for …","Build a listener from the config. The default logic for …","","Return whether this URL is a cannot-be-a-base URL, meaning …","After the server has shut down, perform any housekeeping, …","After the server has shut down, perform any housekeeping, …","","","","","","","","","","Initiate a connection to the provided url, using the …","returns the <code>CloneCounter</code> for this server. please note that …","","Returns the current count. The first CloneCounter is zero, …","Manually decrement the count. This is useful when taking a …","","","","If this URL has a host and it is a domain name (not an IP …","","","","","","","","","Return this URL’s fragment identifier, if any.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a directory name as <code>std::path::Path</code> into an URL in …","Convert a file name as <code>std::path::Path</code> into an URL in the …","","","waits for the last clone of the <code>CloneCounter</code> in this …","","Implementation hook for listening for any os signals and …","Implementation hook for listening for any os signals and …","apply the provided handler to the transport, using …","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","resolve the host for this application, either directly from","","Return the parsed representation of the host for this URL. …","Return the string representation of the host (domain or IP …","Manually increment the count. unless paired with a …","","","","","Build an <code>Info</code> from the Self::Listener type. See <code>Info</code> for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return the serialization of this URL.","Returns whether this stopper (or any clone of it) has been …","Parse a string as an URL, with this URL as the base URL.","Build a Self::Listener from a tcp listener. This is called …","Build a Self::Listener from a tcp listener. This is called …","Build a Self::Listener from a tcp listener. This is called …","Build a Self::Listener from a tcp listener. This is called …","Creates a relative URL if possible, with this URL as the …","Initialize a stopper that is not yet stopped and that has …","Constructs a new CloneCounter. Identical to …","build a new config with default acceptor","returns whether the server should set TCP_NODELAY on the …","","Return a default <code>ParseOptions</code> that can fully configure the …","Return the origin of this URL (…","determines if the server is currently responding to more …","","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator of …","Return an object with methods to manipulate this URL’s …","A SocketAddr representation of the other side of this …","Optional method to return a peer ip address from a …","Optional method to return a peer ip address from a …","","Attempt to close the object.","","Attempt to flush the object, ensuring that any buffered …","","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to write bytes from <code>buf</code> into the object.","","Attempt to write bytes from <code>bufs</code> into the object using …","resolve a port for this application, either directly …","","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a sequence …","Run a trillium application from a sync context","Run a trillium application from a sync context","Starts an async runtime and runs the provided handler with …","Run a trillium application from an async context. The …","Run a trillium application from an async context. The …","Runs the provided handler with this config, in an …","Return the scheme of this URL, lower-cased, as an ASCII …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Optional method to set ip ttl to the provided value on the …","Optional method to set ip ttl to the provided value on the …","Optional method to set tcp nodelay to the provided value on","Optional method to set tcp nodelay to the provided value on","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","returns whether this server should register itself for …","","use the <code>ConfigExt::port</code> and <code>ConfigExt::host</code> to resolve a …","","Resolve a URL’s host and port number to <code>SocketAddr</code>.","Spawn and detach a task on the runtime. Although this may …","Runtime implementation hook for spawning a task.","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","returns a clone of the <code>Stopper</code> associated with this …","","Assuming the URL is in the <code>file</code> scheme or similar, convert …","","","","","","","","","","","","","","","","","","","","","","","","","Return the username for this URL (typically the empty …","Configures the tls acceptor for this server","Configures the server to listen on this host or ip …","Configures the maximum number of connections to accept. The","Configures the tcp listener to use TCP_NODELAY. See …","Configures the server to listen on this port. The default …","use the specific <code>Stopper</code> provided","Configures the server to NOT register for graceful-shutdown","",""],"i":[0,0,0,0,0,0,1,0,0,2,3,2,3,0,0,4,1,2,4,0,3,2,5,6,4,7,7,0,2,8,9,6,4,7,8,9,6,4,7,5,2,2,6,7,2,2,8,9,6,7,8,9,6,7,7,1,5,6,9,9,8,9,6,7,9,7,8,9,6,4,7,7,7,8,9,6,4,7,7,7,7,7,5,6,2,2,5,6,7,7,7,5,6,7,7,9,7,7,7,7,2,8,9,6,4,7,9,7,8,7,2,2,2,2,7,8,9,6,5,6,7,7,5,6,7,7,7,7,7,7,7,1,2,2,9,10,4,10,4,4,11,4,11,10,4,10,5,6,7,7,7,7,7,2,2,6,2,2,6,7,7,7,7,2,2,2,2,7,7,7,7,7,7,5,6,5,6,7,1,2,8,8,8,5,6,7,8,9,6,7,7,8,9,6,4,4,4,7,7,8,9,6,4,7,4,8,9,6,4,7,7,6,6,6,6,6,6,6,12,13],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["config",3]],["",0]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["url",3]],["str",0]],[[["url",3]],["str",0]],null,[[["future",8]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["config",3]]],[[["config",3]]],[[["config",3]]],[[["url",3]],["bool",0]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[["stopper",3]],["stopper",3]],[[["clonecounter",3]],["clonecounter",3]],[[["config",3,[["sized",8],["clone",8]]]],["config",3,[["sized",8],["clone",8]]]],[[["url",3]],["url",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["url",3],["url",3]],["ordering",4]],[[["url",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["clonecounter",3]],[[["config",3]],["clonecounter",3]],[[["clonecounter",3]],["usize",0]],[[["clonecounter",3]]],[[],["stopper",3]],[[],["clonecounter",3]],[[],["config",3]],[[["url",3]],["option",4,[["str",0]]]],[[["clonecounter",3]]],[[["url",3],["url",3]],["bool",0]],[[["stopper",3],["formatter",3]],["result",4,[["error",3]]]],[[["clonecounter",3],["formatter",3]],["result",6]],[[["config",3,[["",26,[["debug",8],["sized",8]]],["debug",8]]],["formatter",3]],["result",6]],[[["binding",4,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["url",3],["formatter",3]],["result",4,[["error",3]]]],[[["url",3],["formatter",3]],["result",4,[["error",3]]]],[[["url",3]],["option",4,[["str",0]]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["url",3]]]],[[],["result",4,[["url",3]]]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["",0],["",0]],["u64",0]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[["config",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["stopper",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["stopper",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["handler",8]],["pin",3,[["box",3,[["future",8]]]]]],[[["config",3],["handler",8]],["pin",3,[["box",3,[["future",8]]]]]],[[["url",3]],["bool",0]],[[["url",3]],["bool",0]],[[["url",3],["",0]]],[[["",0]],["string",3]],[[["config",3]],["string",3]],[[["url",3]],["option",4,[["host",4,[["str",0]]]]]],[[["url",3]],["option",4,[["str",0]]]],[[["clonecounter",3]]],[[["url",3],["rangefrom",3,[["position",4]]]],["str",0]],[[["url",3],["rangefull",3]],["str",0]],[[["url",3],["rangeto",3,[["position",4]]]],["str",0]],[[["url",3],["range",3,[["position",4]]]],["str",0]],[[],["info",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["url",3]],["string",3]],[[["stopper",3]],["bool",0]],[[["url",3],["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["tcplistener",3]]],[[["tcplistener",3]]],[[["unixlistener",3]]],[[["unixlistener",3]]],[[["url",3],["url",3]],["option",4,[["string",3]]]],[[],["stopper",3]],[[],["clonecounter",3]],[[],["config",3]],[[["",0]],["bool",0]],[[["config",3]],["bool",0]],[[],["parseoptions",3]],[[["url",3]],["origin",4]],[[["",0]],["bool",0]],[[["config",3]],["bool",0]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["url",3],["url",3]],["option",4,[["ordering",4]]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3]],["str",0]],[[["url",3]],["option",4,[["split",3,[["char",0]]]]]],[[["url",3]],["result",4,[["pathsegmentsmut",3]]]],[[],["result",4,[["socketaddr",4],["error",3]]]],[[],["option",4,[["ipaddr",4]]]],[[],["option",4,[["ipaddr",4]]]],[[["pin",3,[["clonecounter",3]]],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["binding",4]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["binding",4]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3,[["binding",4]]],["context",3]],["poll",4,[["option",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3,[["binding",4]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3,[["binding",4]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["",0]],["u16",0]],[[["config",3]],["u16",0]],[[["url",3]],["option",4,[["u16",0]]]],[[["url",3]],["option",4,[["u16",0]]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3]],["parse",3]],[[["url",3]],["serializer",3,[["urlquery",3]]]],[[["config",3]]],[[["config",3]]],[[["config",3],["handler",8]]],[[["config",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["config",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["config",3],["handler",8]],["future",8]],[[["url",3]],["str",0]],[[["url",3],["option",4,[["str",0]]]]],[[["url",3],["option",4,[["str",0]]]],["result",4,[["parseerror",4]]]],[[["url",3],["ipaddr",4]],["result",4]],[[["u32",0]]],[[["u32",0]]],[[["bool",0]]],[[["bool",0]]],[[["url",3],["option",4,[["str",0]]]],["result",4]],[[["url",3],["str",0]]],[[["url",3],["option",4,[["u16",0]]]],["result",4]],[[["url",3],["option",4,[["str",0]]]]],[[["url",3],["str",0]],["result",4]],[[["url",3],["str",0]],["result",4]],[[["",0]],["bool",0]],[[["config",3]],["bool",0]],[[["",0]],["vec",3,[["socketaddr",4]]]],[[["config",3]],["vec",3,[["socketaddr",4]]]],[[["url",3],["fn",8]],["result",4,[["vec",3,[["socketaddr",4],["global",3]]],["error",3]]]],[[]],[[["",26,[["future",8],["send",8]]]]],[[["stopper",3]]],[[["stopper",3]],["futurestopper",3]],[[["stopper",3]],["streamstopper",3]],[[["",0]],["stopper",3]],[[["config",3]],["stopper",3]],[[["url",3]],["result",4,[["pathbuf",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["unixlistener",3]],["result",4,[["binding",4,[["tryfrom",8,[["unixlistener",3]]]]]]]],[[["tcplistener",3]],["result",4,[["binding",4,[["tryfrom",8,[["tcplistener",3]]]]]]]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4,[["url",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["url",3]],["str",0]],[[["config",3],["acceptor",8]],["config",3,[["acceptor",8]]]],[[["config",3],["str",0]],["config",3]],[[["config",3],["option",4,[["usize",0]]]],["config",3]],[[["config",3]],["config",3]],[[["config",3],["u16",0]],["config",3]],[[["config",3],["stopper",3]],["config",3]],[[["config",3]],["config",3]],null,null],"p":[[8,"Connector"],[8,"Server"],[8,"Acceptor"],[4,"Binding"],[8,"ConfigExt"],[3,"Config"],[3,"Url"],[3,"Stopper"],[3,"CloneCounter"],[8,"AsyncWrite"],[8,"AsyncRead"],[13,"Tcp"],[13,"Unix"]]},\
"trillium_sessions":{"doc":"Trillium sessions","t":[3,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["CookieStore","MemoryStore","Session","SessionConnExt","SessionHandler","before_send","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cleanup","clear_store","clear_store","clone","clone","clone","clone_into","clone_into","clone_into","count","data_changed","default","deserialize","destroy","destroy_session","destroy_session","eq","expire_in","expires_in","expiry","fmt","fmt","fmt","fmt","from","from","from","from","get","get_raw","id","id_from_cookie_value","insert","insert_raw","into","into","into","into","into_cookie_value","is_destroyed","is_expired","len","load_session","load_session","new","new","new","new","regenerate","remove","reset_data_changed","run","serialize","session","session_mut","sessions","set_cookie_value","set_expiry","store_session","store_session","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","with_cookie_domain","with_cookie_name","with_cookie_path","with_older_secrets","with_same_site_policy","with_session","with_session_ttl","without_save_unchanged"],"q":["trillium_sessions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A session store that serializes the entire session into a …","in-memory session store","The main session type.","extension trait to add session support to <code>Conn</code>","Handler to enable sessions.","","","","","","","","","","Performs session cleanup. This should be run on an …","","","","","","","","","returns the number of elements in the memory store","Checks if the data has been modified. This is based on the …","","","mark this session for destruction. the actual session …","","","","assigns the expiry timestamp to a duration from the …","Ensures that this session is not expired. Returns None if …","returns the expiry timestamp of this session, if there is …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","deserializes a type T out of the session hashmap","returns the String value contained in the session hashmap","Gets the session id","applies a cryptographic hash function on a cookie value …","inserts a serializable value into the session hashmap. …","inserts a string into the session hashmap","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","takes the cookie value and consume this session. this is …","returns true if this session is marked for destruction","predicate function to determine if this session is …","returns the number of elements in the session hashmap","","","Constructs a SessionHandler from the given …","constructs a new CookieStore","Create a new instance of MemoryStore","Create a new session. Generates a random id and matching …","Generates a new id and cookie for this session","removes an entry from the session hashmap","Resets <code>data_changed</code> dirty tracking. This is unnecessary for","","","retrieve a reference to the current session","retrieve a mutable reference to the current session","Alias for <code>SessionHandler::new</code>","sets the cookie value that this session will use to …","assigns an expiry timestamp to this session","","","","","","","","","","","","","","","","","","Ensures that this session is not expired. Returns None if …","","","","","Sets the domain of the cookie.","Sets the name of the cookie that the session is stored …","Sets a cookie path for this session handler. The default …","Sets optional older signing keys that will not be used to …","Sets the same site policy for the session cookie. Defaults …","append a key-value pair to the current session, where the …","Sets a session ttl. This will be used both for the cookie …","Disables the <code>save_unchanged</code> setting. When <code>save_unchanged</code> …"],"i":[0,0,0,0,0,1,1,2,3,4,1,2,3,4,3,2,3,2,3,4,2,3,4,3,4,4,4,4,2,3,4,4,4,4,1,2,3,4,1,2,3,4,4,4,4,4,4,4,1,2,3,4,4,4,4,4,2,3,1,2,3,4,4,4,4,1,4,5,5,0,4,4,2,3,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,4,1,2,3,4,1,1,1,1,1,5,1,1],"f":[null,null,null,null,null,[[["sessionhandler",3,[["sessionstore",8]]],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["memorystore",3]],["future",8]],[[["cookiestore",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["memorystore",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["cookiestore",3]],["cookiestore",3]],[[["memorystore",3]],["memorystore",3]],[[["session",3]],["session",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["memorystore",3]],["future",8]],[[["session",3]],["bool",0]],[[],["session",3]],[[],["result",4,[["session",3]]]],[[["session",3]]],[[["cookiestore",3],["session",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["memorystore",3],["session",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["session",3],["session",3]],["bool",0]],[[["session",3],["duration",3]]],[[["session",3]],["option",4,[["duration",3]]]],[[["session",3]],["option",4,[["datetime",3]]]],[[["sessionhandler",3,[["sessionstore",8]]],["formatter",3]],["result",6]],[[["cookiestore",3],["formatter",3]],["result",4,[["error",3]]]],[[["memorystore",3],["formatter",3]],["result",4,[["error",3]]]],[[["session",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["session",3],["str",0]],["option",4]],[[["session",3],["str",0]],["option",4,[["string",3]]]],[[["session",3]],["str",0]],[[["str",0]],["result",4,[["string",3],["decodeerror",4]]]],[[["session",3],["str",0],["serialize",8]],["result",4,[["error",3]]]],[[["session",3],["str",0],["string",3]]],[[]],[[]],[[]],[[]],[[["session",3]],["option",4,[["string",3]]]],[[["session",3]],["bool",0]],[[["session",3]],["bool",0]],[[["session",3]],["usize",0]],[[["cookiestore",3],["string",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["memorystore",3],["string",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["sessionstore",8],["asref",8]],["sessionhandler",3,[["sessionstore",8]]]],[[],["cookiestore",3]],[[],["memorystore",3]],[[],["session",3]],[[["session",3]]],[[["session",3],["str",0]]],[[["session",3]]],[[["sessionhandler",3,[["sessionstore",8]]],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["session",3]],["result",4]],[[["",0]],["session",3]],[[["",0]],["session",3]],[[["asref",8]],["sessionhandler",3]],[[["session",3],["string",3]]],[[["session",3],["datetime",3,[["utc",3]]]]],[[["cookiestore",3],["session",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["memorystore",3],["session",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["session",3]],["option",4,[["session",3]]]],[[]],[[]],[[]],[[]],[[["sessionhandler",3,[["sessionstore",8]]],["asref",8,[["str",0]]]],["sessionhandler",3,[["sessionstore",8]]]],[[["sessionhandler",3,[["sessionstore",8]]],["asref",8,[["str",0]]]],["sessionhandler",3,[["sessionstore",8]]]],[[["sessionhandler",3,[["sessionstore",8]]],["asref",8,[["str",0]]]],["sessionhandler",3,[["sessionstore",8]]]],[[["sessionhandler",3,[["sessionstore",8]]]],["sessionhandler",3,[["sessionstore",8]]]],[[["sessionhandler",3,[["sessionstore",8]]],["samesite",4]],["sessionhandler",3,[["sessionstore",8]]]],[[["str",0],["serialize",8]]],[[["sessionhandler",3,[["sessionstore",8]]],["option",4,[["duration",3]]]],["sessionhandler",3,[["sessionstore",8]]]],[[["sessionhandler",3,[["sessionstore",8]]]],["sessionhandler",3,[["sessionstore",8]]]]],"p":[[3,"SessionHandler"],[3,"CookieStore"],[3,"MemoryStore"],[3,"Session"],[8,"SessionConnExt"]]},\
"trillium_smol":{"doc":"Trillium adapter using smol and async-global-executor","t":[3,3,3,2,2,2,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11],"n":["ClientConfig","Stopper","TcpConnector","async_global_executor","async_io","async_net","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","config","connect","default","default","fmt","fmt","fmt","from","from","from","into","into","into","is_stopped","new","nodelay","peer_addr","run","run_async","spawn","stop","stop_future","stop_stream","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id"],"q":["trillium_smol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["configuration for the tcp Connector","This struct provides a synchronized mechanism for canceling","tcp connector for smol based on async_net::TcpStream","","","","","","","","","","","","","","","","Configures a server before running it","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this stopper (or any clone of it) has been …","Initialize a stopper that is not yet stopped and that has …","disable nagle’s algorithm","","Runs a trillium handler in a sync context with default …","Runs a trillium handler in an async context with default …","","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","","","","","","","","","","set a time to live for the tcp protocol","","",""],"i":[0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,0,2,1,3,1,2,3,1,2,3,1,2,3,3,3,1,2,0,0,2,3,3,3,1,2,3,1,2,3,1,2,3,1,1,2,3],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["clientconfig",3]],["clientconfig",3]],[[["tcpconnector",3]],["tcpconnector",3]],[[["stopper",3]],["stopper",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["config",3,[["smol",3]]]],[[["url",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["clientconfig",3]],[[],["stopper",3]],[[["clientconfig",3],["formatter",3]],["result",6]],[[["tcpconnector",3],["formatter",3]],["result",6]],[[["stopper",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["stopper",3]],["bool",0]],[[],["stopper",3]],null,[[],["result",6,[["socketaddr",4]]]],[[["handler",8]]],[[["handler",8]],["future",8]],[[]],[[["stopper",3]]],[[["stopper",3]],["futurestopper",3]],[[["stopper",3]],["streamstopper",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"ClientConfig"],[3,"TcpConnector"],[3,"Stopper"]]},\
"trillium_sse":{"doc":"Trillium tools for server sent events","t":[3,8,8,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11],"n":["Event","Eventable","SseConnExt","borrow","borrow_mut","clone","clone_into","data","data","data","eq","event_type","event_type","event_type","fmt","from","from","from","from","id","into","ne","new","set_type","to_owned","try_from","try_into","type_id","with_sse_stream","with_type"],"q":["trillium_sse","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Events are a concrete implementation of the <code>Eventable</code> …","A trait that allows any Unpin + Send + Sync type to act as …","Extension trait for server sent events","","","","","return the data for this event. non-optional.","returns this Event’s data as a &amp;str","","","return the event type, optionally","","returns this Event’s type as a str, if set","","","","","Returns the argument unchanged.","return a unique event id, optionally","Calls <code>U::from(self)</code>.","","builds a new <code>Event</code>","set the event type for this Event. The default is None.","","","","","builds and sets a streaming response body that conforms to …","chainable constructor to set the type on an event"],"i":[0,0,0,1,1,1,1,2,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,3,1],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["event",3]],["event",3]],[[["",0],["",0]]],[[["",0]],["str",0]],[[["event",3]],["str",0]],[[["event",3]],["str",0]],[[["event",3],["event",3]],["bool",0]],[[["",0]],["option",4,[["str",0]]]],[[["event",3]],["option",4,[["str",0]]]],[[["event",3]],["option",4,[["str",0]]]],[[["event",3],["formatter",3]],["result",6]],[[["cow",4,[["str",0]]]],["event",3]],[[["string",3]],["event",3]],[[["str",0]],["event",3]],[[]],[[["",0]],["option",4,[["str",0]]]],[[]],[[["event",3],["event",3]],["bool",0]],[[["into",8,[["cow",4,[["str",0]]]]]],["event",3]],[[["event",3],["into",8,[["cow",4,[["str",0]]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["event",3],["into",8,[["cow",4,[["str",0]]]]]],["event",3]]],"p":[[3,"Event"],[8,"Eventable"],[8,"SseConnExt"]]},\
"trillium_static":{"doc":"Serves static file assets from the file system.","t":[8,3,11,11,14,5,11,11,11,11,11,2,11,10,10,10,10,11,11,11,11,10,11,11],"n":["StaticConnExt","StaticFileHandler","borrow","borrow_mut","crate_relative_path","files","fmt","from","init","into","new","relative_path","run","send_file","send_file_with_options","send_path","send_path_with_options","try_from","try_into","type_id","with_index_file","with_mime_from_path","without_etag_header","without_modified_header"],"q":["trillium_static","","","","","","","","","","","","","","","","","","","","","","",""],"d":["conn extension trait to facilitate sending individual …","trillium handler to serve static files from the filesystem","","","a convenient helper macro to build a str relative to the …","convenience alias for <code>StaticFileHandler::new</code>","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","builds a new StaticFileHandler","","","Send the file at the provided path. Will send a 404 if the …","Send the file at the provided path. Will send a 404 if the …","Send the file at the provided path. Will send a 404 if the …","Send the file at the provided path. Will send a 404 if the …","","","","sets the index file on this StaticFileHandler","Guess the mime type for this fs path using <code>mime_guess</code> and …","do not set an etag header","do not set last-modified header"],"i":[0,0,1,1,0,0,1,1,1,1,1,0,1,2,2,2,2,1,1,1,1,2,1,1],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["asref",8,[["path",3]]]],["staticfilehandler",3]],[[["staticfilehandler",3],["formatter",3]],["result",6]],[[]],[[["staticfilehandler",3],["info",3]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["asref",8,[["path",3]]]],["staticfilehandler",3]],null,[[["staticfilehandler",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["file",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["file",3],["staticoptions",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[["staticoptions",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["staticfilehandler",3],["str",0]],["staticfilehandler",3]],[[["asref",8,[["path",3]]]]],[[["staticfilehandler",3]],["staticfilehandler",3]],[[["staticfilehandler",3]],["staticfilehandler",3]]],"p":[[3,"StaticFileHandler"],[8,"StaticConnExt"]]},\
"trillium_static_compiled":{"doc":"Serves static file assets from memory, as included in the …","t":[3,11,11,11,11,11,11,11,11,14,11,14,11,11,11,11,11],"n":["StaticCompiledHandler","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","root","run","static_compiled","to_owned","try_from","try_into","type_id","with_index_file"],"q":["trillium_static_compiled","","","","","","","","","","","","","","","",""],"d":["The static compiled handler which contains the …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Constructs a new StaticCompiledHandler. This must be used …","Include the path as root. To be passed into …","","The preferred interface to build a StaticCompiledHandler","","","","","Configures the optional index file for this …"],"i":[0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["staticcompiledhandler",3]],["staticcompiledhandler",3]],[[["",0],["",0]]],[[["staticcompiledhandler",3],["formatter",3]],["result",6]],[[]],[[]],[[["direntry",4]],["staticcompiledhandler",3]],null,[[["staticcompiledhandler",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["staticcompiledhandler",3],["str",0]],["staticcompiledhandler",3]]],"p":[[3,"StaticCompiledHandler"]]},\
"trillium_static_compiled_macros":{"doc":"Internal-use fork of <code>include_dir_macros</code> for <code>trillium.rs</code>. …","t":[14,14],"n":["include_dir","include_entry"],"q":["trillium_static_compiled_macros",""],"d":["Embed the contents of a directory. “Returns” a Dir","Embed a directory or file. “Returns” a DirEntry"],"i":[0,0],"f":[null,null],"p":[]},\
"trillium_tera":{"doc":"this crate provides the tera templating language for …","t":[3,8,8,3,8,3,8,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Context","Filter","Function","Tera","TeraConnExt","TeraHandler","Test","add_raw_template","add_raw_templates","add_template_file","add_template_files","assign","autoescape_on","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_inheritance_chains","call","check_macro_files","clone","clone","clone","clone_into","clone_into","clone_into","contains_key","context","context_mut","default","default","eq","extend","extend","filter","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_serialize","from_value","full_reload","get","get_template_names","insert","into","into","into","into_json","is_safe","is_safe","ne","new","new","new","one_off","parse","register_filter","register_function","register_tester","remove","render","render","render_str","render_to","reset_escape_fn","run","set_escape_fn","tera","test","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["trillium_tera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The struct that holds the context of a template rendering.","The filter function type definition","The global function type definition","The main point of interaction in this library.","Extends trillium::Conn with tera template-rendering …","","The tester function type definition","Add a single template to the Tera instance","Add all the templates given to the Tera instance","Add a single template from a path to the Tera instance. …","Add several templates from paths to the Tera instance. The …","Adds a key-value pair to the assigns <code>Context</code>, where the …","Select which suffix(es) to automatically do HTML escaping …","","","","","","","We need to know the hierarchy of templates to be able to …","The global function type definition","We keep track of macro files loaded in each Template so we …","","","","","","","Checks if a value exists at a specific index.","Retrieves a reference to the tera assigns context. Must be …","retrieves a reference to the tera assigns context. must be …","","","","Appends the data of the <code>source</code> parameter to <code>self</code>, …","Use that method when you want to add a given Tera instance …","The filter function type definition","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Takes something that impl Serialize and create a context …","Takes a serde-json <code>Value</code> and convert it into a <code>Context</code> …","Re-parse all templates found in the glob given to Tera Use …","Returns the value at a given key index.","Returns an iterator over the names of all registered …","Converts the <code>val</code> parameter to <code>Value</code> and insert it into the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the context to a <code>serde_json::Value</code> consuming the …","Whether the current filter’s output should be treated as …","Whether the current function’s output should be treated …","","Construct a new TeraHandler from either a <code>&amp;str</code> or PathBuf …","Initializes an empty context","Create a new instance of Tera, containing all the parsed …","Renders a one off template (for example a template coming …","Create a new instance of Tera, containing all the parsed …","Register a filter with Tera.","Register a function with Tera.","Register a tester with Tera.","Remove a key from the context, returning the value at the …","Uses the accumulated assigns context to render the …","Renders a Tera template given a <code>tera::Context</code>,","Renders a one off template (for example a template coming …","Renders a Tera template given a <code>tera::Context</code> to a …","Reset escape function to default <code>tera::escape_html</code>.","","Set user-defined function which applied to a rendered …","Retrieves a reference to the <code>Tera</code> instance. Must be called …","The tester function type definition","","","","","","","Converts the <code>val</code> parameter to <code>Value</code> and insert it into the …","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,2,1,3,4,1,3,4,1,1,5,1,3,4,1,3,4,1,4,2,2,4,1,4,4,1,6,3,4,1,3,3,3,3,3,3,3,4,1,4,4,1,4,1,4,3,4,1,4,6,5,4,3,4,1,1,1,1,1,1,4,2,1,1,1,1,3,1,2,7,3,4,1,3,4,1,4,3,4,1,3,4,1,3,4,1],"f":[null,null,null,null,null,null,null,[[["tera",3],["str",0],["str",0]],["result",4,[["error",3]]]],[[["tera",3]],["result",4,[["error",3]]]],[[["tera",3],["option",4,[["str",0]]]],["result",4,[["error",3]]]],[[["tera",3]],["result",4,[["error",3]]]],[[["str",0],["serialize",8]]],[[["tera",3],["vec",3,[["str",0],["global",3]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["tera",3]],["result",4,[["error",3]]]],[[["",0],["hashmap",3]],["result",4,[["value",4],["error",3]]]],[[["tera",3]],["result",4,[["error",3]]]],[[["terahandler",3]],["terahandler",3]],[[["context",3]],["context",3]],[[["tera",3]],["tera",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["context",3],["str",0]],["bool",0]],[[["",0]],["context",3]],[[["",0]],["context",3]],[[],["context",3]],[[],["tera",3]],[[["context",3],["context",3]],["bool",0]],[[["context",3],["context",3]]],[[["tera",3],["tera",3]],["result",4,[["error",3]]]],[[["",0],["value",4],["hashmap",3]],["result",4,[["value",4],["error",3]]]],[[["terahandler",3],["formatter",3]],["result",6]],[[["context",3],["formatter",3]],["result",4,[["error",3]]]],[[["tera",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[],["terahandler",3]],[[["tera",3]],["terahandler",3]],[[["string",3]],["terahandler",3]],[[["string",3]],["terahandler",3]],[[["str",0]],["terahandler",3]],[[["pathbuf",3]],["terahandler",3]],[[]],[[]],[[["serialize",8]],["result",4,[["context",3],["error",3]]]],[[["value",4]],["result",4,[["context",3],["error",3]]]],[[["tera",3]],["result",4,[["error",3]]]],[[["context",3],["str",0]],["option",4,[["value",4]]]],[[["tera",3]],["iterator",8]],[[["context",3],["",0]]],[[]],[[]],[[]],[[["context",3]],["value",4]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["context",3],["context",3]],["bool",0]],[[["into",8,[["terahandler",3]]]],["terahandler",3]],[[],["context",3]],[[["str",0]],["result",4,[["tera",3],["error",3]]]],[[["str",0],["context",3],["bool",0]],["result",4,[["string",3],["error",3]]]],[[["str",0]],["result",4,[["tera",3],["error",3]]]],[[["tera",3],["str",0]]],[[["tera",3],["str",0]]],[[["tera",3],["str",0]]],[[["context",3],["str",0]],["option",4,[["value",4]]]],[[["str",0]]],[[["tera",3],["str",0],["context",3]],["result",4,[["string",3],["error",3]]]],[[["tera",3],["str",0],["context",3]],["result",4,[["string",3],["error",3]]]],[[["tera",3],["str",0],["context",3],["write",8]],["result",4,[["error",3]]]],[[["tera",3]]],[[["terahandler",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["tera",3]]],[[["",0]],["tera",3]],[[["",0],["option",4,[["value",4]]]],["result",4,[["bool",0],["error",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["",0]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"Tera"],[8,"TeraConnExt"],[3,"TeraHandler"],[3,"Context"],[8,"Function"],[8,"Filter"],[8,"Test"]]},\
"trillium_testing":{"doc":"testing utilities for trillium applications.","t":[13,13,8,8,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,11,11,11,11,14,14,14,14,14,14,14,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,10,11,11,11,11,0,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,5,5,5,5,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,2,2,2,2,2,2,2,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Accepted","Acl","AsyncRead","AsyncReadExt","AsyncWrite","BadGateway","BadRequest","BaselineControl","Bind","Checkin","Checkout","Conflict","Connect","Continue","Copy","Created","Delete","EarlyHints","ExpectationFailed","FailedDependency","Forbidden","Found","GatewayTimeout","Get","Gone","Head","HttpVersionNotSupported","ImATeapot","ImUsed","InsufficientStorage","InternalServerError","Label","LengthRequired","Link","Lock","Locked","LoopDetected","Merge","Method","MethodNotAllowed","MisdirectedRequest","MkActivity","MkCalendar","MkCol","MkRedirectRef","MkWorkspace","Move","MovedPermanently","MultiStatus","MultipleChoice","NetworkAuthenticationRequired","NoContent","NonAuthoritativeInformation","NotAcceptable","NotExtended","NotFound","NotImplemented","NotModified","Ok","Options","OrderPatch","PartialContent","Patch","PayloadTooLarge","PaymentRequired","PermanentRedirect","Post","PreconditionFailed","PreconditionRequired","Pri","PropFind","PropPatch","ProxyAuthenticationRequired","Put","Rebind","Report","RequestHeaderFieldsTooLarge","RequestTimeout","RequestedRangeNotSatisfiable","ResetContent","Search","SeeOther","ServiceUnavailable","Status","SwitchingProtocols","TemporaryRedirect","TestConn","TestTransport","TooEarly","TooManyRequests","Trace","Unauthorized","UnavailableForLegalReasons","Unbind","Uncheckout","Unlink","Unlock","UnprocessableEntity","UnsupportedMediaType","Update","UpdateRedirectRef","UpgradeRequired","UriTooLong","Url","VariantAlsoNegotiates","VersionControl","as_box_any","as_ref","as_ref","as_str","assert_body","assert_body_contains","assert_headers","assert_not_handled","assert_ok","assert_response","assert_status","block_on","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_reader","build","bytes","cannot_be_a_base","canonical_reason","chain","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","default","deref","deref_mut","domain","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from_directory_path","from_file_path","from_str","from_str","futures_lite","get_hash","get_hash","get_hash","has_authority","has_host","hash","hash","hash","host","host_str","index","index","index","index","init","into","into","into","into","into","into_string","is_client_error","is_informational","is_redirection","is_safe","is_server_error","is_success","join","make_relative","methods","new","on","options","origin","parse","parse_with_params","partial_cmp","partial_cmp","password","path","path_segments","path_segments_mut","poll_close","poll_close","poll_flush","poll_flush","poll_read","poll_read","poll_read_vectored","poll_write","poll_write","poll_write_vectored","port","port_or_known_default","prelude","query","query_pairs","query_pairs_mut","read","read","read_exact","read_to_end","read_to_string","read_vectored","run","run","scheme","secure","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","socket_addrs","take","take_request_body_string","take_response_body_string","to_file_path","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","username","vzip","vzip","vzip","vzip","vzip","with_peer_ip","with_request_body","with_request_header","with_server","with_socket","write","delete","get","patch","post","put","Accepted","Acl","BadGateway","BadRequest","BaselineControl","Bind","Checkin","Checkout","Conflict","Conn","Connect","Continue","Copy","Created","Delete","EarlyHints","ExpectationFailed","FailedDependency","Forbidden","Found","GatewayTimeout","Get","Gone","Head","HttpVersionNotSupported","ImATeapot","ImUsed","InsufficientStorage","InternalServerError","Label","LengthRequired","Link","Lock","Locked","LoopDetected","Merge","Method","MethodNotAllowed","MisdirectedRequest","MkActivity","MkCalendar","MkCol","MkRedirectRef","MkWorkspace","Move","MovedPermanently","MultiStatus","MultipleChoice","NetworkAuthenticationRequired","NoContent","NonAuthoritativeInformation","NotAcceptable","NotExtended","NotFound","NotImplemented","NotModified","Ok","Options","OrderPatch","PartialContent","Patch","PayloadTooLarge","PaymentRequired","PermanentRedirect","Post","PreconditionFailed","PreconditionRequired","Pri","PropFind","PropPatch","ProxyAuthenticationRequired","Put","Rebind","Report","RequestHeaderFieldsTooLarge","RequestTimeout","RequestedRangeNotSatisfiable","ResetContent","Search","SeeOther","ServiceUnavailable","Status","SwitchingProtocols","TemporaryRedirect","TooEarly","TooManyRequests","Trace","Unauthorized","UnavailableForLegalReasons","Unbind","Uncheckout","Unlink","Unlock","UnprocessableEntity","UnsupportedMediaType","Update","UpdateRedirectRef","UpgradeRequired","UriTooLong","VariantAlsoNegotiates","VersionControl","as_mut","as_ref","assert_body","assert_body_contains","assert_headers","assert_not_handled","assert_ok","assert_response","assert_status","borrow","borrow_mut","fmt","from","from","from","halt","headers","headers_mut","init","inner","inner_mut","into","into_inner","is_halted","is_secure","method","mut_state_or_insert_with","ok","path","pop_path","push_path","querystring","request_body","request_body_string","response_len","set_body","set_halted","set_state","set_status","state","state_mut","status","take_response_body","take_state","try_from","try_into","type_id","vzip","with_body","with_header","with_state","with_status"],"q":["trillium_testingtrillium_testing::methods","","","","","trillium_testing::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["202 Accepted","The ACL method modifies the access control list (which can …","Read bytes asynchronously.","Extension trait for <code>AsyncRead</code>.","Write bytes asynchronously.","502 Bad Gateway","400 Bad Request","A collection can be placed under baseline control with a …","The BIND method modifies the collection identified by the …","A CHECKIN request can be applied to a checked-out …","A CHECKOUT request can be applied to a checked-in …","409 Conflict","The CONNECT method requests that the recipient establish a …","100 Continue","The COPY method creates a duplicate of the source resource …","201 Created","The DELETE method requests that the origin server remove …","103 Early Hints","417 Expectation Failed","424 Failed Dependency","403 Forbidden","302 Found","504 Gateway Timeout","The GET method requests transfer of a current selected …","410 Gone","The HEAD method is identical to GET except that the server …","505 HTTP Version Not Supported","418 I’m a teapot","226 Im Used","507 Insufficient Storage","500 Internal Server Error","A LABEL request can be applied to a version to modify the …","411 Length Required","The LINK method establishes one or more Link relationships …","The LOCK method is used to take out a lock of any access …","423 Locked","508 Loop Detected","The MERGE method performs the logical merge of a specified …","HTTP request methods.","405 Method Not Allowed","421 Misdirected Request","A MKACTIVITY request creates a new activity resource.","An HTTP request using the MKCALENDAR method creates a new …","MKCOL creates a new collection resource at the location …","The MKREDIRECTREF method requests the creation of a …","A MKWORKSPACE request creates a new workspace resource.","The MOVE operation on a non-collection resource is the …","301 Moved Permanently","207 Multi-Status","300 Multiple Choice","511 Network Authentication Required","204 No Content","203 Non Authoritative Information","406 Not Acceptable","510 Not Extended","404 Not Found","501 Not Implemented","304 Not Modified","200 Ok","The OPTIONS method requests information about the …","The ORDERPATCH method is used to change the ordering …","206 Partial Content","The PATCH method requests that a set of changes described …","413 Payload Too Large","402 Payment Required","308 Permanent Redirect","The POST method requests that the target resource process …","412 Precondition Failed","428 Precondition Required","This method is never used by an actual client. This method …","The PROPFIND method retrieves properties defined on the …","The PROPPATCH method processes instructions specified in …","407 Proxy Authentication Required","The PUT method requests that the state of the target …","The REBIND method removes a binding to a resource from a …","A REPORT request is an extensible mechanism for obtaining …","431 Request Header Fields Too Large","408 Request Timeout","416 Requested Range Not Satisfiable","205 Reset Content","The client invokes the SEARCH method to initiate a …","303 See Other","503 Service Unavailable","HTTP response status codes.","101 Switching Protocols","307 Temporary Redirect","A wrapper around a <code>trillium::Conn</code> for testing","a readable and writable transport for testing","425 Too Early","429 Too Many Requests","The TRACE method requests a remote, application-level …","401 Unauthorized","451 Unavailable For Legal Reasons","The UNBIND method modifies the collection identified by …","An UNCHECKOUT request can be applied to a checked-out …","The UNLINK method removes one or more Link relationships …","The UNLOCK method removes the lock identified by the lock …","422 Unprocessable Entity","415 Unsupported Media Type","The UPDATE method modifies the content and dead properties …","The UPDATEREDIRECTREF method requests the update of a …","426 Upgrade Required","414 URI Too Long","A parsed URL record.","506 Variant Also Negotiates","A VERSION-CONTROL request can be used to create a …","","","","Return the serialization of this URL.","assert that the response body is as specified. this …","asserts that the response body matches the specified …","asserts any number of response headers","assert that all of the following are true:","assert_ok is like <code>assert_response!</code> except it always …","combines several other assertions. this assertion can be …","assert that the status code of a conn is as specified.","Runs the global and the local executor on the current …","","","","","","","","","","","Boxes the reader and changes its type to …","constructs a new TestConn with the provided method, path, …","Converts this <code>AsyncRead</code> into a <code>Stream</code> of bytes.","Return whether this URL is a cannot-be-a-base URL, meaning …","The canonical reason for a given status code","Creates an adapter which will chain this stream with …","","","","","","","","","close this transport, representing a disconnection","","","","","","If this URL has a host and it is a domain name (not an IP …","","","","","","","","","","","","","Return this URL’s fragment identifier, if any.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a directory name as <code>std::path::Path</code> into an URL in …","Convert a file name as <code>std::path::Path</code> into an URL in the …","","","","","","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","","","Return the parsed representation of the host for this URL. …","Return the string representation of the host (domain or IP …","","","","","initialize a handler","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the serialization of this URL.","Returns <code>true</code> if the status code is the <code>4xx</code> range.","Returns <code>true</code> if the status code is <code>1xx</code> range.","Returns <code>true</code> if the status code is the <code>3xx</code> range.","Whether a method is considered “safe”, meaning the …","Returns <code>true</code> if the status code is the <code>5xx</code> range.","Returns <code>true</code> if the status code is the <code>2xx</code> range.","Parse a string as an URL, with this URL as the base URL.","Creates a relative URL if possible, with this URL as the …","<code>TestConn</code> builders for http methods","constructs a new test transport pair, representing two …","blocks on running this conn against a handler and finalizes","Return a default <code>ParseOptions</code> that can fully configure the …","Return the origin of this URL (…","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator of …","Return an object with methods to manipulate this URL’s …","Attempt to close the object.","","Attempt to flush the object, ensuring that any buffered …","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to write bytes from <code>buf</code> into the object.","","Attempt to write bytes from <code>bufs</code> into the object using …","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","useful stuff for testing trillium apps","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a sequence …","Reads some bytes from the byte stream.","the read side of this transport","Reads the exact number of bytes required to fill <code>buf</code>.","Reads the entire contents and appends them to a <code>Vec</code>.","Reads the entire contents and appends them to a <code>String</code>.","Like <code>read()</code>, except it reads into a slice of buffers.","blocks on running this conn against a handler and finalizes","","Return the scheme of this URL, lower-cased, as an ASCII …","set the test conn to be secure","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","Resolve a URL’s host and port number to <code>SocketAddr</code>.","Creates an adapter which will read at most <code>limit</code> bytes …","Reads the request body to string and returns it","Reads the response body to string and returns it, if set. …","Assuming the URL is in the <code>file</code> scheme or similar, convert …","","","","","","","","","","","","","","","","","","","","","","","","","","Return the username for this URL (typically the empty …","","","","","","sets the peer ip for this test conn","chainable constructor to replace the request body. this is …","chainable constructor to append a request header to the …","Starts a trillium handler bound to a random available port …","start a trillium server on a random port for the provided …","the write side of this transport","Builds a new <code>TestConn</code> with the delete http method and the …","Builds a new <code>TestConn</code> with the get http method and the …","Builds a new <code>TestConn</code> with the patch http method and the …","Builds a new <code>TestConn</code> with the post http method and the …","Builds a new <code>TestConn</code> with the put http method and the …","202 Accepted","The ACL method modifies the access control list (which can …","502 Bad Gateway","400 Bad Request","A collection can be placed under baseline control with a …","The BIND method modifies the collection identified by the …","A CHECKIN request can be applied to a checked-out …","A CHECKOUT request can be applied to a checked-in …","409 Conflict","A Trillium HTTP connection.","The CONNECT method requests that the recipient establish a …","100 Continue","The COPY method creates a duplicate of the source resource …","201 Created","The DELETE method requests that the origin server remove …","103 Early Hints","417 Expectation Failed","424 Failed Dependency","403 Forbidden","302 Found","504 Gateway Timeout","The GET method requests transfer of a current selected …","410 Gone","The HEAD method is identical to GET except that the server …","505 HTTP Version Not Supported","418 I’m a teapot","226 Im Used","507 Insufficient Storage","500 Internal Server Error","A LABEL request can be applied to a version to modify the …","411 Length Required","The LINK method establishes one or more Link relationships …","The LOCK method is used to take out a lock of any access …","423 Locked","508 Loop Detected","The MERGE method performs the logical merge of a specified …","HTTP request methods.","405 Method Not Allowed","421 Misdirected Request","A MKACTIVITY request creates a new activity resource.","An HTTP request using the MKCALENDAR method creates a new …","MKCOL creates a new collection resource at the location …","The MKREDIRECTREF method requests the creation of a …","A MKWORKSPACE request creates a new workspace resource.","The MOVE operation on a non-collection resource is the …","301 Moved Permanently","207 Multi-Status","300 Multiple Choice","511 Network Authentication Required","204 No Content","203 Non Authoritative Information","406 Not Acceptable","510 Not Extended","404 Not Found","501 Not Implemented","304 Not Modified","200 Ok","The OPTIONS method requests information about the …","The ORDERPATCH method is used to change the ordering …","206 Partial Content","The PATCH method requests that a set of changes described …","413 Payload Too Large","402 Payment Required","308 Permanent Redirect","The POST method requests that the target resource process …","412 Precondition Failed","428 Precondition Required","This method is never used by an actual client. This method …","The PROPFIND method retrieves properties defined on the …","The PROPPATCH method processes instructions specified in …","407 Proxy Authentication Required","The PUT method requests that the state of the target …","The REBIND method removes a binding to a resource from a …","A REPORT request is an extensible mechanism for obtaining …","431 Request Header Fields Too Large","408 Request Timeout","416 Requested Range Not Satisfiable","205 Reset Content","The client invokes the SEARCH method to initiate a …","303 See Other","503 Service Unavailable","HTTP response status codes.","101 Switching Protocols","307 Temporary Redirect","425 Too Early","429 Too Many Requests","The TRACE method requests a remote, application-level …","401 Unauthorized","451 Unavailable For Legal Reasons","The UNBIND method modifies the collection identified by …","An UNCHECKOUT request can be applied to a checked-out …","The UNLINK method removes one or more Link relationships …","The UNLOCK method removes the lock identified by the lock …","422 Unprocessable Entity","415 Unsupported Media Type","The UPDATE method modifies the content and dead properties …","The UPDATEREDIRECTREF method requests the update of a …","426 Upgrade Required","414 URI Too Long","506 Variant Also Negotiates","A VERSION-CONTROL request can be used to create a …","","","","","","","","","","","","","","Returns the argument unchanged.","","sets the <code>halted</code> attribute of this conn, preventing later …","returns the request headers","returns the mutable response headers","","returns an immutable reference to the inner …","returns a mutable reference to the inner …","Calls <code>U::from(self)</code>.","transforms this <code>trillium::Conn</code> into a <code>trillium_http::Conn</code> …","retrieves the halted state of this conn.  see <code>Conn::halt</code>.","predicate function to indicate whether the connection is …","returns the request method for this conn.","Either returns the current &amp;mut T from the state set, or …","<code>Conn::ok</code> is a convenience function for the common pattern …","returns the path for this request. note that this may not …","for router implementations. removes a route segment onto …","for router implementations. pushes a route segment onto …","returns query part of the request path","Returns a ReceivedBody that references this <code>Conn</code>. The <code>Conn</code> …","Convenience function to read the content of a request body …","if there is a response body for this conn and it has a …","Sets the response body from any <code>impl Into&lt;Body&gt;</code>. Note that …","sets the <code>halted</code> attribute of this conn. see <code>Conn::halt</code>.","Puts a new type into the state set. see <code>Conn::state</code> for an …","assigns a status to this response. see <code>Conn::status</code> for …","Attempts to retrieve a &amp;T from the state set","Attempts to retrieve a &amp;mut T from the state set","returns the response status for this <code>Conn</code>, if it has been …","Removes the response body from the <code>Conn</code>","Removes a type from the state set and returns it, if …","","","","","Sets the response body from any <code>impl Into&lt;Body&gt;</code> and …","insert a header name and value/values into the response …","Puts a new type into the state set and returns the <code>Conn</code>. …","sets the response status for this <code>Conn</code> and returns it. …"],"i":[1,2,0,0,0,1,1,2,2,2,2,1,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,1,2,1,2,2,1,1,2,0,1,1,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,1,1,1,2,1,1,2,2,2,1,2,2,2,1,1,1,1,2,1,1,0,1,1,0,0,1,1,2,1,1,2,2,2,2,1,1,2,2,1,1,0,1,2,3,4,2,4,0,0,0,0,0,0,0,0,3,5,4,1,2,3,5,4,1,2,6,5,6,4,1,6,3,4,1,2,3,4,1,2,3,4,2,3,5,5,4,4,1,1,2,3,5,4,4,1,1,2,2,4,3,5,4,1,2,4,4,4,2,0,4,1,2,4,4,4,1,2,4,4,4,4,4,4,0,3,5,4,1,2,4,1,1,1,2,1,1,4,4,0,3,5,4,4,4,4,4,2,4,4,4,4,7,3,7,3,8,3,8,7,3,7,4,4,0,4,4,4,6,3,6,6,6,6,5,1,4,5,4,4,4,4,4,4,4,4,4,4,6,5,5,4,3,4,1,2,4,1,2,3,5,4,4,1,1,2,2,3,5,4,1,2,3,5,4,1,2,4,3,5,4,1,2,5,5,5,0,0,3,0,0,0,0,0,1,2,1,1,2,2,2,2,1,0,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,1,2,1,2,2,1,1,2,0,1,1,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,1,1,1,2,1,1,2,2,2,1,2,2,2,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,2,2,2,2,1,1,2,2,1,1,1,2,9,9,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["url",3]],["str",0]],[[["method",4]],["str",0]],[[["url",3]],["str",0]],null,null,null,null,null,null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["pin",3,[["box",3,[["asyncread",8],["global",3]]]]]],[[["into",8,[["string",3]]],["into",8,[["synthetic",3]]]],["testconn",3]],[[],["bytes",3]],[[["url",3]],["bool",0]],[[["status",4]],["str",0]],[[],["chain",3]],[[["testtransport",3]],["testtransport",3]],[[["url",3]],["url",3]],[[["status",4]],["status",4]],[[["method",4]],["method",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["testtransport",3]]],[[["url",3],["url",3]],["ordering",4]],[[["method",4],["method",4]],["ordering",4]],[[],["testtransport",3]],[[["testconn",3]]],[[["testconn",3]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3],["url",3]],["bool",0]],[[["status",4],["status",4]],["bool",0]],[[["status",4],["u16",0]],["bool",0]],[[["method",4],["method",4]],["bool",0]],[[["testtransport",3],["formatter",3]],["result",6]],[[["testconn",3],["formatter",3]],["result",6]],[[["url",3],["formatter",3]],["result",4,[["error",3]]]],[[["url",3],["formatter",3]],["result",4,[["error",3]]]],[[["status",4],["formatter",3]],["result",4,[["error",3]]]],[[["status",4],["formatter",3]],["result",4,[["error",3]]]],[[["method",4],["formatter",3]],["result",4,[["error",3]]]],[[["method",4],["formatter",3]],["result",4,[["error",3]]]],[[["url",3]],["option",4,[["str",0]]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["url",3]]]],[[],["result",4,[["url",3]]]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["str",0]],["result",4,[["method",4]]]],null,[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["url",3]],["bool",0]],[[["url",3]],["bool",0]],[[["url",3],["",0]]],[[["status",4],["",0]]],[[["method",4],["",0]]],[[["url",3]],["option",4,[["host",4,[["str",0]]]]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3],["range",3,[["position",4]]]],["str",0]],[[["url",3],["rangeto",3,[["position",4]]]],["str",0]],[[["url",3],["rangefull",3]],["str",0]],[[["url",3],["rangefrom",3,[["position",4]]]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["url",3]],["string",3]],[[["status",4]],["bool",0]],[[["status",4]],["bool",0]],[[["status",4]],["bool",0]],[[["method",4]],["bool",0]],[[["status",4]],["bool",0]],[[["status",4]],["bool",0]],[[["url",3],["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["url",3],["url",3]],["option",4,[["string",3]]]],null,[[]],[[["testconn",3]],["testconn",3]],[[],["parseoptions",3]],[[["url",3]],["origin",4]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["url",3],["url",3]],["option",4,[["ordering",4]]]],[[["method",4],["method",4]],["option",4,[["ordering",4]]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3]],["str",0]],[[["url",3]],["option",4,[["split",3,[["char",0]]]]]],[[["url",3]],["result",4,[["pathsegmentsmut",3]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["testtransport",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3,[["testtransport",3]]],["context",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3,[["testtransport",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3,[["testtransport",3]]],["context",3]],["poll",4,[["result",6,[["usize",0]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["url",3]],["option",4,[["u16",0]]]],[[["url",3]],["option",4,[["u16",0]]]],null,[[["url",3]],["option",4,[["str",0]]]],[[["url",3]],["parse",3]],[[["url",3]],["serializer",3,[["urlquery",3]]]],[[["",0]],["readfuture",3]],null,[[["",0]],["readexactfuture",3]],[[["",0],["vec",3]],["readtoendfuture",3]],[[["",0],["string",3]],["readtostringfuture",3]],[[["",0]],["readvectoredfuture",3]],[[["testconn",3]],["testconn",3]],[[["status",4],["conn",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["str",0]],[[["testconn",3]],["testconn",3]],[[["url",3],["option",4,[["str",0]]]]],[[["url",3],["option",4,[["str",0]]]],["result",4,[["parseerror",4]]]],[[["url",3],["ipaddr",4]],["result",4]],[[["url",3],["option",4,[["str",0]]]],["result",4]],[[["url",3],["str",0]]],[[["url",3],["option",4,[["u16",0]]]],["result",4]],[[["url",3],["option",4,[["str",0]]]]],[[["url",3],["str",0]],["result",4]],[[["url",3],["str",0]],["result",4]],[[["url",3],["fn",8]],["result",4,[["vec",3,[["socketaddr",4],["global",3]]],["error",3]]]],[[["u64",0]],["take",3]],[[["testconn",3]],["string",3]],[[["testconn",3]],["option",4,[["string",3]]]],[[["url",3]],["result",4,[["pathbuf",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4,[["url",3]]]],[[],["result",4]],[[],["result",4]],[[["u16",0]],["result",4,[["status",4]]]],[[],["result",4]],[[["str",0]],["result",4,[["method",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["url",3]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[["testconn",3],["ipaddr",4]],["testconn",3]],[[["testconn",3],["into",8,[["synthetic",3]]]],["testconn",3]],[[["testconn",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]],["testconn",3]],[[]],[[]],null,[[["into",8,[["string",3]]]],["testconn",3]],[[["into",8,[["string",3]]]],["testconn",3]],[[["into",8,[["string",3]]]],["testconn",3]],[[["into",8,[["string",3]]]],["testconn",3]],[[["into",8,[["string",3]]]],["testconn",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["conn",3]],["stateset",3]],[[["conn",3]],["stateset",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["conn",3],["formatter",3]],["result",4,[["error",3]]]],[[["testconn",3]],["conn",3]],[[]],[[["conn",3]],["conn",3]],[[["conn",3]],["conn",3]],[[["conn",3]],["headers",3]],[[["conn",3]],["headers",3]],null,[[["conn",3]],["conn",3]],[[["conn",3]],["conn",3]],[[]],[[["conn",3]],["conn",3]],[[["conn",3]],["bool",0]],[[["conn",3]],["bool",0]],[[["conn",3]],["method",4]],[[["conn",3]],["",0]],[[["conn",3],["into",8,[["body",3]]]],["conn",3]],[[["conn",3]],["str",0]],[[["conn",3]]],[[["conn",3],["string",3]]],[[["conn",3]],["str",0]],[[["conn",3]],["future",8]],[[["conn",3]],["future",8]],[[["conn",3]],["option",4,[["u64",0]]]],[[["conn",3],["into",8,[["body",3]]]]],[[["conn",3],["bool",0]]],[[["conn",3]],["option",4]],[[["conn",3],["tryinto",8,[["status",4]]]]],[[["conn",3]],["option",4]],[[["conn",3]],["option",4]],[[["conn",3]],["option",4,[["status",4]]]],[[["conn",3]],["option",4,[["body",3]]]],[[["conn",3]],["option",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["conn",3],["into",8,[["body",3]]]],["conn",3]],[[["conn",3],["into",8,[["headername",3]]],["into",8,[["headervalues",3]]]],["conn",3]],[[["conn",3]],["conn",3]],[[["conn",3],["tryinto",8,[["status",4]]]],["conn",3]]],"p":[[4,"Status"],[4,"Method"],[3,"TestTransport"],[3,"Url"],[3,"TestConn"],[8,"AsyncReadExt"],[8,"AsyncWrite"],[8,"AsyncRead"],[3,"Conn"]]},\
"trillium_tls_common":{"doc":"This crate provides the common interface for server-side …","t":[8,8,8,16,8,16,16,16,3,10,11,11,23,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Acceptor","AsyncRead","AsyncWrite","Config","Connector","Error","Output","Transport","Url","accept","as_ref","as_str","async_trait","borrow","borrow_mut","cannot_be_a_base","clone","clone_into","cmp","connect","domain","eq","fmt","fmt","fragment","from","from_directory_path","from_file_path","from_str","has_authority","has_host","hash","host","host_str","index","index","index","index","into","into_string","join","make_relative","options","origin","parse","parse_with_params","partial_cmp","password","path","path_segments","path_segments_mut","peer_addr","poll_close","poll_flush","poll_read","poll_read_vectored","poll_write","poll_write_vectored","port","port_or_known_default","query","query_pairs","query_pairs_mut","scheme","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","socket_addrs","spawn","to_file_path","to_owned","to_string","try_from","try_from","try_into","type_id","username"],"q":["trillium_tls_common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This trait provides the common interface for server-side …","Read bytes asynchronously.","Write bytes asynchronously.","A type that can be used to configure this Connector. It …","Interface for runtime and tls adapters for the trillium …","An error type that <code>Acceptor::accept</code> may return","The stream type. For example, TlsStream","The async read + write type for this connector, often a …","A parsed URL record.","Transform an Input (…","","Return the serialization of this URL.","","","","Return whether this URL is a cannot-be-a-base URL, meaning …","","","","Initiate a connection to the provided url, using the …","If this URL has a host and it is a domain name (not an IP …","","","","Return this URL’s fragment identifier, if any.","Returns the argument unchanged.","Convert a directory name as <code>std::path::Path</code> into an URL in …","Convert a file name as <code>std::path::Path</code> into an URL in the …","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","Return the parsed representation of the host for this URL. …","Return the string representation of the host (domain or IP …","","","","","Calls <code>U::from(self)</code>.","Return the serialization of this URL.","Parse a string as an URL, with this URL as the base URL.","Creates a relative URL if possible, with this URL as the …","Return a default <code>ParseOptions</code> that can fully configure the …","Return the origin of this URL (…","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator of …","Return an object with methods to manipulate this URL’s …","A SocketAddr representation of the other side of this …","Attempt to close the object.","Attempt to flush the object, ensuring that any buffered …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a sequence …","Return the scheme of this URL, lower-cased, as an ASCII …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","Resolve a URL’s host and port number to <code>SocketAddr</code>.","Spawn and detach a task on the runtime. Although this may …","Assuming the URL is in the <code>file</code> scheme or similar, convert …","","","","","","","Return the username for this URL (typically the empty …"],"i":[0,0,0,1,0,2,2,1,0,2,3,3,0,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,4,4,5,5,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["url",3]],["str",0]],[[["url",3]],["str",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["url",3]],["bool",0]],[[["url",3]],["url",3]],[[["",0],["",0]]],[[["url",3],["url",3]],["ordering",4]],[[["url",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3],["url",3]],["bool",0]],[[["url",3],["formatter",3]],["result",4,[["error",3]]]],[[["url",3],["formatter",3]],["result",4,[["error",3]]]],[[["url",3]],["option",4,[["str",0]]]],[[]],[[],["result",4,[["url",3]]]],[[],["result",4,[["url",3]]]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["url",3]],["bool",0]],[[["url",3]],["bool",0]],[[["url",3],["",0]]],[[["url",3]],["option",4,[["host",4,[["str",0]]]]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3],["range",3,[["position",4]]]],["str",0]],[[["url",3],["rangeto",3,[["position",4]]]],["str",0]],[[["url",3],["rangefull",3]],["str",0]],[[["url",3],["rangefrom",3,[["position",4]]]],["str",0]],[[]],[[["url",3]],["string",3]],[[["url",3],["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["url",3],["url",3]],["option",4,[["string",3]]]],[[],["parseoptions",3]],[[["url",3]],["origin",4]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["str",0]],["result",4,[["url",3],["parseerror",4]]]],[[["url",3],["url",3]],["option",4,[["ordering",4]]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3]],["str",0]],[[["url",3]],["option",4,[["split",3,[["char",0]]]]]],[[["url",3]],["result",4,[["pathsegmentsmut",3]]]],[[],["result",6,[["socketaddr",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["error",3]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["pin",3],["context",3]],["poll",4,[["result",4,[["usize",0],["error",3]]]]]],[[["url",3]],["option",4,[["u16",0]]]],[[["url",3]],["option",4,[["u16",0]]]],[[["url",3]],["option",4,[["str",0]]]],[[["url",3]],["parse",3]],[[["url",3]],["serializer",3,[["urlquery",3]]]],[[["url",3]],["str",0]],[[["url",3],["option",4,[["str",0]]]]],[[["url",3],["option",4,[["str",0]]]],["result",4,[["parseerror",4]]]],[[["url",3],["ipaddr",4]],["result",4]],[[["url",3],["option",4,[["str",0]]]],["result",4]],[[["url",3],["str",0]]],[[["url",3],["option",4,[["u16",0]]]],["result",4]],[[["url",3],["option",4,[["str",0]]]]],[[["url",3],["str",0]],["result",4]],[[["url",3],["str",0]],["result",4]],[[["url",3],["fn",8]],["result",4,[["vec",3,[["socketaddr",4],["global",3]]],["error",3]]]],[[]],[[["url",3]],["result",4,[["pathbuf",3]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[["str",0]],["result",4,[["url",3]]]],[[],["result",4]],[[["",0]],["typeid",3]],[[["url",3]],["str",0]]],"p":[[8,"Connector"],[8,"Acceptor"],[3,"Url"],[8,"AsyncWrite"],[8,"AsyncRead"]]},\
"trillium_tokio":{"doc":"Trillium server adapter for tokio","t":[3,3,3,2,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,5,5,11,11,11,11,11,11,11,2,2,11,11,11,11,11,11,12,11,11,11],"n":["ClientConfig","Stopper","TcpConnector","async_compat","block_on","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","config","connect","default","default","fmt","fmt","fmt","from","from","from","into","into","into","is_stopped","linger","new","nodelay","peer_addr","run","run_async","spawn","stop","stop_future","stop_stream","to_owned","to_owned","to_owned","tokio","tokio_stream","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id"],"q":["trillium_tokio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["configuration for the tcp Connector","This struct provides a synchronized mechanism for canceling","trillium client Connector for tokio","","reexport tokio runtime block_on","","","","","","","","","","","","","","","","","","","","","","Configures a server before running it","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this stopper (or any clone of it) has been …","sets SO_LINGER. I don’t really understand this, but see …","Initialize a stopper that is not yet stopped and that has …","disable nagle’s algorithm see <code>TcpStream::set_nodelay</code> for …","","Runs a trillium handler in a sync context with default …","Runs a trillium handler in an async context with default …","","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","","","","","","","","","","","","time to live for the tcp protocol. set <code>TcpStream::set_ttl</code> …","","",""],"i":[0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,2,1,3,1,2,3,1,2,3,1,2,3,3,1,3,1,2,0,0,2,3,3,3,1,2,3,0,0,1,2,3,1,2,3,1,1,2,3],"f":[null,null,null,null,[[["future",8]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["clientconfig",3]],["clientconfig",3]],[[["tcpconnector",3]],["tcpconnector",3]],[[["stopper",3]],["stopper",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["compat",3]],[[],["compat",3]],[[],["compat",3]],[[["",0]],["compat",3]],[[["",0]],["compat",3]],[[["",0]],["compat",3]],[[["",0]],["compat",3]],[[["",0]],["compat",3]],[[["",0]],["compat",3]],[[],["config",3,[["tokioserver",3]]]],[[["url",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["clientconfig",3]],[[],["stopper",3]],[[["clientconfig",3],["formatter",3]],["result",6]],[[["tcpconnector",3],["formatter",3]],["result",6]],[[["stopper",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["stopper",3]],["bool",0]],null,[[],["stopper",3]],null,[[],["result",6,[["socketaddr",4]]]],[[["handler",8]]],[[["handler",8]],["future",8]],[[]],[[["stopper",3]]],[[["stopper",3]],["futurestopper",3]],[[["stopper",3]],["streamstopper",3]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"ClientConfig"],[3,"TcpConnector"],[3,"Stopper"]]},\
"trillium_websockets":{"doc":"A websocket trillium handler","t":[13,13,13,13,13,4,13,13,13,13,4,16,13,13,13,6,13,13,13,13,13,3,3,3,8,12,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AlreadyClosed","Binary","Capacity","Close","ConnectionClosed","Error","Frame","Http","HttpFormat","Io","Message","OutboundStream","Ping","Pong","Protocol","Result","SendQueueFull","Text","Tls","Url","Utf8","WebSocket","WebSocketConfig","WebSocketConn","WebSocketHandler","accept_unmasked_frames","as_mut","as_ref","async_tungstenite","binary","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","close","connect","default","deref","deref_mut","disconnect","disconnect","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","has_upgrade","headers","inbound","inbound","inbound_stream","into","into","into","into","into","into_data","into_non_blocking","into_text","is_binary","is_close","is_empty","is_ping","is_pong","is_text","len","max_frame_size","max_message_size","max_send_queue","method","ne","new","path","poll_next","querystring","run","send","send","send","send_bytes","send_string","set_state","source","state","state_mut","stopper","take_inbound_stream","take_state","text","to_owned","to_owned","to_string","to_string","to_text","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll_next","tungstenite","type_id","type_id","type_id","type_id","type_id","upgrade","vzip","vzip","vzip","vzip","vzip","websocket","with_protocol_config","with_protocols","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["trillium_websockets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trillium_websockets::Error","","","","","","","","trillium_websockets::Message","","","","",""],"d":["Trying to work with already closed connection.","A binary WebSocket message","When reading: buffer capacity exhausted.When writing: your …","A close message with the optional close frame.","WebSocket connection closed normally. This informs you of …","Possible WebSocket errors.","Raw frame. Note, that you’re not going to get this value …","HTTP error.","HTTP format error.","Input-output error. Apart from WouldBlock, these are …","An enum representing the various forms of a WebSocket …","A <code>Stream</code> type that represents <code>Message</code>s to be sent to this …","A ping message with the specified payload","A pong message with the specified payload","Protocol violation.","a Result type for websocket messages","Message send queue full.","A text WebSocket message","TLS error.","Invalid URL.","UTF coding error.","The trillium handler. See crate-level docs for example …","The configuration for WebSocket connection.","A struct that represents an specific websocket connection.","This is the trait that defines a handler for trillium …","When set to <code>true</code>, the server will accept and handle …","","","","Create a new binary WebSocket message by converting to Vec.","","","","","","","","","","","","","","","close the websocket connection gracefully","This interface is the only mandatory function in …","","","","This interface function is called with the websocket conn …","This interface function is called with the websocket conn …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","retrieve the request headers for this conn","This interface function is called once with every message …","This interface function is called once with every message …","borrow the inbound Message stream from this conn","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume the WebSocket and return it as binary data.","","Attempt to consume the WebSocket message and convert it to …","Indicates whether a message is a binary message.","Indicates whether a message ia s close message.","Returns true if the WebSocket message has no content. For …","Indicates whether a message is a ping message.","Indicates whether a message is a pong message.","Indicates whether a message is a text message.","Get the length of the WebSocket message.","The maximum size of a single message frame. <code>None</code> means no …","The maximum size of a message. <code>None</code> means no size limit. …","The size of the send queue. You can use it to turn on/off …","retrieve the request method for this conn","","Build a new WebSocket with an async handler function that …","retrieves the path part of the request url, up to and …","","Retrieves the query component of the path, excluding <code>?</code>. …","","Sends a <code>Message</code> to the client","This interface function is called once with every outbound …","This interface function is called once with every outbound …","send a <code>Message::Binary</code> variant","send a <code>Message::Text</code> variant","set state on this connection","","retrieve state from the state set that has been …","retrieve a mutable borrow of the state from the state set","retrieve a clone of the server’s <code>Stopper</code>","take the inbound Message stream from this conn","take some type T out of the state set that has been …","Create a new text WebSocket message from a stringable.","","","","","Attempt to get a &amp;str from the WebSocket message, this …","","","","","","","","","","","","","","","","","","","","","","","","Builds a new trillium handler from the provided …","configure the websocket protocol","<code>protocols</code> is a sequence of known protocols. On successful …","","","","","","","","","","","","","",""],"i":[1,2,1,2,1,0,2,1,1,1,0,3,2,2,1,0,1,2,1,1,1,0,0,0,0,4,5,5,0,2,5,6,1,2,4,5,6,1,2,4,2,4,2,4,5,3,4,6,6,3,3,2,5,6,1,1,2,2,4,5,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,4,6,5,3,3,5,5,6,1,2,4,2,1,2,2,2,2,2,2,2,2,4,4,4,5,2,6,5,5,5,6,5,3,3,5,5,5,1,5,5,5,5,5,2,2,4,1,2,2,5,6,1,2,4,5,6,1,2,4,5,0,5,6,1,2,4,6,5,6,1,2,4,0,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["websocketconn",3]],["stateset",3]],[[["websocketconn",3]],["stateset",3]],null,[[],["message",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["message",4]],["message",4]],[[["websocketconfig",3]],["websocketconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["websocketconn",3]],["future",8]],[[["",0],["websocketconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["websocketconfig",3]],[[["websocket",3]]],[[["websocket",3]]],[[["",0],["websocketconn",3],["option",4,[["closeframe",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["websocketconn",3],["option",4,[["closeframe",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["message",4],["message",4]],["bool",0]],[[["websocketconn",3],["formatter",3]],["result",6]],[[["websocket",3,[["debug",8]]],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[["message",4],["formatter",3]],["result",4,[["error",3]]]],[[["message",4],["formatter",3]],["result",4,[["error",3]]]],[[["websocketconfig",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["error",4]],["error",4]],[[["tostrerror",3]],["error",4]],[[["protocolerror",4]],["error",4]],[[["invalidheadername",3]],["error",4]],[[["invalidstatuscode",3]],["error",4]],[[["error",3]],["error",4]],[[["urlerror",4]],["error",4]],[[["utf8error",3]],["error",4]],[[["capacityerror",4]],["error",4]],[[["invaliduri",3]],["error",4]],[[["tlserror",4]],["error",4]],[[["fromutf8error",3]],["error",4]],[[["invalidheadervalue",3]],["error",4]],[[]],[[["error",3]],["error",4]],[[]],[[],["message",4]],[[["str",0]],["message",4]],[[["string",3]],["message",4]],[[["vec",3,[["u8",0],["global",3]]]],["message",4]],[[]],[[["websocket",3],["upgrade",6]],["bool",0]],[[["websocketconn",3]],["headers",3]],[[["",0],["message",4],["websocketconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["message",4],["websocketconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["websocketconn",3]],["option",4,[["stream",8]]]],[[]],[[]],[[]],[[]],[[]],[[["message",4]],["vec",3,[["u8",0],["global",3]]]],[[["error",4]],["option",4,[["error",4]]]],[[["message",4]],["result",4,[["string",3],["error",4]]]],[[["message",4]],["bool",0]],[[["message",4]],["bool",0]],[[["message",4]],["bool",0]],[[["message",4]],["bool",0]],[[["message",4]],["bool",0]],[[["message",4]],["bool",0]],[[["message",4]],["usize",0]],null,null,null,[[["websocketconn",3]],["method",4]],[[["message",4],["message",4]],["bool",0]],[[],["websocket",3]],[[["websocketconn",3]],["str",0]],[[["pin",3,[["websocketconn",3]]],["context",3]],["poll",4,[["option",4]]]],[[["websocketconn",3]],["str",0]],[[["websocket",3],["conn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["websocketconn",3],["message",4]],["future",8]],[[["",0],["message",4],["websocketconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["message",4],["websocketconn",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["websocketconn",3],["vec",3,[["u8",0]]]],["future",8]],[[["websocketconn",3],["string",3]],["future",8]],[[["websocketconn",3],["",26,[["send",8],["sync",8]]]]],[[["error",4]],["option",4,[["error",8]]]],[[["websocketconn",3]],["option",4]],[[["websocketconn",3]],["option",4]],[[["websocketconn",3]],["stopper",3]],[[["websocketconn",3]],["option",4,[["stream",8]]]],[[["websocketconn",3]],["option",4]],[[],["message",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["message",4]],["result",4,[["str",0],["error",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["websocket",3],["upgrade",6]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[],["websocket",3]],[[["websocket",3],["websocketconfig",3]],["websocket",3]],[[["websocket",3]],["websocket",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Error"],[4,"Message"],[8,"WebSocketHandler"],[3,"WebSocketConfig"],[3,"WebSocketConn"],[3,"WebSocket"],[13,"Io"],[13,"Tls"],[13,"Capacity"],[13,"Protocol"],[13,"SendQueueFull"],[13,"Url"],[13,"Http"],[13,"HttpFormat"],[13,"Text"],[13,"Binary"],[13,"Ping"],[13,"Pong"],[13,"Close"],[13,"Frame"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
